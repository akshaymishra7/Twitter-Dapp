{"ast":null,"code":"'use strict';\n\nconst {\n  fromCallback\n} = require('catering');\n\nconst ModuleError = require('module-error');\n\nconst {\n  getOptions,\n  getCallback\n} = require('./lib/common');\n\nconst kPromise = Symbol('promise');\nconst kCallback = Symbol('callback');\nconst kWorking = Symbol('working');\nconst kHandleOne = Symbol('handleOne');\nconst kHandleMany = Symbol('handleMany');\nconst kAutoClose = Symbol('autoClose');\nconst kFinishWork = Symbol('finishWork');\nconst kReturnMany = Symbol('returnMany');\nconst kClosing = Symbol('closing');\nconst kHandleClose = Symbol('handleClose');\nconst kClosed = Symbol('closed');\nconst kCloseCallbacks = Symbol('closeCallbacks');\nconst kKeyEncoding = Symbol('keyEncoding');\nconst kValueEncoding = Symbol('valueEncoding');\nconst kAbortOnClose = Symbol('abortOnClose');\nconst kLegacy = Symbol('legacy');\nconst kKeys = Symbol('keys');\nconst kValues = Symbol('values');\nconst kLimit = Symbol('limit');\nconst kCount = Symbol('count');\nconst emptyOptions = Object.freeze({});\n\nconst noop = () => {};\n\nlet warnedEnd = false; // This class is an internal utility for common functionality between AbstractIterator,\n// AbstractKeyIterator and AbstractValueIterator. It's not exported.\n\nclass CommonIterator {\n  constructor(db, options, legacy) {\n    if (typeof db !== 'object' || db === null) {\n      const hint = db === null ? 'null' : typeof db;\n      throw new TypeError(`The first argument must be an abstract-level database, received ${hint}`);\n    }\n\n    if (typeof options !== 'object' || options === null) {\n      throw new TypeError('The second argument must be an options object');\n    }\n\n    this[kClosed] = false;\n    this[kCloseCallbacks] = [];\n    this[kWorking] = false;\n    this[kClosing] = false;\n    this[kAutoClose] = false;\n    this[kCallback] = null;\n    this[kHandleOne] = this[kHandleOne].bind(this);\n    this[kHandleMany] = this[kHandleMany].bind(this);\n    this[kHandleClose] = this[kHandleClose].bind(this);\n    this[kKeyEncoding] = options[kKeyEncoding];\n    this[kValueEncoding] = options[kValueEncoding];\n    this[kLegacy] = legacy;\n    this[kLimit] = Number.isInteger(options.limit) && options.limit >= 0 ? options.limit : Infinity;\n    this[kCount] = 0; // Undocumented option to abort pending work on close(). Used by the\n    // many-level module as a temporary solution to a blocked close().\n    // TODO (next major): consider making this the default behavior. Native\n    // implementations should have their own logic to safely close iterators.\n\n    this[kAbortOnClose] = !!options.abortOnClose;\n    this.db = db;\n    this.db.attachResource(this);\n    this.nextTick = db.nextTick;\n  }\n\n  get count() {\n    return this[kCount];\n  }\n\n  get limit() {\n    return this[kLimit];\n  }\n\n  next(callback) {\n    let promise;\n\n    if (callback === undefined) {\n      promise = new Promise((resolve, reject) => {\n        callback = (err, key, value) => {\n          if (err) reject(err);else if (!this[kLegacy]) resolve(key);else if (key === undefined && value === undefined) resolve();else resolve([key, value]);\n        };\n      });\n    } else if (typeof callback !== 'function') {\n      throw new TypeError('Callback must be a function');\n    }\n\n    if (this[kClosing]) {\n      this.nextTick(callback, new ModuleError('Iterator is not open: cannot call next() after close()', {\n        code: 'LEVEL_ITERATOR_NOT_OPEN'\n      }));\n    } else if (this[kWorking]) {\n      this.nextTick(callback, new ModuleError('Iterator is busy: cannot call next() until previous call has completed', {\n        code: 'LEVEL_ITERATOR_BUSY'\n      }));\n    } else {\n      this[kWorking] = true;\n      this[kCallback] = callback;\n      if (this[kCount] >= this[kLimit]) this.nextTick(this[kHandleOne], null);else this._next(this[kHandleOne]);\n    }\n\n    return promise;\n  }\n\n  _next(callback) {\n    this.nextTick(callback);\n  }\n\n  nextv(size, options, callback) {\n    callback = getCallback(options, callback);\n    callback = fromCallback(callback, kPromise);\n    options = getOptions(options, emptyOptions);\n\n    if (!Number.isInteger(size)) {\n      this.nextTick(callback, new TypeError(\"The first argument 'size' must be an integer\"));\n      return callback[kPromise];\n    }\n\n    if (this[kClosing]) {\n      this.nextTick(callback, new ModuleError('Iterator is not open: cannot call nextv() after close()', {\n        code: 'LEVEL_ITERATOR_NOT_OPEN'\n      }));\n    } else if (this[kWorking]) {\n      this.nextTick(callback, new ModuleError('Iterator is busy: cannot call nextv() until previous call has completed', {\n        code: 'LEVEL_ITERATOR_BUSY'\n      }));\n    } else {\n      if (size < 1) size = 1;\n      if (this[kLimit] < Infinity) size = Math.min(size, this[kLimit] - this[kCount]);\n      this[kWorking] = true;\n      this[kCallback] = callback;\n      if (size <= 0) this.nextTick(this[kHandleMany], null, []);else this._nextv(size, options, this[kHandleMany]);\n    }\n\n    return callback[kPromise];\n  }\n\n  _nextv(size, options, callback) {\n    const acc = [];\n\n    const onnext = (err, key, value) => {\n      if (err) {\n        return callback(err);\n      } else if (this[kLegacy] ? key === undefined && value === undefined : key === undefined) {\n        return callback(null, acc);\n      }\n\n      acc.push(this[kLegacy] ? [key, value] : key);\n\n      if (acc.length === size) {\n        callback(null, acc);\n      } else {\n        this._next(onnext);\n      }\n    };\n\n    this._next(onnext);\n  }\n\n  all(options, callback) {\n    callback = getCallback(options, callback);\n    callback = fromCallback(callback, kPromise);\n    options = getOptions(options, emptyOptions);\n\n    if (this[kClosing]) {\n      this.nextTick(callback, new ModuleError('Iterator is not open: cannot call all() after close()', {\n        code: 'LEVEL_ITERATOR_NOT_OPEN'\n      }));\n    } else if (this[kWorking]) {\n      this.nextTick(callback, new ModuleError('Iterator is busy: cannot call all() until previous call has completed', {\n        code: 'LEVEL_ITERATOR_BUSY'\n      }));\n    } else {\n      this[kWorking] = true;\n      this[kCallback] = callback;\n      this[kAutoClose] = true;\n      if (this[kCount] >= this[kLimit]) this.nextTick(this[kHandleMany], null, []);else this._all(options, this[kHandleMany]);\n    }\n\n    return callback[kPromise];\n  }\n\n  _all(options, callback) {\n    // Must count here because we're directly calling _nextv()\n    let count = this[kCount];\n    const acc = [];\n\n    const nextv = () => {\n      // Not configurable, because implementations should optimize _all().\n      const size = this[kLimit] < Infinity ? Math.min(1e3, this[kLimit] - count) : 1e3;\n\n      if (size <= 0) {\n        this.nextTick(callback, null, acc);\n      } else {\n        this._nextv(size, emptyOptions, onnextv);\n      }\n    };\n\n    const onnextv = (err, items) => {\n      if (err) {\n        callback(err);\n      } else if (items.length === 0) {\n        callback(null, acc);\n      } else {\n        acc.push.apply(acc, items);\n        count += items.length;\n        nextv();\n      }\n    };\n\n    nextv();\n  }\n\n  [kFinishWork]() {\n    const cb = this[kCallback]; // Callback will be null if work was aborted on close\n\n    if (this[kAbortOnClose] && cb === null) return noop;\n    this[kWorking] = false;\n    this[kCallback] = null;\n    if (this[kClosing]) this._close(this[kHandleClose]);\n    return cb;\n  }\n\n  [kReturnMany](cb, err, items) {\n    if (this[kAutoClose]) {\n      this.close(cb.bind(null, err, items));\n    } else {\n      cb(err, items);\n    }\n  }\n\n  seek(target, options) {\n    options = getOptions(options, emptyOptions);\n\n    if (this[kClosing]) {// Don't throw here, to be kind to implementations that wrap\n      // another db and don't necessarily control when the db is closed\n    } else if (this[kWorking]) {\n      throw new ModuleError('Iterator is busy: cannot call seek() until next() has completed', {\n        code: 'LEVEL_ITERATOR_BUSY'\n      });\n    } else {\n      const keyEncoding = this.db.keyEncoding(options.keyEncoding || this[kKeyEncoding]);\n      const keyFormat = keyEncoding.format;\n\n      if (options.keyEncoding !== keyFormat) {\n        options = { ...options,\n          keyEncoding: keyFormat\n        };\n      }\n\n      const mapped = this.db.prefixKey(keyEncoding.encode(target), keyFormat);\n\n      this._seek(mapped, options);\n    }\n  }\n\n  _seek(target, options) {\n    throw new ModuleError('Iterator does not support seek()', {\n      code: 'LEVEL_NOT_SUPPORTED'\n    });\n  }\n\n  close(callback) {\n    callback = fromCallback(callback, kPromise);\n\n    if (this[kClosed]) {\n      this.nextTick(callback);\n    } else if (this[kClosing]) {\n      this[kCloseCallbacks].push(callback);\n    } else {\n      this[kClosing] = true;\n      this[kCloseCallbacks].push(callback);\n\n      if (!this[kWorking]) {\n        this._close(this[kHandleClose]);\n      } else if (this[kAbortOnClose]) {\n        // Don't wait for work to finish. Subsequently ignore the result.\n        const cb = this[kFinishWork]();\n        cb(new ModuleError('Aborted on iterator close()', {\n          code: 'LEVEL_ITERATOR_NOT_OPEN'\n        }));\n      }\n    }\n\n    return callback[kPromise];\n  }\n\n  _close(callback) {\n    this.nextTick(callback);\n  }\n\n  [kHandleClose]() {\n    this[kClosed] = true;\n    this.db.detachResource(this);\n    const callbacks = this[kCloseCallbacks];\n    this[kCloseCallbacks] = [];\n\n    for (const cb of callbacks) {\n      cb();\n    }\n  }\n\n  async *[Symbol.asyncIterator]() {\n    try {\n      let item;\n\n      while ((item = await this.next()) !== undefined) {\n        yield item;\n      }\n    } finally {\n      if (!this[kClosed]) await this.close();\n    }\n  }\n\n} // For backwards compatibility this class is not (yet) called AbstractEntryIterator.\n\n\nclass AbstractIterator extends CommonIterator {\n  constructor(db, options) {\n    super(db, options, true);\n    this[kKeys] = options.keys !== false;\n    this[kValues] = options.values !== false;\n  }\n\n  [kHandleOne](err, key, value) {\n    const cb = this[kFinishWork]();\n    if (err) return cb(err);\n\n    try {\n      key = this[kKeys] && key !== undefined ? this[kKeyEncoding].decode(key) : undefined;\n      value = this[kValues] && value !== undefined ? this[kValueEncoding].decode(value) : undefined;\n    } catch (err) {\n      return cb(new IteratorDecodeError('entry', err));\n    }\n\n    if (!(key === undefined && value === undefined)) {\n      this[kCount]++;\n    }\n\n    cb(null, key, value);\n  }\n\n  [kHandleMany](err, entries) {\n    const cb = this[kFinishWork]();\n    if (err) return this[kReturnMany](cb, err);\n\n    try {\n      for (const entry of entries) {\n        const key = entry[0];\n        const value = entry[1];\n        entry[0] = this[kKeys] && key !== undefined ? this[kKeyEncoding].decode(key) : undefined;\n        entry[1] = this[kValues] && value !== undefined ? this[kValueEncoding].decode(value) : undefined;\n      }\n    } catch (err) {\n      return this[kReturnMany](cb, new IteratorDecodeError('entries', err));\n    }\n\n    this[kCount] += entries.length;\n    this[kReturnMany](cb, null, entries);\n  }\n\n  end(callback) {\n    if (!warnedEnd && typeof console !== 'undefined') {\n      warnedEnd = true;\n      console.warn(new ModuleError('The iterator.end() method was renamed to close() and end() is an alias that will be removed in a future version', {\n        code: 'LEVEL_LEGACY'\n      }));\n    }\n\n    return this.close(callback);\n  }\n\n}\n\nclass AbstractKeyIterator extends CommonIterator {\n  constructor(db, options) {\n    super(db, options, false);\n  }\n\n  [kHandleOne](err, key) {\n    const cb = this[kFinishWork]();\n    if (err) return cb(err);\n\n    try {\n      key = key !== undefined ? this[kKeyEncoding].decode(key) : undefined;\n    } catch (err) {\n      return cb(new IteratorDecodeError('key', err));\n    }\n\n    if (key !== undefined) this[kCount]++;\n    cb(null, key);\n  }\n\n  [kHandleMany](err, keys) {\n    const cb = this[kFinishWork]();\n    if (err) return this[kReturnMany](cb, err);\n\n    try {\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        keys[i] = key !== undefined ? this[kKeyEncoding].decode(key) : undefined;\n      }\n    } catch (err) {\n      return this[kReturnMany](cb, new IteratorDecodeError('keys', err));\n    }\n\n    this[kCount] += keys.length;\n    this[kReturnMany](cb, null, keys);\n  }\n\n}\n\nclass AbstractValueIterator extends CommonIterator {\n  constructor(db, options) {\n    super(db, options, false);\n  }\n\n  [kHandleOne](err, value) {\n    const cb = this[kFinishWork]();\n    if (err) return cb(err);\n\n    try {\n      value = value !== undefined ? this[kValueEncoding].decode(value) : undefined;\n    } catch (err) {\n      return cb(new IteratorDecodeError('value', err));\n    }\n\n    if (value !== undefined) this[kCount]++;\n    cb(null, value);\n  }\n\n  [kHandleMany](err, values) {\n    const cb = this[kFinishWork]();\n    if (err) return this[kReturnMany](cb, err);\n\n    try {\n      for (let i = 0; i < values.length; i++) {\n        const value = values[i];\n        values[i] = value !== undefined ? this[kValueEncoding].decode(value) : undefined;\n      }\n    } catch (err) {\n      return this[kReturnMany](cb, new IteratorDecodeError('values', err));\n    }\n\n    this[kCount] += values.length;\n    this[kReturnMany](cb, null, values);\n  }\n\n} // Internal utility, not typed or exported\n\n\nclass IteratorDecodeError extends ModuleError {\n  constructor(subject, cause) {\n    super(`Iterator could not decode ${subject}`, {\n      code: 'LEVEL_DECODE_ERROR',\n      cause\n    });\n  }\n\n} // To help migrating to abstract-level\n\n\nfor (const k of ['_ended property', '_nexting property', '_end method']) {\n  Object.defineProperty(AbstractIterator.prototype, k.split(' ')[0], {\n    get() {\n      throw new ModuleError(`The ${k} has been removed`, {\n        code: 'LEVEL_LEGACY'\n      });\n    },\n\n    set() {\n      throw new ModuleError(`The ${k} has been removed`, {\n        code: 'LEVEL_LEGACY'\n      });\n    }\n\n  });\n} // Exposed so that AbstractLevel can set these options\n\n\nAbstractIterator.keyEncoding = kKeyEncoding;\nAbstractIterator.valueEncoding = kValueEncoding;\nexports.AbstractIterator = AbstractIterator;\nexports.AbstractKeyIterator = AbstractKeyIterator;\nexports.AbstractValueIterator = AbstractValueIterator;","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/node_modules/abstract-level/abstract-iterator.js"],"names":["fromCallback","require","ModuleError","getOptions","getCallback","kPromise","Symbol","kCallback","kWorking","kHandleOne","kHandleMany","kAutoClose","kFinishWork","kReturnMany","kClosing","kHandleClose","kClosed","kCloseCallbacks","kKeyEncoding","kValueEncoding","kAbortOnClose","kLegacy","kKeys","kValues","kLimit","kCount","emptyOptions","Object","freeze","noop","warnedEnd","CommonIterator","constructor","db","options","legacy","hint","TypeError","bind","Number","isInteger","limit","Infinity","abortOnClose","attachResource","nextTick","count","next","callback","promise","undefined","Promise","resolve","reject","err","key","value","code","_next","nextv","size","Math","min","_nextv","acc","onnext","push","length","all","_all","onnextv","items","apply","cb","_close","close","seek","target","keyEncoding","keyFormat","format","mapped","prefixKey","encode","_seek","detachResource","callbacks","asyncIterator","item","AbstractIterator","keys","values","decode","IteratorDecodeError","entries","entry","end","console","warn","AbstractKeyIterator","i","AbstractValueIterator","subject","cause","k","defineProperty","prototype","split","get","set","valueEncoding","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nconst { fromCallback } = require('catering')\nconst ModuleError = require('module-error')\nconst { getOptions, getCallback } = require('./lib/common')\n\nconst kPromise = Symbol('promise')\nconst kCallback = Symbol('callback')\nconst kWorking = Symbol('working')\nconst kHandleOne = Symbol('handleOne')\nconst kHandleMany = Symbol('handleMany')\nconst kAutoClose = Symbol('autoClose')\nconst kFinishWork = Symbol('finishWork')\nconst kReturnMany = Symbol('returnMany')\nconst kClosing = Symbol('closing')\nconst kHandleClose = Symbol('handleClose')\nconst kClosed = Symbol('closed')\nconst kCloseCallbacks = Symbol('closeCallbacks')\nconst kKeyEncoding = Symbol('keyEncoding')\nconst kValueEncoding = Symbol('valueEncoding')\nconst kAbortOnClose = Symbol('abortOnClose')\nconst kLegacy = Symbol('legacy')\nconst kKeys = Symbol('keys')\nconst kValues = Symbol('values')\nconst kLimit = Symbol('limit')\nconst kCount = Symbol('count')\n\nconst emptyOptions = Object.freeze({})\nconst noop = () => {}\nlet warnedEnd = false\n\n// This class is an internal utility for common functionality between AbstractIterator,\n// AbstractKeyIterator and AbstractValueIterator. It's not exported.\nclass CommonIterator {\n  constructor (db, options, legacy) {\n    if (typeof db !== 'object' || db === null) {\n      const hint = db === null ? 'null' : typeof db\n      throw new TypeError(`The first argument must be an abstract-level database, received ${hint}`)\n    }\n\n    if (typeof options !== 'object' || options === null) {\n      throw new TypeError('The second argument must be an options object')\n    }\n\n    this[kClosed] = false\n    this[kCloseCallbacks] = []\n    this[kWorking] = false\n    this[kClosing] = false\n    this[kAutoClose] = false\n    this[kCallback] = null\n    this[kHandleOne] = this[kHandleOne].bind(this)\n    this[kHandleMany] = this[kHandleMany].bind(this)\n    this[kHandleClose] = this[kHandleClose].bind(this)\n    this[kKeyEncoding] = options[kKeyEncoding]\n    this[kValueEncoding] = options[kValueEncoding]\n    this[kLegacy] = legacy\n    this[kLimit] = Number.isInteger(options.limit) && options.limit >= 0 ? options.limit : Infinity\n    this[kCount] = 0\n\n    // Undocumented option to abort pending work on close(). Used by the\n    // many-level module as a temporary solution to a blocked close().\n    // TODO (next major): consider making this the default behavior. Native\n    // implementations should have their own logic to safely close iterators.\n    this[kAbortOnClose] = !!options.abortOnClose\n\n    this.db = db\n    this.db.attachResource(this)\n    this.nextTick = db.nextTick\n  }\n\n  get count () {\n    return this[kCount]\n  }\n\n  get limit () {\n    return this[kLimit]\n  }\n\n  next (callback) {\n    let promise\n\n    if (callback === undefined) {\n      promise = new Promise((resolve, reject) => {\n        callback = (err, key, value) => {\n          if (err) reject(err)\n          else if (!this[kLegacy]) resolve(key)\n          else if (key === undefined && value === undefined) resolve()\n          else resolve([key, value])\n        }\n      })\n    } else if (typeof callback !== 'function') {\n      throw new TypeError('Callback must be a function')\n    }\n\n    if (this[kClosing]) {\n      this.nextTick(callback, new ModuleError('Iterator is not open: cannot call next() after close()', {\n        code: 'LEVEL_ITERATOR_NOT_OPEN'\n      }))\n    } else if (this[kWorking]) {\n      this.nextTick(callback, new ModuleError('Iterator is busy: cannot call next() until previous call has completed', {\n        code: 'LEVEL_ITERATOR_BUSY'\n      }))\n    } else {\n      this[kWorking] = true\n      this[kCallback] = callback\n\n      if (this[kCount] >= this[kLimit]) this.nextTick(this[kHandleOne], null)\n      else this._next(this[kHandleOne])\n    }\n\n    return promise\n  }\n\n  _next (callback) {\n    this.nextTick(callback)\n  }\n\n  nextv (size, options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, emptyOptions)\n\n    if (!Number.isInteger(size)) {\n      this.nextTick(callback, new TypeError(\"The first argument 'size' must be an integer\"))\n      return callback[kPromise]\n    }\n\n    if (this[kClosing]) {\n      this.nextTick(callback, new ModuleError('Iterator is not open: cannot call nextv() after close()', {\n        code: 'LEVEL_ITERATOR_NOT_OPEN'\n      }))\n    } else if (this[kWorking]) {\n      this.nextTick(callback, new ModuleError('Iterator is busy: cannot call nextv() until previous call has completed', {\n        code: 'LEVEL_ITERATOR_BUSY'\n      }))\n    } else {\n      if (size < 1) size = 1\n      if (this[kLimit] < Infinity) size = Math.min(size, this[kLimit] - this[kCount])\n\n      this[kWorking] = true\n      this[kCallback] = callback\n\n      if (size <= 0) this.nextTick(this[kHandleMany], null, [])\n      else this._nextv(size, options, this[kHandleMany])\n    }\n\n    return callback[kPromise]\n  }\n\n  _nextv (size, options, callback) {\n    const acc = []\n    const onnext = (err, key, value) => {\n      if (err) {\n        return callback(err)\n      } else if (this[kLegacy] ? key === undefined && value === undefined : key === undefined) {\n        return callback(null, acc)\n      }\n\n      acc.push(this[kLegacy] ? [key, value] : key)\n\n      if (acc.length === size) {\n        callback(null, acc)\n      } else {\n        this._next(onnext)\n      }\n    }\n\n    this._next(onnext)\n  }\n\n  all (options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, emptyOptions)\n\n    if (this[kClosing]) {\n      this.nextTick(callback, new ModuleError('Iterator is not open: cannot call all() after close()', {\n        code: 'LEVEL_ITERATOR_NOT_OPEN'\n      }))\n    } else if (this[kWorking]) {\n      this.nextTick(callback, new ModuleError('Iterator is busy: cannot call all() until previous call has completed', {\n        code: 'LEVEL_ITERATOR_BUSY'\n      }))\n    } else {\n      this[kWorking] = true\n      this[kCallback] = callback\n      this[kAutoClose] = true\n\n      if (this[kCount] >= this[kLimit]) this.nextTick(this[kHandleMany], null, [])\n      else this._all(options, this[kHandleMany])\n    }\n\n    return callback[kPromise]\n  }\n\n  _all (options, callback) {\n    // Must count here because we're directly calling _nextv()\n    let count = this[kCount]\n    const acc = []\n\n    const nextv = () => {\n      // Not configurable, because implementations should optimize _all().\n      const size = this[kLimit] < Infinity ? Math.min(1e3, this[kLimit] - count) : 1e3\n\n      if (size <= 0) {\n        this.nextTick(callback, null, acc)\n      } else {\n        this._nextv(size, emptyOptions, onnextv)\n      }\n    }\n\n    const onnextv = (err, items) => {\n      if (err) {\n        callback(err)\n      } else if (items.length === 0) {\n        callback(null, acc)\n      } else {\n        acc.push.apply(acc, items)\n        count += items.length\n        nextv()\n      }\n    }\n\n    nextv()\n  }\n\n  [kFinishWork] () {\n    const cb = this[kCallback]\n\n    // Callback will be null if work was aborted on close\n    if (this[kAbortOnClose] && cb === null) return noop\n\n    this[kWorking] = false\n    this[kCallback] = null\n\n    if (this[kClosing]) this._close(this[kHandleClose])\n\n    return cb\n  }\n\n  [kReturnMany] (cb, err, items) {\n    if (this[kAutoClose]) {\n      this.close(cb.bind(null, err, items))\n    } else {\n      cb(err, items)\n    }\n  }\n\n  seek (target, options) {\n    options = getOptions(options, emptyOptions)\n\n    if (this[kClosing]) {\n      // Don't throw here, to be kind to implementations that wrap\n      // another db and don't necessarily control when the db is closed\n    } else if (this[kWorking]) {\n      throw new ModuleError('Iterator is busy: cannot call seek() until next() has completed', {\n        code: 'LEVEL_ITERATOR_BUSY'\n      })\n    } else {\n      const keyEncoding = this.db.keyEncoding(options.keyEncoding || this[kKeyEncoding])\n      const keyFormat = keyEncoding.format\n\n      if (options.keyEncoding !== keyFormat) {\n        options = { ...options, keyEncoding: keyFormat }\n      }\n\n      const mapped = this.db.prefixKey(keyEncoding.encode(target), keyFormat)\n      this._seek(mapped, options)\n    }\n  }\n\n  _seek (target, options) {\n    throw new ModuleError('Iterator does not support seek()', {\n      code: 'LEVEL_NOT_SUPPORTED'\n    })\n  }\n\n  close (callback) {\n    callback = fromCallback(callback, kPromise)\n\n    if (this[kClosed]) {\n      this.nextTick(callback)\n    } else if (this[kClosing]) {\n      this[kCloseCallbacks].push(callback)\n    } else {\n      this[kClosing] = true\n      this[kCloseCallbacks].push(callback)\n\n      if (!this[kWorking]) {\n        this._close(this[kHandleClose])\n      } else if (this[kAbortOnClose]) {\n        // Don't wait for work to finish. Subsequently ignore the result.\n        const cb = this[kFinishWork]()\n\n        cb(new ModuleError('Aborted on iterator close()', {\n          code: 'LEVEL_ITERATOR_NOT_OPEN'\n        }))\n      }\n    }\n\n    return callback[kPromise]\n  }\n\n  _close (callback) {\n    this.nextTick(callback)\n  }\n\n  [kHandleClose] () {\n    this[kClosed] = true\n    this.db.detachResource(this)\n\n    const callbacks = this[kCloseCallbacks]\n    this[kCloseCallbacks] = []\n\n    for (const cb of callbacks) {\n      cb()\n    }\n  }\n\n  async * [Symbol.asyncIterator] () {\n    try {\n      let item\n\n      while ((item = (await this.next())) !== undefined) {\n        yield item\n      }\n    } finally {\n      if (!this[kClosed]) await this.close()\n    }\n  }\n}\n\n// For backwards compatibility this class is not (yet) called AbstractEntryIterator.\nclass AbstractIterator extends CommonIterator {\n  constructor (db, options) {\n    super(db, options, true)\n    this[kKeys] = options.keys !== false\n    this[kValues] = options.values !== false\n  }\n\n  [kHandleOne] (err, key, value) {\n    const cb = this[kFinishWork]()\n    if (err) return cb(err)\n\n    try {\n      key = this[kKeys] && key !== undefined ? this[kKeyEncoding].decode(key) : undefined\n      value = this[kValues] && value !== undefined ? this[kValueEncoding].decode(value) : undefined\n    } catch (err) {\n      return cb(new IteratorDecodeError('entry', err))\n    }\n\n    if (!(key === undefined && value === undefined)) {\n      this[kCount]++\n    }\n\n    cb(null, key, value)\n  }\n\n  [kHandleMany] (err, entries) {\n    const cb = this[kFinishWork]()\n    if (err) return this[kReturnMany](cb, err)\n\n    try {\n      for (const entry of entries) {\n        const key = entry[0]\n        const value = entry[1]\n\n        entry[0] = this[kKeys] && key !== undefined ? this[kKeyEncoding].decode(key) : undefined\n        entry[1] = this[kValues] && value !== undefined ? this[kValueEncoding].decode(value) : undefined\n      }\n    } catch (err) {\n      return this[kReturnMany](cb, new IteratorDecodeError('entries', err))\n    }\n\n    this[kCount] += entries.length\n    this[kReturnMany](cb, null, entries)\n  }\n\n  end (callback) {\n    if (!warnedEnd && typeof console !== 'undefined') {\n      warnedEnd = true\n      console.warn(new ModuleError(\n        'The iterator.end() method was renamed to close() and end() is an alias that will be removed in a future version',\n        { code: 'LEVEL_LEGACY' }\n      ))\n    }\n\n    return this.close(callback)\n  }\n}\n\nclass AbstractKeyIterator extends CommonIterator {\n  constructor (db, options) {\n    super(db, options, false)\n  }\n\n  [kHandleOne] (err, key) {\n    const cb = this[kFinishWork]()\n    if (err) return cb(err)\n\n    try {\n      key = key !== undefined ? this[kKeyEncoding].decode(key) : undefined\n    } catch (err) {\n      return cb(new IteratorDecodeError('key', err))\n    }\n\n    if (key !== undefined) this[kCount]++\n    cb(null, key)\n  }\n\n  [kHandleMany] (err, keys) {\n    const cb = this[kFinishWork]()\n    if (err) return this[kReturnMany](cb, err)\n\n    try {\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i]\n        keys[i] = key !== undefined ? this[kKeyEncoding].decode(key) : undefined\n      }\n    } catch (err) {\n      return this[kReturnMany](cb, new IteratorDecodeError('keys', err))\n    }\n\n    this[kCount] += keys.length\n    this[kReturnMany](cb, null, keys)\n  }\n}\n\nclass AbstractValueIterator extends CommonIterator {\n  constructor (db, options) {\n    super(db, options, false)\n  }\n\n  [kHandleOne] (err, value) {\n    const cb = this[kFinishWork]()\n    if (err) return cb(err)\n\n    try {\n      value = value !== undefined ? this[kValueEncoding].decode(value) : undefined\n    } catch (err) {\n      return cb(new IteratorDecodeError('value', err))\n    }\n\n    if (value !== undefined) this[kCount]++\n    cb(null, value)\n  }\n\n  [kHandleMany] (err, values) {\n    const cb = this[kFinishWork]()\n    if (err) return this[kReturnMany](cb, err)\n\n    try {\n      for (let i = 0; i < values.length; i++) {\n        const value = values[i]\n        values[i] = value !== undefined ? this[kValueEncoding].decode(value) : undefined\n      }\n    } catch (err) {\n      return this[kReturnMany](cb, new IteratorDecodeError('values', err))\n    }\n\n    this[kCount] += values.length\n    this[kReturnMany](cb, null, values)\n  }\n}\n\n// Internal utility, not typed or exported\nclass IteratorDecodeError extends ModuleError {\n  constructor (subject, cause) {\n    super(`Iterator could not decode ${subject}`, {\n      code: 'LEVEL_DECODE_ERROR',\n      cause\n    })\n  }\n}\n\n// To help migrating to abstract-level\nfor (const k of ['_ended property', '_nexting property', '_end method']) {\n  Object.defineProperty(AbstractIterator.prototype, k.split(' ')[0], {\n    get () { throw new ModuleError(`The ${k} has been removed`, { code: 'LEVEL_LEGACY' }) },\n    set () { throw new ModuleError(`The ${k} has been removed`, { code: 'LEVEL_LEGACY' }) }\n  })\n}\n\n// Exposed so that AbstractLevel can set these options\nAbstractIterator.keyEncoding = kKeyEncoding\nAbstractIterator.valueEncoding = kValueEncoding\n\nexports.AbstractIterator = AbstractIterator\nexports.AbstractKeyIterator = AbstractKeyIterator\nexports.AbstractValueIterator = AbstractValueIterator\n"]},"metadata":{},"sourceType":"script"}