{"ast":null,"code":"import { CID } from 'multiformats/cid';\nimport { sha256 } from 'multiformats/hashes/sha2';\n/**\n * Convert a namespace string into a cid\n */\n\nexport async function namespaceToCid(namespace) {\n  const bytes = new TextEncoder().encode(namespace);\n  const hash = await sha256.digest(bytes);\n  return CID.createV0(hash);\n}","map":{"version":3,"mappings":"AAAA,SAASA,GAAT,QAAoB,kBAApB;AACA,SAASC,MAAT,QAAuB,0BAAvB;AAEA;;;;AAGA,OAAO,eAAeC,cAAf,CAA+BC,SAA/B,EAAgD;AACrD,QAAMC,KAAK,GAAG,IAAIC,WAAJ,GAAkBC,MAAlB,CAAyBH,SAAzB,CAAd;AACA,QAAMI,IAAI,GAAG,MAAMN,MAAM,CAACO,MAAP,CAAcJ,KAAd,CAAnB;AAEA,SAAOJ,GAAG,CAACS,QAAJ,CAAaF,IAAb,CAAP;AACD","names":["CID","sha256","namespaceToCid","namespace","bytes","TextEncoder","encode","hash","digest","createV0"],"sources":["C:\\Users\\Akshay Mishra\\OneDrive\\Desktop\\twitter-clone-dapp\\node_modules\\libp2p\\src\\circuit\\utils.ts"],"sourcesContent":["import { CID } from 'multiformats/cid'\nimport { sha256 } from 'multiformats/hashes/sha2'\n\n/**\n * Convert a namespace string into a cid\n */\nexport async function namespaceToCid (namespace: string): Promise<CID> {\n  const bytes = new TextEncoder().encode(namespace)\n  const hash = await sha256.digest(bytes)\n\n  return CID.createV0(hash)\n}\n"]},"metadata":{},"sourceType":"module"}