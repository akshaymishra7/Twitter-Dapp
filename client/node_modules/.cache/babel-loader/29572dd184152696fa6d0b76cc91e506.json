{"ast":null,"code":"import { createGc } from './gc.js';\nimport { createStat } from './stat.js';\nimport { createVersion } from './version.js';\n/**\n * @typedef {import('multiformats/hashes/interface').MultihashHasher} MultihashHasher\n * @typedef {import('ipfs-core-utils/multihashes').Multihashes} Multihashes\n */\n\nexport class RepoAPI {\n  /**\n   * @param {object} config\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   * @param {Multihashes} config.hashers\n   */\n  constructor(_ref) {\n    let {\n      repo,\n      hashers\n    } = _ref;\n    this.gc = createGc({\n      repo,\n      hashers\n    });\n    this.stat = createStat({\n      repo\n    });\n    this.version = createVersion({\n      repo\n    });\n    /**\n     * @param {string} addr\n     */\n\n    this.setApiAddr = addr => repo.apiAddr.set(addr);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/node_modules/ipfs-core/src/components/repo/index.js"],"names":["createGc","createStat","createVersion","RepoAPI","constructor","repo","hashers","gc","stat","version","setApiAddr","addr","apiAddr","set"],"mappings":"AAAA,SAASA,QAAT,QAAyB,SAAzB;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,aAAT,QAA8B,cAA9B;AAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,OAAN,CAAc;AACnB;AACF;AACA;AACA;AACA;AACEC,EAAAA,WAAW,OAAqB;AAAA,QAAnB;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAmB;AAC9B,SAAKC,EAAL,GAAUP,QAAQ,CAAC;AAAEK,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAD,CAAlB;AACA,SAAKE,IAAL,GAAYP,UAAU,CAAC;AAAEI,MAAAA;AAAF,KAAD,CAAtB;AACA,SAAKI,OAAL,GAAeP,aAAa,CAAC;AAAEG,MAAAA;AAAF,KAAD,CAA5B;AAEA;AACJ;AACA;;AACI,SAAKK,UAAL,GAAmBC,IAAD,IAAUN,IAAI,CAACO,OAAL,CAAaC,GAAb,CAAiBF,IAAjB,CAA5B;AACD;;AAfkB","sourcesContent":["import { createGc } from './gc.js'\nimport { createStat } from './stat.js'\nimport { createVersion } from './version.js'\n\n/**\n * @typedef {import('multiformats/hashes/interface').MultihashHasher} MultihashHasher\n * @typedef {import('ipfs-core-utils/multihashes').Multihashes} Multihashes\n */\n\nexport class RepoAPI {\n  /**\n   * @param {object} config\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   * @param {Multihashes} config.hashers\n   */\n  constructor ({ repo, hashers }) {\n    this.gc = createGc({ repo, hashers })\n    this.stat = createStat({ repo })\n    this.version = createVersion({ repo })\n\n    /**\n     * @param {string} addr\n     */\n    this.setApiAddr = (addr) => repo.apiAddr.set(addr)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}