{"ast":null,"code":"import { Record } from './record.js';\nimport * as utils from './utils.js';\nexport class Libp2pRecord {\n  constructor(key, value, timeReceived) {\n    if (!(key instanceof Uint8Array)) {\n      throw new Error('key must be a Uint8Array');\n    }\n\n    if (!(value instanceof Uint8Array)) {\n      throw new Error('value must be a Uint8Array');\n    }\n\n    this.key = key;\n    this.value = value;\n    this.timeReceived = timeReceived;\n  }\n\n  serialize() {\n    return Record.encode(this.prepareSerialize());\n  }\n  /**\n   * Return the object format ready to be given to the protobuf library.\n   */\n\n\n  prepareSerialize() {\n    return {\n      key: this.key,\n      value: this.value,\n      timeReceived: utils.toRFC3339(this.timeReceived)\n    };\n  }\n  /**\n   * Decode a protobuf encoded record\n   */\n\n\n  static deserialize(raw) {\n    const rec = Record.decode(raw);\n    return new Libp2pRecord(rec.key, rec.value, new Date(rec.timeReceived));\n  }\n  /**\n   * Create a record from the raw object returned from the protobuf library\n   */\n\n\n  static fromDeserialized(obj) {\n    const recvtime = utils.parseRFC3339(obj.timeReceived);\n\n    if (obj.key == null) {\n      throw new Error('key missing from deserialized object');\n    }\n\n    if (obj.value == null) {\n      throw new Error('value missing from deserialized object');\n    }\n\n    const rec = new Libp2pRecord(obj.key, obj.value, recvtime);\n    return rec;\n  }\n\n}","map":{"version":3,"mappings":"AACA,SACEA,MADF,QAEO,aAFP;AAGA,OAAO,KAAKC,KAAZ,MAAuB,YAAvB;AAEA,OAAM,MAAOC,YAAP,CAAmB;AAKvBC,cAAaC,GAAb,EAA8BC,KAA9B,EAAiDC,YAAjD,EAAmE;AACjE,QAAI,EAAEF,GAAG,YAAYG,UAAjB,CAAJ,EAAkC;AAChC,YAAM,IAAIC,KAAJ,CAAU,0BAAV,CAAN;AACD;;AAED,QAAI,EAAEH,KAAK,YAAYE,UAAnB,CAAJ,EAAoC;AAClC,YAAM,IAAIC,KAAJ,CAAU,4BAAV,CAAN;AACD;;AAED,SAAKJ,GAAL,GAAWA,GAAX;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACD;;AAEDG,WAAS;AACP,WAAOT,MAAM,CAACU,MAAP,CAAc,KAAKC,gBAAL,EAAd,CAAP;AACD;AAED;;;;;AAGAA,kBAAgB;AACd,WAAO;AACLP,SAAG,EAAE,KAAKA,GADL;AAELC,WAAK,EAAE,KAAKA,KAFP;AAGLC,kBAAY,EAAEL,KAAK,CAACW,SAAN,CAAgB,KAAKN,YAArB;AAHT,KAAP;AAKD;AAED;;;;;AAGkB,SAAXO,WAAW,CAAEC,GAAF,EAAkC;AAClD,UAAMC,GAAG,GAAGf,MAAM,CAACgB,MAAP,CAAcF,GAAd,CAAZ;AAEA,WAAO,IAAIZ,YAAJ,CAAiBa,GAAG,CAACX,GAArB,EAA0BW,GAAG,CAACV,KAA9B,EAAqC,IAAIY,IAAJ,CAASF,GAAG,CAACT,YAAb,CAArC,CAAP;AACD;AAED;;;;;AAGuB,SAAhBY,gBAAgB,CAAEC,GAAF,EAAa;AAClC,UAAMC,QAAQ,GAAGnB,KAAK,CAACoB,YAAN,CAAmBF,GAAG,CAACb,YAAvB,CAAjB;;AAEA,QAAIa,GAAG,CAACf,GAAJ,IAAW,IAAf,EAAqB;AACnB,YAAM,IAAII,KAAJ,CAAU,sCAAV,CAAN;AACD;;AAED,QAAIW,GAAG,CAACd,KAAJ,IAAa,IAAjB,EAAuB;AACrB,YAAM,IAAIG,KAAJ,CAAU,wCAAV,CAAN;AACD;;AAED,UAAMO,GAAG,GAAG,IAAIb,YAAJ,CACViB,GAAG,CAACf,GADM,EACDe,GAAG,CAACd,KADH,EACUe,QADV,CAAZ;AAIA,WAAOL,GAAP;AACD;;AA9DsB","names":["Record","utils","Libp2pRecord","constructor","key","value","timeReceived","Uint8Array","Error","serialize","encode","prepareSerialize","toRFC3339","deserialize","raw","rec","decode","Date","fromDeserialized","obj","recvtime","parseRFC3339"],"sources":["C:\\Users\\Akshay Mishra\\OneDrive\\Desktop\\twitter-clone-dapp\\node_modules\\@libp2p\\record\\src\\index.ts"],"sourcesContent":["import type { Uint8ArrayList } from 'uint8arraylist'\nimport {\n  Record\n} from './record.js'\nimport * as utils from './utils.js'\n\nexport class Libp2pRecord {\n  public key: Uint8Array\n  public value: Uint8Array\n  public timeReceived: Date\n\n  constructor (key: Uint8Array, value: Uint8Array, timeReceived: Date) {\n    if (!(key instanceof Uint8Array)) {\n      throw new Error('key must be a Uint8Array')\n    }\n\n    if (!(value instanceof Uint8Array)) {\n      throw new Error('value must be a Uint8Array')\n    }\n\n    this.key = key\n    this.value = value\n    this.timeReceived = timeReceived\n  }\n\n  serialize (): Uint8Array {\n    return Record.encode(this.prepareSerialize())\n  }\n\n  /**\n   * Return the object format ready to be given to the protobuf library.\n   */\n  prepareSerialize (): Record {\n    return {\n      key: this.key,\n      value: this.value,\n      timeReceived: utils.toRFC3339(this.timeReceived)\n    }\n  }\n\n  /**\n   * Decode a protobuf encoded record\n   */\n  static deserialize (raw: Uint8Array | Uint8ArrayList): Libp2pRecord {\n    const rec = Record.decode(raw)\n\n    return new Libp2pRecord(rec.key, rec.value, new Date(rec.timeReceived))\n  }\n\n  /**\n   * Create a record from the raw object returned from the protobuf library\n   */\n  static fromDeserialized (obj: Record): Libp2pRecord {\n    const recvtime = utils.parseRFC3339(obj.timeReceived)\n\n    if (obj.key == null) {\n      throw new Error('key missing from deserialized object')\n    }\n\n    if (obj.value == null) {\n      throw new Error('value missing from deserialized object')\n    }\n\n    const rec = new Libp2pRecord(\n      obj.key, obj.value, recvtime\n    )\n\n    return rec\n  }\n}\n"]},"metadata":{},"sourceType":"module"}