{"ast":null,"code":"import errCode from 'err-code';\nimport { messages, codes } from '../errors.js';\nimport { storeAddresses, uniquePeers, requirePeers } from './utils.js';\nimport drain from 'it-drain';\nimport merge from 'it-merge';\nimport { pipe } from 'it-pipe';\nexport class CompoundContentRouting {\n  constructor(components, init) {\n    this.routers = init.routers ?? [];\n    this.started = false;\n    this.components = components;\n  }\n\n  isStarted() {\n    return this.started;\n  }\n\n  async start() {\n    this.started = true;\n  }\n\n  async stop() {\n    this.started = false;\n  }\n  /**\n   * Iterates over all content routers in parallel to find providers of the given key\n   */\n\n\n  async *findProviders(key) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (this.routers.length === 0) {\n      throw errCode(new Error('No content this.routers available'), codes.ERR_NO_ROUTERS_AVAILABLE);\n    }\n\n    yield* pipe(merge(...this.routers.map(router => router.findProviders(key, options))), source => storeAddresses(source, this.components.peerStore), source => uniquePeers(source), source => requirePeers(source));\n  }\n  /**\n   * Iterates over all content routers in parallel to notify it is\n   * a provider of the given key\n   */\n\n\n  async provide(key) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (this.routers.length === 0) {\n      throw errCode(new Error('No content routers available'), codes.ERR_NO_ROUTERS_AVAILABLE);\n    }\n\n    await Promise.all(this.routers.map(async router => await router.provide(key, options)));\n  }\n  /**\n   * Store the given key/value pair in the available content routings\n   */\n\n\n  async put(key, value, options) {\n    if (!this.isStarted()) {\n      throw errCode(new Error(messages.NOT_STARTED_YET), codes.DHT_NOT_STARTED);\n    }\n\n    const dht = this.components.dht;\n\n    if (dht != null) {\n      await drain(dht.put(key, value, options));\n    }\n  }\n  /**\n   * Get the value to the given key.\n   * Times out after 1 minute by default.\n   */\n\n\n  async get(key, options) {\n    if (!this.isStarted()) {\n      throw errCode(new Error(messages.NOT_STARTED_YET), codes.DHT_NOT_STARTED);\n    }\n\n    const dht = this.components.dht;\n\n    if (dht != null) {\n      for await (const event of dht.get(key, options)) {\n        if (event.name === 'VALUE') {\n          return event.value;\n        }\n      }\n    }\n\n    throw errCode(new Error(messages.NOT_FOUND), codes.ERR_NOT_FOUND);\n  }\n  /**\n   * Get the `n` values to the given key without sorting\n   */\n\n\n  async *getMany(key, nVals, options) {\n    if (!this.isStarted()) {\n      throw errCode(new Error(messages.NOT_STARTED_YET), codes.DHT_NOT_STARTED);\n    }\n\n    if (nVals == null || nVals === 0) {\n      return;\n    }\n\n    let gotValues = 0;\n    const dht = this.components.dht;\n\n    if (dht != null) {\n      for await (const event of dht.get(key, options)) {\n        if (event.name === 'VALUE') {\n          yield {\n            from: event.from,\n            val: event.value\n          };\n          gotValues++;\n\n          if (gotValues === nVals) {\n            break;\n          }\n        }\n      }\n    }\n\n    if (gotValues === 0) {\n      throw errCode(new Error(messages.NOT_FOUND), codes.ERR_NOT_FOUND);\n    }\n  }\n\n}","map":{"version":3,"mappings":"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","names":["errCode","messages","codes","storeAddresses","uniquePeers","requirePeers","drain","merge","pipe","CompoundContentRouting","constructor","components","init","routers","started","isStarted","start","stop","findProviders","key","options","length","Error","ERR_NO_ROUTERS_AVAILABLE","map","router","source","peerStore","provide","Promise","all","put","value","NOT_STARTED_YET","DHT_NOT_STARTED","dht","get","event","name","NOT_FOUND","ERR_NOT_FOUND","getMany","nVals","gotValues","from","val"],"sources":["C:\\Users\\Akshay Mishra\\OneDrive\\Desktop\\twitter-clone-dapp\\node_modules\\libp2p\\src\\content-routing\\index.ts"],"sourcesContent":["import errCode from 'err-code'\nimport { messages, codes } from '../errors.js'\nimport {\n  storeAddresses,\n  uniquePeers,\n  requirePeers\n} from './utils.js'\nimport drain from 'it-drain'\nimport merge from 'it-merge'\nimport { pipe } from 'it-pipe'\nimport type { ContentRouting } from '@libp2p/interface-content-routing'\nimport type { AbortOptions } from '@libp2p/interfaces'\nimport type { Startable } from '@libp2p/interfaces/startable'\nimport type { CID } from 'multiformats/cid'\nimport type { PeerStore } from '@libp2p/interface-peer-store'\nimport type { DualDHT } from '@libp2p/interface-dht'\n\nexport interface CompoundContentRoutingInit {\n  routers: ContentRouting[]\n}\n\nexport interface CompoundContentRoutingComponents {\n  peerStore: PeerStore\n  dht?: DualDHT\n}\n\nexport class CompoundContentRouting implements ContentRouting, Startable {\n  private readonly routers: ContentRouting[]\n  private started: boolean\n  private readonly components: CompoundContentRoutingComponents\n\n  constructor (components: CompoundContentRoutingComponents, init: CompoundContentRoutingInit) {\n    this.routers = init.routers ?? []\n    this.started = false\n    this.components = components\n  }\n\n  isStarted () {\n    return this.started\n  }\n\n  async start () {\n    this.started = true\n  }\n\n  async stop () {\n    this.started = false\n  }\n\n  /**\n   * Iterates over all content routers in parallel to find providers of the given key\n   */\n  async * findProviders (key: CID, options: AbortOptions = {}) {\n    if (this.routers.length === 0) {\n      throw errCode(new Error('No content this.routers available'), codes.ERR_NO_ROUTERS_AVAILABLE)\n    }\n\n    yield * pipe(\n      merge(\n        ...this.routers.map(router => router.findProviders(key, options))\n      ),\n      (source) => storeAddresses(source, this.components.peerStore),\n      (source) => uniquePeers(source),\n      (source) => requirePeers(source)\n    )\n  }\n\n  /**\n   * Iterates over all content routers in parallel to notify it is\n   * a provider of the given key\n   */\n  async provide (key: CID, options: AbortOptions = {}) {\n    if (this.routers.length === 0) {\n      throw errCode(new Error('No content routers available'), codes.ERR_NO_ROUTERS_AVAILABLE)\n    }\n\n    await Promise.all(this.routers.map(async (router) => await router.provide(key, options)))\n  }\n\n  /**\n   * Store the given key/value pair in the available content routings\n   */\n  async put (key: Uint8Array, value: Uint8Array, options?: AbortOptions) {\n    if (!this.isStarted()) {\n      throw errCode(new Error(messages.NOT_STARTED_YET), codes.DHT_NOT_STARTED)\n    }\n\n    const dht = this.components.dht\n\n    if (dht != null) {\n      await drain(dht.put(key, value, options))\n    }\n  }\n\n  /**\n   * Get the value to the given key.\n   * Times out after 1 minute by default.\n   */\n  async get (key: Uint8Array, options?: AbortOptions): Promise<Uint8Array> {\n    if (!this.isStarted()) {\n      throw errCode(new Error(messages.NOT_STARTED_YET), codes.DHT_NOT_STARTED)\n    }\n\n    const dht = this.components.dht\n\n    if (dht != null) {\n      for await (const event of dht.get(key, options)) {\n        if (event.name === 'VALUE') {\n          return event.value\n        }\n      }\n    }\n\n    throw errCode(new Error(messages.NOT_FOUND), codes.ERR_NOT_FOUND)\n  }\n\n  /**\n   * Get the `n` values to the given key without sorting\n   */\n  async * getMany (key: Uint8Array, nVals: number, options: AbortOptions) { // eslint-disable-line require-await\n    if (!this.isStarted()) {\n      throw errCode(new Error(messages.NOT_STARTED_YET), codes.DHT_NOT_STARTED)\n    }\n\n    if (nVals == null || nVals === 0) {\n      return\n    }\n\n    let gotValues = 0\n    const dht = this.components.dht\n\n    if (dht != null) {\n      for await (const event of dht.get(key, options)) {\n        if (event.name === 'VALUE') {\n          yield { from: event.from, val: event.value }\n\n          gotValues++\n\n          if (gotValues === nVals) {\n            break\n          }\n        }\n      }\n    }\n\n    if (gotValues === 0) {\n      throw errCode(new Error(messages.NOT_FOUND), codes.ERR_NOT_FOUND)\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}