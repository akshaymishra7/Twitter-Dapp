{"ast":null,"code":"import { createWantlist } from './wantlist.js';\nimport { createWantlistForPeer } from './wantlist-for-peer.js';\nimport { createUnwant } from './unwant.js';\nimport { createStat } from './stat.js';\n/**\n * @typedef {import('../../types').NetworkService} NetworkService\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\nexport class BitswapAPI {\n  /**\n   * @param {object} config\n   * @param {NetworkService} config.network\n   */\n  constructor(_ref) {\n    let {\n      network\n    } = _ref;\n    this.wantlist = createWantlist({\n      network\n    });\n    this.wantlistForPeer = createWantlistForPeer({\n      network\n    });\n    this.unwant = createUnwant({\n      network\n    });\n    this.stat = createStat({\n      network\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/node_modules/ipfs-core/src/components/bitswap/index.js"],"names":["createWantlist","createWantlistForPeer","createUnwant","createStat","BitswapAPI","constructor","network","wantlist","wantlistForPeer","unwant","stat"],"mappings":"AAAA,SAASA,cAAT,QAA+B,eAA/B;AACA,SAASC,qBAAT,QAAsC,wBAAtC;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,UAAT,QAA2B,WAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,UAAN,CAAiB;AACtB;AACF;AACA;AACA;AACEC,EAAAA,WAAW,OAAe;AAAA,QAAb;AAAEC,MAAAA;AAAF,KAAa;AACxB,SAAKC,QAAL,GAAgBP,cAAc,CAAC;AAAEM,MAAAA;AAAF,KAAD,CAA9B;AACA,SAAKE,eAAL,GAAuBP,qBAAqB,CAAC;AAAEK,MAAAA;AAAF,KAAD,CAA5C;AACA,SAAKG,MAAL,GAAcP,YAAY,CAAC;AAAEI,MAAAA;AAAF,KAAD,CAA1B;AACA,SAAKI,IAAL,GAAYP,UAAU,CAAC;AAAEG,MAAAA;AAAF,KAAD,CAAtB;AACD;;AAVqB","sourcesContent":["import { createWantlist } from './wantlist.js'\nimport { createWantlistForPeer } from './wantlist-for-peer.js'\nimport { createUnwant } from './unwant.js'\nimport { createStat } from './stat.js'\n\n/**\n * @typedef {import('../../types').NetworkService} NetworkService\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\nexport class BitswapAPI {\n  /**\n   * @param {object} config\n   * @param {NetworkService} config.network\n   */\n  constructor ({ network }) {\n    this.wantlist = createWantlist({ network })\n    this.wantlistForPeer = createWantlistForPeer({ network })\n    this.unwant = createUnwant({ network })\n    this.stat = createStat({ network })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}