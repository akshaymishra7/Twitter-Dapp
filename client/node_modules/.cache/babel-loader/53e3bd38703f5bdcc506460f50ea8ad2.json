{"ast":null,"code":"import batch from 'it-batch';\n/**\n * @typedef {import('../../types').FileDAGBuilder} FileDAGBuilder\n */\n\n/**\n * @type {FileDAGBuilder}\n */\n\nfunction balanced(source, reduce, options) {\n  return reduceToParents(source, reduce, options);\n}\n/**\n * @type {FileDAGBuilder}\n */\n\n\nasync function reduceToParents(source, reduce, options) {\n  const roots = [];\n\n  for await (const chunked of batch(source, options.maxChildrenPerNode)) {\n    roots.push(await reduce(chunked));\n  }\n\n  if (roots.length > 1) {\n    return reduceToParents(roots, reduce, options);\n  }\n\n  return roots[0];\n}\n\nexport default balanced;","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/node_modules/ipfs-unixfs-importer/src/dag-builder/file/balanced.js"],"names":["batch","balanced","source","reduce","options","reduceToParents","roots","chunked","maxChildrenPerNode","push","length"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,UAAlB;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AACA,SAASC,QAAT,CAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,OAAnC,EAA4C;AAC1C,SAAOC,eAAe,CAACH,MAAD,EAASC,MAAT,EAAiBC,OAAjB,CAAtB;AACD;AAED;AACA;AACA;;;AACA,eAAeC,eAAf,CAAgCH,MAAhC,EAAwCC,MAAxC,EAAgDC,OAAhD,EAAyD;AACvD,QAAME,KAAK,GAAG,EAAd;;AAEA,aAAW,MAAMC,OAAjB,IAA4BP,KAAK,CAACE,MAAD,EAASE,OAAO,CAACI,kBAAjB,CAAjC,EAAuE;AACrEF,IAAAA,KAAK,CAACG,IAAN,CAAW,MAAMN,MAAM,CAACI,OAAD,CAAvB;AACD;;AAED,MAAID,KAAK,CAACI,MAAN,GAAe,CAAnB,EAAsB;AACpB,WAAOL,eAAe,CAACC,KAAD,EAAQH,MAAR,EAAgBC,OAAhB,CAAtB;AACD;;AAED,SAAOE,KAAK,CAAC,CAAD,CAAZ;AACD;;AAED,eAAeL,QAAf","sourcesContent":["import batch from 'it-batch'\n\n/**\n * @typedef {import('../../types').FileDAGBuilder} FileDAGBuilder\n */\n\n/**\n * @type {FileDAGBuilder}\n */\nfunction balanced (source, reduce, options) {\n  return reduceToParents(source, reduce, options)\n}\n\n/**\n * @type {FileDAGBuilder}\n */\nasync function reduceToParents (source, reduce, options) {\n  const roots = []\n\n  for await (const chunked of batch(source, options.maxChildrenPerNode)) {\n    roots.push(await reduce(chunked))\n  }\n\n  if (roots.length > 1) {\n    return reduceToParents(roots, reduce, options)\n  }\n\n  return roots[0]\n}\n\nexport default balanced\n"]},"metadata":{},"sourceType":"module"}