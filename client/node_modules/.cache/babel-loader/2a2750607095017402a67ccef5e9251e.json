{"ast":null,"code":"import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\n\nexport function createConnect(_ref) {\n  let {\n    network\n  } = _ref;\n\n  /**\n   * @type {import('ipfs-core-types/src/swarm').API<{}>[\"connect\"]}\n   */\n  async function connect(multiaddrOrPeerId) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const {\n      libp2p\n    } = await network.use(options);\n    await libp2p.dial(multiaddrOrPeerId, options);\n  }\n\n  return withTimeoutOption(connect);\n}","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/node_modules/ipfs-core/src/components/swarm/connect.js"],"names":["withTimeoutOption","createConnect","network","connect","multiaddrOrPeerId","options","libp2p","use","dial"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,qCAAlC;AAEA;AACA;AACA;AACA;;AACA,OAAO,SAASC,aAAT,OAAqC;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;;AAC1C;AACF;AACA;AACE,iBAAeC,OAAf,CAAwBC,iBAAxB,EAAyD;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AACvD,UAAM;AAAEC,MAAAA;AAAF,QAAa,MAAMJ,OAAO,CAACK,GAAR,CAAYF,OAAZ,CAAzB;AACA,UAAMC,MAAM,CAACE,IAAP,CAAYJ,iBAAZ,EAA+BC,OAA/B,CAAN;AACD;;AAED,SAAOL,iBAAiB,CAACG,OAAD,CAAxB;AACD","sourcesContent":["import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createConnect ({ network }) {\n  /**\n   * @type {import('ipfs-core-types/src/swarm').API<{}>[\"connect\"]}\n   */\n  async function connect (multiaddrOrPeerId, options = {}) {\n    const { libp2p } = await network.use(options)\n    await libp2p.dial(multiaddrOrPeerId, options)\n  }\n\n  return withTimeoutOption(connect)\n}\n"]},"metadata":{},"sourceType":"module"}