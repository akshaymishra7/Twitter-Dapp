{"ast":null,"code":"import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\n\nexport function createWantlist(_ref) {\n  let {\n    network\n  } = _ref;\n\n  /**\n   * @type {import('ipfs-core-types/src/bitswap').API<{}>[\"wantlist\"]}\n   */\n  async function wantlist() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const {\n      bitswap\n    } = await network.use(options);\n    const list = bitswap.getWantlist();\n    return Array.from(list).map(e => e[1].cid);\n  }\n\n  return withTimeoutOption(wantlist);\n}","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/node_modules/ipfs-core/src/components/bitswap/wantlist.js"],"names":["withTimeoutOption","createWantlist","network","wantlist","options","bitswap","use","list","getWantlist","Array","from","map","e","cid"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,qCAAlC;AAEA;AACA;AACA;AACA;;AACA,OAAO,SAASC,cAAT,OAAsC;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;;AAC3C;AACF;AACA;AACE,iBAAeC,QAAf,GAAuC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AACrC,UAAM;AAAEC,MAAAA;AAAF,QAAc,MAAMH,OAAO,CAACI,GAAR,CAAYF,OAAZ,CAA1B;AACA,UAAMG,IAAI,GAAGF,OAAO,CAACG,WAAR,EAAb;AAEA,WAAOC,KAAK,CAACC,IAAN,CAAWH,IAAX,EAAiBI,GAAjB,CAAqBC,CAAC,IAAIA,CAAC,CAAC,CAAD,CAAD,CAAKC,GAA/B,CAAP;AACD;;AAED,SAAOb,iBAAiB,CAACG,QAAD,CAAxB;AACD","sourcesContent":["import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createWantlist ({ network }) {\n  /**\n   * @type {import('ipfs-core-types/src/bitswap').API<{}>[\"wantlist\"]}\n   */\n  async function wantlist (options = {}) {\n    const { bitswap } = await network.use(options)\n    const list = bitswap.getWantlist()\n\n    return Array.from(list).map(e => e[1].cid)\n  }\n\n  return withTimeoutOption(wantlist)\n}\n"]},"metadata":{},"sourceType":"module"}