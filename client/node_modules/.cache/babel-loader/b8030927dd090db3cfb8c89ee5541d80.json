{"ast":null,"code":"import { pair } from './index.js';\n/**\n * Two duplex streams that are attached to each other\n */\n\nexport function duplexPair() {\n  const a = pair();\n  const b = pair();\n  return [{\n    source: a.source,\n    sink: b.sink\n  }, {\n    source: b.source,\n    sink: a.sink\n  }];\n}","map":{"version":3,"mappings":"AAAA,SAASA,IAAT,QAAqB,YAArB;AAGA;;;;AAGA,OAAM,SAAUC,UAAV,GAAoB;AACxB,QAAMC,CAAC,GAAGF,IAAI,EAAd;AACA,QAAMG,CAAC,GAAGH,IAAI,EAAd;AACA,SAAO,CACL;AACEI,UAAM,EAAEF,CAAC,CAACE,MADZ;AAEEC,QAAI,EAAEF,CAAC,CAACE;AAFV,GADK,EAKL;AACED,UAAM,EAAED,CAAC,CAACC,MADZ;AAEEC,QAAI,EAAEH,CAAC,CAACG;AAFV,GALK,CAAP;AAUD","names":["pair","duplexPair","a","b","source","sink"],"sources":["C:\\Users\\Akshay Mishra\\OneDrive\\Desktop\\twitter-clone-dapp\\node_modules\\it-pair\\src\\duplex.ts"],"sourcesContent":["import { pair } from './index.js'\nimport type { Duplex, Source } from 'it-stream-types'\n\n/**\n * Two duplex streams that are attached to each other\n */\nexport function duplexPair <T> (): [Duplex<AsyncGenerator<T>, Source<T>, Promise<void>>, Duplex<AsyncGenerator<T>, Source<T>, Promise<void>>] {\n  const a = pair<T>()\n  const b = pair<T>()\n  return [\n    {\n      source: a.source,\n      sink: b.sink\n    },\n    {\n      source: b.source,\n      sink: a.sink\n    }\n  ]\n}\n"]},"metadata":{},"sourceType":"module"}