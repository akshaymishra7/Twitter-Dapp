{"ast":null,"code":"/**\n * Takes an (async) iterable that emits things and returns an async iterable that\n * emits those things in fixed-sized batches\n */\nexport default async function* batch(source) {\n  let size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  let things = [];\n\n  if (size < 1) {\n    size = 1;\n  }\n\n  for await (const thing of source) {\n    things.push(thing);\n\n    while (things.length >= size) {\n      yield things.slice(0, size);\n      things = things.slice(size);\n    }\n  }\n\n  while (things.length > 0) {\n    yield things.slice(0, size);\n    things = things.slice(size);\n  }\n}","map":{"version":3,"mappings":"AAAA;;;;AAIA,eAAe,gBAAiBA,KAAjB,CAA4BC,MAA5B,EAAoF;AAAA,MAAhBC,IAAgB,uEAAD,CAAC;AACjG,MAAIC,MAAM,GAAQ,EAAlB;;AAEA,MAAID,IAAI,GAAG,CAAX,EAAc;AACZA,QAAI,GAAG,CAAP;AACD;;AAED,aAAW,MAAME,KAAjB,IAA0BH,MAA1B,EAAkC;AAChCE,UAAM,CAACE,IAAP,CAAYD,KAAZ;;AAEA,WAAOD,MAAM,CAACG,MAAP,IAAiBJ,IAAxB,EAA8B;AAC5B,YAAMC,MAAM,CAACI,KAAP,CAAa,CAAb,EAAgBL,IAAhB,CAAN;AAEAC,YAAM,GAAGA,MAAM,CAACI,KAAP,CAAaL,IAAb,CAAT;AACD;AACF;;AAED,SAAOC,MAAM,CAACG,MAAP,GAAgB,CAAvB,EAA0B;AACxB,UAAMH,MAAM,CAACI,KAAP,CAAa,CAAb,EAAgBL,IAAhB,CAAN;AAEAC,UAAM,GAAGA,MAAM,CAACI,KAAP,CAAaL,IAAb,CAAT;AACD;AACF","names":["batch","source","size","things","thing","push","length","slice"],"sources":["C:\\Users\\Akshay Mishra\\OneDrive\\Desktop\\twitter-clone-dapp\\node_modules\\it-batch\\src\\index.ts"],"sourcesContent":["/**\n * Takes an (async) iterable that emits things and returns an async iterable that\n * emits those things in fixed-sized batches\n */\nexport default async function * batch <T> (source: AsyncIterable<T> | Iterable<T>, size: number = 1): AsyncGenerator<T[], void, undefined> {\n  let things: T[] = []\n\n  if (size < 1) {\n    size = 1\n  }\n\n  for await (const thing of source) {\n    things.push(thing)\n\n    while (things.length >= size) {\n      yield things.slice(0, size)\n\n      things = things.slice(size)\n    }\n  }\n\n  while (things.length > 0) {\n    yield things.slice(0, size)\n\n    things = things.slice(size)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}