{"ast":null,"code":"'use strict';\n\nconst {\n  AbstractKeyIterator,\n  AbstractValueIterator\n} = require('../abstract-iterator');\n\nconst kIterator = Symbol('iterator');\nconst kCallback = Symbol('callback');\nconst kHandleOne = Symbol('handleOne');\nconst kHandleMany = Symbol('handleMany');\n\nclass DefaultKeyIterator extends AbstractKeyIterator {\n  constructor(db, options) {\n    super(db, options);\n    this[kIterator] = db.iterator({ ...options,\n      keys: true,\n      values: false\n    });\n    this[kHandleOne] = this[kHandleOne].bind(this);\n    this[kHandleMany] = this[kHandleMany].bind(this);\n  }\n\n}\n\nclass DefaultValueIterator extends AbstractValueIterator {\n  constructor(db, options) {\n    super(db, options);\n    this[kIterator] = db.iterator({ ...options,\n      keys: false,\n      values: true\n    });\n    this[kHandleOne] = this[kHandleOne].bind(this);\n    this[kHandleMany] = this[kHandleMany].bind(this);\n  }\n\n}\n\nfor (const Iterator of [DefaultKeyIterator, DefaultValueIterator]) {\n  const keys = Iterator === DefaultKeyIterator;\n  const mapEntry = keys ? entry => entry[0] : entry => entry[1];\n\n  Iterator.prototype._next = function (callback) {\n    this[kCallback] = callback;\n    this[kIterator].next(this[kHandleOne]);\n  };\n\n  Iterator.prototype[kHandleOne] = function (err, key, value) {\n    const callback = this[kCallback];\n    if (err) callback(err);else callback(null, keys ? key : value);\n  };\n\n  Iterator.prototype._nextv = function (size, options, callback) {\n    this[kCallback] = callback;\n    this[kIterator].nextv(size, options, this[kHandleMany]);\n  };\n\n  Iterator.prototype._all = function (options, callback) {\n    this[kCallback] = callback;\n    this[kIterator].all(options, this[kHandleMany]);\n  };\n\n  Iterator.prototype[kHandleMany] = function (err, entries) {\n    const callback = this[kCallback];\n    if (err) callback(err);else callback(null, entries.map(mapEntry));\n  };\n\n  Iterator.prototype._seek = function (target, options) {\n    this[kIterator].seek(target, options);\n  };\n\n  Iterator.prototype._close = function (callback) {\n    this[kIterator].close(callback);\n  };\n} // Internal utilities, should be typed as AbstractKeyIterator and AbstractValueIterator\n\n\nexports.DefaultKeyIterator = DefaultKeyIterator;\nexports.DefaultValueIterator = DefaultValueIterator;","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/node_modules/abstract-level/lib/default-kv-iterator.js"],"names":["AbstractKeyIterator","AbstractValueIterator","require","kIterator","Symbol","kCallback","kHandleOne","kHandleMany","DefaultKeyIterator","constructor","db","options","iterator","keys","values","bind","DefaultValueIterator","Iterator","mapEntry","entry","prototype","_next","callback","next","err","key","value","_nextv","size","nextv","_all","all","entries","map","_seek","target","seek","_close","close","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nconst { AbstractKeyIterator, AbstractValueIterator } = require('../abstract-iterator')\n\nconst kIterator = Symbol('iterator')\nconst kCallback = Symbol('callback')\nconst kHandleOne = Symbol('handleOne')\nconst kHandleMany = Symbol('handleMany')\n\nclass DefaultKeyIterator extends AbstractKeyIterator {\n  constructor (db, options) {\n    super(db, options)\n\n    this[kIterator] = db.iterator({ ...options, keys: true, values: false })\n    this[kHandleOne] = this[kHandleOne].bind(this)\n    this[kHandleMany] = this[kHandleMany].bind(this)\n  }\n}\n\nclass DefaultValueIterator extends AbstractValueIterator {\n  constructor (db, options) {\n    super(db, options)\n\n    this[kIterator] = db.iterator({ ...options, keys: false, values: true })\n    this[kHandleOne] = this[kHandleOne].bind(this)\n    this[kHandleMany] = this[kHandleMany].bind(this)\n  }\n}\n\nfor (const Iterator of [DefaultKeyIterator, DefaultValueIterator]) {\n  const keys = Iterator === DefaultKeyIterator\n  const mapEntry = keys ? (entry) => entry[0] : (entry) => entry[1]\n\n  Iterator.prototype._next = function (callback) {\n    this[kCallback] = callback\n    this[kIterator].next(this[kHandleOne])\n  }\n\n  Iterator.prototype[kHandleOne] = function (err, key, value) {\n    const callback = this[kCallback]\n    if (err) callback(err)\n    else callback(null, keys ? key : value)\n  }\n\n  Iterator.prototype._nextv = function (size, options, callback) {\n    this[kCallback] = callback\n    this[kIterator].nextv(size, options, this[kHandleMany])\n  }\n\n  Iterator.prototype._all = function (options, callback) {\n    this[kCallback] = callback\n    this[kIterator].all(options, this[kHandleMany])\n  }\n\n  Iterator.prototype[kHandleMany] = function (err, entries) {\n    const callback = this[kCallback]\n    if (err) callback(err)\n    else callback(null, entries.map(mapEntry))\n  }\n\n  Iterator.prototype._seek = function (target, options) {\n    this[kIterator].seek(target, options)\n  }\n\n  Iterator.prototype._close = function (callback) {\n    this[kIterator].close(callback)\n  }\n}\n\n// Internal utilities, should be typed as AbstractKeyIterator and AbstractValueIterator\nexports.DefaultKeyIterator = DefaultKeyIterator\nexports.DefaultValueIterator = DefaultValueIterator\n"]},"metadata":{},"sourceType":"script"}