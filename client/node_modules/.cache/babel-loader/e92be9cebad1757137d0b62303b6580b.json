{"ast":null,"code":"// dns-nodejs gets replaced by dns-browser when bundled\nimport { resolveDnslink } from 'ipfs-core-config/dns';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\n/**\n * @param {string} domain\n * @returns {string}\n */\n\nfunction fqdnFixups(domain) {\n  // Allow resolution of .eth names via .eth.link\n  // More context at the go-ipfs counterpart: https://github.com/ipfs/go-ipfs/pull/6448\n  if (domain.endsWith('.eth')) {\n    domain = domain.replace(/.eth$/, '.eth.link');\n  }\n\n  return domain;\n}\n\nexport function createDns() {\n  /**\n   * @type {import('ipfs-core-types/src/root').API<{}>[\"dns\"]}\n   */\n  const resolveDNS = async function (domain) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      recursive: true\n    };\n\n    // eslint-disable-line require-await\n    if (typeof domain !== 'string') {\n      throw new Error('Invalid arguments, domain must be a string');\n    }\n\n    domain = fqdnFixups(domain);\n    return resolveDnslink(domain, options);\n  };\n\n  return withTimeoutOption(resolveDNS);\n}","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/node_modules/ipfs-core/src/components/dns.js"],"names":["resolveDnslink","withTimeoutOption","fqdnFixups","domain","endsWith","replace","createDns","resolveDNS","options","recursive","Error"],"mappings":"AAAA;AACA,SAASA,cAAT,QAA+B,sBAA/B;AACA,SAASC,iBAAT,QAAkC,qCAAlC;AAEA;AACA;AACA;AACA;;AACA,SAASC,UAAT,CAAqBC,MAArB,EAA6B;AAC3B;AACA;AACA,MAAIA,MAAM,CAACC,QAAP,CAAgB,MAAhB,CAAJ,EAA6B;AAC3BD,IAAAA,MAAM,GAAGA,MAAM,CAACE,OAAP,CAAe,OAAf,EAAwB,WAAxB,CAAT;AACD;;AACD,SAAOF,MAAP;AACD;;AAED,OAAO,SAASG,SAAT,GAAsB;AAC3B;AACF;AACA;AACE,QAAMC,UAAU,GAAG,gBAAOJ,MAAP,EAAiD;AAAA,QAAlCK,OAAkC,uEAAxB;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAwB;;AAAE;AACpE,QAAI,OAAON,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,YAAM,IAAIO,KAAJ,CAAU,4CAAV,CAAN;AACD;;AAEDP,IAAAA,MAAM,GAAGD,UAAU,CAACC,MAAD,CAAnB;AAEA,WAAOH,cAAc,CAACG,MAAD,EAASK,OAAT,CAArB;AACD,GARD;;AAUA,SAAOP,iBAAiB,CAACM,UAAD,CAAxB;AACD","sourcesContent":["// dns-nodejs gets replaced by dns-browser when bundled\nimport { resolveDnslink } from 'ipfs-core-config/dns'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {string} domain\n * @returns {string}\n */\nfunction fqdnFixups (domain) {\n  // Allow resolution of .eth names via .eth.link\n  // More context at the go-ipfs counterpart: https://github.com/ipfs/go-ipfs/pull/6448\n  if (domain.endsWith('.eth')) {\n    domain = domain.replace(/.eth$/, '.eth.link')\n  }\n  return domain\n}\n\nexport function createDns () {\n  /**\n   * @type {import('ipfs-core-types/src/root').API<{}>[\"dns\"]}\n   */\n  const resolveDNS = async (domain, options = { recursive: true }) => { // eslint-disable-line require-await\n    if (typeof domain !== 'string') {\n      throw new Error('Invalid arguments, domain must be a string')\n    }\n\n    domain = fqdnFixups(domain)\n\n    return resolveDnslink(domain, options)\n  }\n\n  return withTimeoutOption(resolveDNS)\n}\n"]},"metadata":{},"sourceType":"module"}