{"ast":null,"code":"import { gossipsub } from '@chainsafe/libp2p-gossipsub';\n/** @typedef {import('@libp2p/interface-pubsub').PubSub} PubSub */\n\n/** @type {() => Record<string, (components: any) => PubSub>}>} */\n\nexport const routers = () => ({\n  gossipsub: gossipsub({\n    fallbackToFloodsub: true,\n    emitSelf: true,\n    maxInboundStreams: 64,\n    maxOutboundStreams: 128\n  })\n});","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/node_modules/ipfs-core-config/src/libp2p-pubsub-routers.browser.js"],"names":["gossipsub","routers","fallbackToFloodsub","emitSelf","maxInboundStreams","maxOutboundStreams"],"mappings":"AAAA,SAASA,SAAT,QAA0B,6BAA1B;AAEA;;AAEA;;AACA,OAAO,MAAMC,OAAO,GAAG,OAAO;AAC5BD,EAAAA,SAAS,EAAEA,SAAS,CAAC;AACnBE,IAAAA,kBAAkB,EAAE,IADD;AAEnBC,IAAAA,QAAQ,EAAE,IAFS;AAGnBC,IAAAA,iBAAiB,EAAE,EAHA;AAInBC,IAAAA,kBAAkB,EAAE;AAJD,GAAD;AADQ,CAAP,CAAhB","sourcesContent":["import { gossipsub } from '@chainsafe/libp2p-gossipsub'\n\n/** @typedef {import('@libp2p/interface-pubsub').PubSub} PubSub */\n\n/** @type {() => Record<string, (components: any) => PubSub>}>} */\nexport const routers = () => ({\n  gossipsub: gossipsub({\n    fallbackToFloodsub: true,\n    emitSelf: true,\n    maxInboundStreams: 64,\n    maxOutboundStreams: 128\n  })\n})\n"]},"metadata":{},"sourceType":"module"}