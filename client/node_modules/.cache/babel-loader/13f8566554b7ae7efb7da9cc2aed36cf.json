{"ast":null,"code":"import { createCodec, CODEC_TYPES } from '../codec.js';\nexport function message(encode, decode) {\n  return createCodec('message', CODEC_TYPES.LENGTH_DELIMITED, encode, decode);\n}","map":{"version":3,"mappings":"AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAwD,aAAxD;AAQA,OAAM,SAAUC,OAAV,CAAuBC,MAAvB,EAAuFC,MAAvF,EAAqI;AACzI,SAAOJ,WAAW,CAAC,SAAD,EAAYC,WAAW,CAACI,gBAAxB,EAA0CF,MAA1C,EAAkDC,MAAlD,CAAlB;AACD","names":["createCodec","CODEC_TYPES","message","encode","decode","LENGTH_DELIMITED"],"sources":["C:\\Users\\Akshay Mishra\\OneDrive\\Desktop\\twitter-clone-dapp\\node_modules\\ipns\\node_modules\\protons-runtime\\src\\codecs\\message.ts"],"sourcesContent":["import { createCodec, CODEC_TYPES, EncodeOptions } from '../codec.js'\nimport type { Codec } from '../codec.js'\nimport type { Reader, Writer } from '../index.js'\n\nexport interface Factory<A, T> {\n  new (obj: A): T\n}\n\nexport function message <T> (encode: (obj: T, writer: Writer, opts?: EncodeOptions) => void, decode: (reader: Reader, length?: number) => T): Codec<T> {\n  return createCodec('message', CODEC_TYPES.LENGTH_DELIMITED, encode, decode)\n}\n"]},"metadata":{},"sourceType":"module"}