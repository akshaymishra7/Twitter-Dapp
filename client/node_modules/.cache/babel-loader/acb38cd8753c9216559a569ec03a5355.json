{"ast":null,"code":"import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport { createGet } from './get.js';\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\n\nexport function createData(_ref) {\n  let {\n    repo,\n    preload\n  } = _ref;\n  const get = createGet({\n    repo,\n    preload\n  });\n  /**\n   * @type {import('ipfs-core-types/src/object').API<{}>[\"data\"]}\n   */\n\n  async function data(multihash) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const node = await get(multihash, options);\n    return node.Data || new Uint8Array(0);\n  }\n\n  return withTimeoutOption(data);\n}","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/node_modules/ipfs-core/src/components/object/data.js"],"names":["withTimeoutOption","createGet","createData","repo","preload","get","data","multihash","options","node","Data","Uint8Array"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,qCAAlC;AACA,SAASC,SAAT,QAA0B,UAA1B;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,UAAT,OAAwC;AAAA,MAAnB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAmB;AAC7C,QAAMC,GAAG,GAAGJ,SAAS,CAAC;AAAEE,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,CAArB;AAEA;AACF;AACA;;AACE,iBAAeE,IAAf,CAAqBC,SAArB,EAA8C;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AAC5C,UAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACE,SAAD,EAAYC,OAAZ,CAAtB;AACA,WAAOC,IAAI,CAACC,IAAL,IAAa,IAAIC,UAAJ,CAAe,CAAf,CAApB;AACD;;AAED,SAAOX,iBAAiB,CAACM,IAAD,CAAxB;AACD","sourcesContent":["import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { createGet } from './get.js'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\nexport function createData ({ repo, preload }) {\n  const get = createGet({ repo, preload })\n\n  /**\n   * @type {import('ipfs-core-types/src/object').API<{}>[\"data\"]}\n   */\n  async function data (multihash, options = {}) {\n    const node = await get(multihash, options)\n    return node.Data || new Uint8Array(0)\n  }\n\n  return withTimeoutOption(data)\n}\n"]},"metadata":{},"sourceType":"module"}