{"ast":null,"code":"import { UnixFS } from 'ipfs-unixfs';\nimport persist from '../utils/persist.js';\nimport { encode, prepare } from '@ipld/dag-pb';\n/**\n * @typedef {import('../types').Directory} Directory\n */\n\n/**\n * @type {import('../types').UnixFSV1DagBuilder<Directory>}\n */\n\nconst dirBuilder = async (item, blockstore, options) => {\n  const unixfs = new UnixFS({\n    type: 'directory',\n    mtime: item.mtime,\n    mode: item.mode\n  });\n  const buffer = encode(prepare({\n    Data: unixfs.marshal()\n  }));\n  const cid = await persist(buffer, blockstore, options);\n  const path = item.path;\n  return {\n    cid,\n    path,\n    unixfs,\n    size: buffer.length\n  };\n};\n\nexport default dirBuilder;","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/node_modules/ipfs-unixfs-importer/src/dag-builder/dir.js"],"names":["UnixFS","persist","encode","prepare","dirBuilder","item","blockstore","options","unixfs","type","mtime","mode","buffer","Data","marshal","cid","path","size","length"],"mappings":"AAAA,SAASA,MAAT,QAAuB,aAAvB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,cAAhC;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AACA,MAAMC,UAAU,GAAG,OAAOC,IAAP,EAAaC,UAAb,EAAyBC,OAAzB,KAAqC;AACtD,QAAMC,MAAM,GAAG,IAAIR,MAAJ,CAAW;AACxBS,IAAAA,IAAI,EAAE,WADkB;AAExBC,IAAAA,KAAK,EAAEL,IAAI,CAACK,KAFY;AAGxBC,IAAAA,IAAI,EAAEN,IAAI,CAACM;AAHa,GAAX,CAAf;AAMA,QAAMC,MAAM,GAAGV,MAAM,CAACC,OAAO,CAAC;AAAEU,IAAAA,IAAI,EAAEL,MAAM,CAACM,OAAP;AAAR,GAAD,CAAR,CAArB;AACA,QAAMC,GAAG,GAAG,MAAMd,OAAO,CAACW,MAAD,EAASN,UAAT,EAAqBC,OAArB,CAAzB;AACA,QAAMS,IAAI,GAAGX,IAAI,CAACW,IAAlB;AAEA,SAAO;AACLD,IAAAA,GADK;AAELC,IAAAA,IAFK;AAGLR,IAAAA,MAHK;AAILS,IAAAA,IAAI,EAAEL,MAAM,CAACM;AAJR,GAAP;AAMD,CAjBD;;AAmBA,eAAed,UAAf","sourcesContent":["import { UnixFS } from 'ipfs-unixfs'\nimport persist from '../utils/persist.js'\nimport { encode, prepare } from '@ipld/dag-pb'\n\n/**\n * @typedef {import('../types').Directory} Directory\n */\n\n/**\n * @type {import('../types').UnixFSV1DagBuilder<Directory>}\n */\nconst dirBuilder = async (item, blockstore, options) => {\n  const unixfs = new UnixFS({\n    type: 'directory',\n    mtime: item.mtime,\n    mode: item.mode\n  })\n\n  const buffer = encode(prepare({ Data: unixfs.marshal() }))\n  const cid = await persist(buffer, blockstore, options)\n  const path = item.path\n\n  return {\n    cid,\n    path,\n    unixfs,\n    size: buffer.length\n  }\n}\n\nexport default dirBuilder\n"]},"metadata":{},"sourceType":"module"}