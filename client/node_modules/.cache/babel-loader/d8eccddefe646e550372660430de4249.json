{"ast":null,"code":"import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\n\nexport function createDisconnect(_ref) {\n  let {\n    network\n  } = _ref;\n\n  /**\n   * @type {import('ipfs-core-types/src/swarm').API<{}>[\"disconnect\"]}\n   */\n  async function disconnect(addr) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const {\n      libp2p\n    } = await network.use(options);\n    await libp2p.hangUp(addr);\n  }\n\n  return withTimeoutOption(disconnect);\n}","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/node_modules/ipfs-core/src/components/swarm/disconnect.js"],"names":["withTimeoutOption","createDisconnect","network","disconnect","addr","options","libp2p","use","hangUp"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,qCAAlC;AAEA;AACA;AACA;AACA;;AACA,OAAO,SAASC,gBAAT,OAAwC;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;;AAC7C;AACF;AACA;AACE,iBAAeC,UAAf,CAA2BC,IAA3B,EAA+C;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AAC7C,UAAM;AAAEC,MAAAA;AAAF,QAAa,MAAMJ,OAAO,CAACK,GAAR,CAAYF,OAAZ,CAAzB;AACA,UAAMC,MAAM,CAACE,MAAP,CAAcJ,IAAd,CAAN;AACD;;AAED,SAAOJ,iBAAiB,CAACG,UAAD,CAAxB;AACD","sourcesContent":["import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createDisconnect ({ network }) {\n  /**\n   * @type {import('ipfs-core-types/src/swarm').API<{}>[\"disconnect\"]}\n   */\n  async function disconnect (addr, options = {}) {\n    const { libp2p } = await network.use(options)\n    await libp2p.hangUp(addr)\n  }\n\n  return withTimeoutOption(disconnect)\n}\n"]},"metadata":{},"sourceType":"module"}