{"ast":null,"code":"export class NotInitializedError extends Error {\n  constructor() {\n    let message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'not initialized';\n    super(message);\n    this.name = 'NotInitializedError';\n    this.code = NotInitializedError.code;\n  }\n\n}\nNotInitializedError.code = 'ERR_NOT_INITIALIZED';\nexport class AlreadyInitializingError extends Error {\n  constructor() {\n    let message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'cannot initialize an initializing node';\n    super(message);\n    this.name = 'AlreadyInitializingError';\n    this.code = AlreadyInitializedError.code;\n  }\n\n}\nAlreadyInitializingError.code = 'ERR_ALREADY_INITIALIZING';\nexport class AlreadyInitializedError extends Error {\n  constructor() {\n    let message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'cannot re-initialize an initialized node';\n    super(message);\n    this.name = 'AlreadyInitializedError';\n    this.code = AlreadyInitializedError.code;\n  }\n\n}\nAlreadyInitializedError.code = 'ERR_ALREADY_INITIALIZED';\nexport class NotStartedError extends Error {\n  constructor() {\n    let message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'not started';\n    super(message);\n    this.name = 'NotStartedError';\n    this.code = NotStartedError.code;\n  }\n\n}\nNotStartedError.code = 'ERR_NOT_STARTED';\nexport class AlreadyStartingError extends Error {\n  constructor() {\n    let message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'cannot start, already startin';\n    super(message);\n    this.name = 'AlreadyStartingError';\n    this.code = AlreadyStartingError.code;\n  }\n\n}\nAlreadyStartingError.code = 'ERR_ALREADY_STARTING';\nexport class AlreadyStartedError extends Error {\n  constructor() {\n    let message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'cannot start, already started';\n    super(message);\n    this.name = 'AlreadyStartedError';\n    this.code = AlreadyStartedError.code;\n  }\n\n}\nAlreadyStartedError.code = 'ERR_ALREADY_STARTED';\nexport class NotEnabledError extends Error {\n  constructor() {\n    let message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'not enabled';\n    super(message);\n    this.name = 'NotEnabledError';\n    this.code = NotEnabledError.code;\n  }\n\n}\nNotEnabledError.code = 'ERR_NOT_ENABLED';","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/node_modules/ipfs-core/src/errors.js"],"names":["NotInitializedError","Error","constructor","message","name","code","AlreadyInitializingError","AlreadyInitializedError","NotStartedError","AlreadyStartingError","AlreadyStartedError","NotEnabledError"],"mappings":"AACA,OAAO,MAAMA,mBAAN,SAAkCC,KAAlC,CAAwC;AAC7CC,EAAAA,WAAW,GAA+B;AAAA,QAA7BC,OAA6B,uEAAnB,iBAAmB;AACxC,UAAMA,OAAN;AACA,SAAKC,IAAL,GAAY,qBAAZ;AACA,SAAKC,IAAL,GAAYL,mBAAmB,CAACK,IAAhC;AACD;;AAL4C;AAO/CL,mBAAmB,CAACK,IAApB,GAA2B,qBAA3B;AAEA,OAAO,MAAMC,wBAAN,SAAuCL,KAAvC,CAA6C;AAClDC,EAAAA,WAAW,GAAsD;AAAA,QAApDC,OAAoD,uEAA1C,wCAA0C;AAC/D,UAAMA,OAAN;AACA,SAAKC,IAAL,GAAY,0BAAZ;AACA,SAAKC,IAAL,GAAYE,uBAAuB,CAACF,IAApC;AACD;;AALiD;AAOpDC,wBAAwB,CAACD,IAAzB,GAAgC,0BAAhC;AAEA,OAAO,MAAME,uBAAN,SAAsCN,KAAtC,CAA4C;AACjDC,EAAAA,WAAW,GAAwD;AAAA,QAAtDC,OAAsD,uEAA5C,0CAA4C;AACjE,UAAMA,OAAN;AACA,SAAKC,IAAL,GAAY,yBAAZ;AACA,SAAKC,IAAL,GAAYE,uBAAuB,CAACF,IAApC;AACD;;AALgD;AAOnDE,uBAAuB,CAACF,IAAxB,GAA+B,yBAA/B;AAEA,OAAO,MAAMG,eAAN,SAA8BP,KAA9B,CAAoC;AACzCC,EAAAA,WAAW,GAA2B;AAAA,QAAzBC,OAAyB,uEAAf,aAAe;AACpC,UAAMA,OAAN;AACA,SAAKC,IAAL,GAAY,iBAAZ;AACA,SAAKC,IAAL,GAAYG,eAAe,CAACH,IAA5B;AACD;;AALwC;AAO3CG,eAAe,CAACH,IAAhB,GAAuB,iBAAvB;AAEA,OAAO,MAAMI,oBAAN,SAAmCR,KAAnC,CAAyC;AAC9CC,EAAAA,WAAW,GAA6C;AAAA,QAA3CC,OAA2C,uEAAjC,+BAAiC;AACtD,UAAMA,OAAN;AACA,SAAKC,IAAL,GAAY,sBAAZ;AACA,SAAKC,IAAL,GAAYI,oBAAoB,CAACJ,IAAjC;AACD;;AAL6C;AAOhDI,oBAAoB,CAACJ,IAArB,GAA4B,sBAA5B;AAEA,OAAO,MAAMK,mBAAN,SAAkCT,KAAlC,CAAwC;AAC7CC,EAAAA,WAAW,GAA6C;AAAA,QAA3CC,OAA2C,uEAAjC,+BAAiC;AACtD,UAAMA,OAAN;AACA,SAAKC,IAAL,GAAY,qBAAZ;AACA,SAAKC,IAAL,GAAYK,mBAAmB,CAACL,IAAhC;AACD;;AAL4C;AAO/CK,mBAAmB,CAACL,IAApB,GAA2B,qBAA3B;AAEA,OAAO,MAAMM,eAAN,SAA8BV,KAA9B,CAAoC;AACzCC,EAAAA,WAAW,GAA2B;AAAA,QAAzBC,OAAyB,uEAAf,aAAe;AACpC,UAAMA,OAAN;AACA,SAAKC,IAAL,GAAY,iBAAZ;AACA,SAAKC,IAAL,GAAYM,eAAe,CAACN,IAA5B;AACD;;AALwC;AAO3CM,eAAe,CAACN,IAAhB,GAAuB,iBAAvB","sourcesContent":["\nexport class NotInitializedError extends Error {\n  constructor (message = 'not initialized') {\n    super(message)\n    this.name = 'NotInitializedError'\n    this.code = NotInitializedError.code\n  }\n}\nNotInitializedError.code = 'ERR_NOT_INITIALIZED'\n\nexport class AlreadyInitializingError extends Error {\n  constructor (message = 'cannot initialize an initializing node') {\n    super(message)\n    this.name = 'AlreadyInitializingError'\n    this.code = AlreadyInitializedError.code\n  }\n}\nAlreadyInitializingError.code = 'ERR_ALREADY_INITIALIZING'\n\nexport class AlreadyInitializedError extends Error {\n  constructor (message = 'cannot re-initialize an initialized node') {\n    super(message)\n    this.name = 'AlreadyInitializedError'\n    this.code = AlreadyInitializedError.code\n  }\n}\nAlreadyInitializedError.code = 'ERR_ALREADY_INITIALIZED'\n\nexport class NotStartedError extends Error {\n  constructor (message = 'not started') {\n    super(message)\n    this.name = 'NotStartedError'\n    this.code = NotStartedError.code\n  }\n}\nNotStartedError.code = 'ERR_NOT_STARTED'\n\nexport class AlreadyStartingError extends Error {\n  constructor (message = 'cannot start, already startin') {\n    super(message)\n    this.name = 'AlreadyStartingError'\n    this.code = AlreadyStartingError.code\n  }\n}\nAlreadyStartingError.code = 'ERR_ALREADY_STARTING'\n\nexport class AlreadyStartedError extends Error {\n  constructor (message = 'cannot start, already started') {\n    super(message)\n    this.name = 'AlreadyStartedError'\n    this.code = AlreadyStartedError.code\n  }\n}\nAlreadyStartedError.code = 'ERR_ALREADY_STARTED'\n\nexport class NotEnabledError extends Error {\n  constructor (message = 'not enabled') {\n    super(message)\n    this.name = 'NotEnabledError'\n    this.code = NotEnabledError.code\n  }\n}\nNotEnabledError.code = 'ERR_NOT_ENABLED'\n"]},"metadata":{},"sourceType":"module"}