{"ast":null,"code":"import { base58btc } from 'multiformats/bases/base58';\nexport class WantListEntry {\n  /**\n   * @param {import('multiformats').CID} cid\n   * @param {number} priority\n   * @param {import('../message/message').Message.Wantlist.WantType} wantType\n   */\n  constructor(cid, priority, wantType) {\n    // Keep track of how many requests we have for this key\n    this._refCounter = 1;\n    this.cid = cid;\n    this.priority = priority || 1;\n    this.wantType = wantType;\n  }\n\n  inc() {\n    this._refCounter += 1;\n  }\n\n  dec() {\n    this._refCounter = Math.max(0, this._refCounter - 1);\n  }\n\n  hasRefs() {\n    return this._refCounter > 0;\n  } // So that console.log prints a nice description of this object\n\n\n  get [Symbol.toStringTag]() {\n    const cidStr = this.cid.toString(base58btc);\n    return `WantlistEntry <key: ${cidStr}, priority: ${this.priority}, refs: ${this._refCounter}>`;\n  }\n  /**\n   * @param {any} other\n   */\n\n\n  equals(other) {\n    return this._refCounter === other._refCounter && this.cid.equals(other.cid) && this.priority === other.priority && this.wantType === other.wantType;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/node_modules/ipfs-bitswap/src/wantlist/entry.js"],"names":["base58btc","WantListEntry","constructor","cid","priority","wantType","_refCounter","inc","dec","Math","max","hasRefs","Symbol","toStringTag","cidStr","toString","equals","other"],"mappings":"AACA,SAASA,SAAT,QAA0B,2BAA1B;AAEA,OAAO,MAAMC,aAAN,CAAoB;AACzB;AACF;AACA;AACA;AACA;AACEC,EAAAA,WAAW,CAAEC,GAAF,EAAOC,QAAP,EAAiBC,QAAjB,EAA2B;AACpC;AACA,SAAKC,WAAL,GAAmB,CAAnB;AAEA,SAAKH,GAAL,GAAWA,GAAX;AACA,SAAKC,QAAL,GAAgBA,QAAQ,IAAI,CAA5B;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACD;;AAEDE,EAAAA,GAAG,GAAI;AACL,SAAKD,WAAL,IAAoB,CAApB;AACD;;AAEDE,EAAAA,GAAG,GAAI;AACL,SAAKF,WAAL,GAAmBG,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,KAAKJ,WAAL,GAAmB,CAA/B,CAAnB;AACD;;AAEDK,EAAAA,OAAO,GAAI;AACT,WAAO,KAAKL,WAAL,GAAmB,CAA1B;AACD,GAzBwB,CA2BzB;;;AACuB,OAAlBM,MAAM,CAACC,WAAW,IAAK;AAC1B,UAAMC,MAAM,GAAG,KAAKX,GAAL,CAASY,QAAT,CAAkBf,SAAlB,CAAf;AACA,WAAQ,uBAAsBc,MAAO,eAAc,KAAKV,QAAS,WAAU,KAAKE,WAAY,GAA5F;AACD;AAED;AACF;AACA;;;AACEU,EAAAA,MAAM,CAAEC,KAAF,EAAS;AACb,WAAQ,KAAKX,WAAL,KAAqBW,KAAK,CAACX,WAA5B,IACL,KAAKH,GAAL,CAASa,MAAT,CAAgBC,KAAK,CAACd,GAAtB,CADK,IAEL,KAAKC,QAAL,KAAkBa,KAAK,CAACb,QAFnB,IAGL,KAAKC,QAAL,KAAkBY,KAAK,CAACZ,QAH1B;AAID;;AAzCwB","sourcesContent":["\nimport { base58btc } from 'multiformats/bases/base58'\n\nexport class WantListEntry {\n  /**\n   * @param {import('multiformats').CID} cid\n   * @param {number} priority\n   * @param {import('../message/message').Message.Wantlist.WantType} wantType\n   */\n  constructor (cid, priority, wantType) {\n    // Keep track of how many requests we have for this key\n    this._refCounter = 1\n\n    this.cid = cid\n    this.priority = priority || 1\n    this.wantType = wantType\n  }\n\n  inc () {\n    this._refCounter += 1\n  }\n\n  dec () {\n    this._refCounter = Math.max(0, this._refCounter - 1)\n  }\n\n  hasRefs () {\n    return this._refCounter > 0\n  }\n\n  // So that console.log prints a nice description of this object\n  get [Symbol.toStringTag] () {\n    const cidStr = this.cid.toString(base58btc)\n    return `WantlistEntry <key: ${cidStr}, priority: ${this.priority}, refs: ${this._refCounter}>`\n  }\n\n  /**\n   * @param {any} other\n   */\n  equals (other) {\n    return (this._refCounter === other._refCounter) &&\n      this.cid.equals(other.cid) &&\n      this.priority === other.priority &&\n      this.wantType === other.wantType\n  }\n}\n"]},"metadata":{},"sourceType":"module"}