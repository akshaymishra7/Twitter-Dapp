{"ast":null,"code":"import { base64 } from 'multiformats/bases/base64';\nimport * as ciphers from '../ciphers/aes-gcm.js';\n/**\n * Attempts to decrypt a base64 encoded PrivateKey string\n * with the given password. The privateKey must have been exported\n * using the same password and underlying cipher (aes-gcm)\n */\n\nexport async function importer(privateKey, password) {\n  const encryptedKey = base64.decode(privateKey);\n  const cipher = ciphers.create();\n  return cipher.decrypt(encryptedKey, password);\n}","map":{"version":3,"mappings":"AAAA,SAASA,MAAT,QAAuB,2BAAvB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AAEA;;;;;;AAKA,OAAO,eAAeC,QAAf,CAAyBC,UAAzB,EAA6CC,QAA7C,EAA6D;AAClE,QAAMC,YAAY,GAAGL,MAAM,CAACM,MAAP,CAAcH,UAAd,CAArB;AACA,QAAMI,MAAM,GAAGN,OAAO,CAACO,MAAR,EAAf;AACA,SAAOD,MAAM,CAACE,OAAP,CAAeJ,YAAf,EAA6BD,QAA7B,CAAP;AACD","names":["base64","ciphers","importer","privateKey","password","encryptedKey","decode","cipher","create","decrypt"],"sources":["C:\\Users\\Akshay Mishra\\OneDrive\\Desktop\\twitter-clone-dapp\\node_modules\\@libp2p\\crypto\\src\\keys\\importer.ts"],"sourcesContent":["import { base64 } from 'multiformats/bases/base64'\nimport * as ciphers from '../ciphers/aes-gcm.js'\n\n/**\n * Attempts to decrypt a base64 encoded PrivateKey string\n * with the given password. The privateKey must have been exported\n * using the same password and underlying cipher (aes-gcm)\n */\nexport async function importer (privateKey: string, password: string): Promise<Uint8Array> {\n  const encryptedKey = base64.decode(privateKey)\n  const cipher = ciphers.create()\n  return cipher.decrypt(encryptedKey, password)\n}\n"]},"metadata":{},"sourceType":"module"}