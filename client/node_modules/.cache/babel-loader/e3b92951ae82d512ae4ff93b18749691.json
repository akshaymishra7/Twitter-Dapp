{"ast":null,"code":"import { CodeError } from '@libp2p/interfaces/errors';\nconst CIPHER_MODES = {\n  16: 'aes-128-ctr',\n  32: 'aes-256-ctr'\n};\nexport function cipherMode(key) {\n  if (key.length === 16 || key.length === 32) {\n    return CIPHER_MODES[key.length];\n  }\n\n  const modes = Object.entries(CIPHER_MODES).map(_ref => {\n    let [k, v] = _ref;\n    return `${k} (${v})`;\n  }).join(' / ');\n  throw new CodeError(`Invalid key length ${key.length} bytes. Must be ${modes}`, 'ERR_INVALID_KEY_LENGTH');\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,2BAA1B;AAEA,MAAMC,YAAY,GAAG;AACnB,MAAI,aADe;AAEnB,MAAI;AAFe,CAArB;AAKA,OAAM,SAAUC,UAAV,CAAsBC,GAAtB,EAAqC;AACzC,MAAIA,GAAG,CAACC,MAAJ,KAAe,EAAf,IAAqBD,GAAG,CAACC,MAAJ,KAAe,EAAxC,EAA4C;AAC1C,WAAOH,YAAY,CAACE,GAAG,CAACC,MAAL,CAAnB;AACD;;AAED,QAAMC,KAAK,GAAGC,MAAM,CAACC,OAAP,CAAeN,YAAf,EAA6BO,GAA7B,CAAiC;AAAA,QAAC,CAACC,CAAD,EAAIC,CAAJ,CAAD;AAAA,WAAY,GAAGD,CAAC,KAAKC,CAAC,GAAtB;AAAA,GAAjC,EAA4DC,IAA5D,CAAiE,KAAjE,CAAd;AACA,QAAM,IAAIX,SAAJ,CAAc,sBAAsBG,GAAG,CAACC,MAAM,mBAAmBC,KAAK,EAAtE,EAA0E,wBAA1E,CAAN;AACD","names":["CodeError","CIPHER_MODES","cipherMode","key","length","modes","Object","entries","map","k","v","join"],"sources":["C:\\Users\\Akshay Mishra\\OneDrive\\Desktop\\twitter-clone-dapp\\node_modules\\@libp2p\\crypto\\src\\aes\\cipher-mode.ts"],"sourcesContent":["import { CodeError } from '@libp2p/interfaces/errors'\n\nconst CIPHER_MODES = {\n  16: 'aes-128-ctr',\n  32: 'aes-256-ctr'\n}\n\nexport function cipherMode (key: Uint8Array): string {\n  if (key.length === 16 || key.length === 32) {\n    return CIPHER_MODES[key.length]\n  }\n\n  const modes = Object.entries(CIPHER_MODES).map(([k, v]) => `${k} (${v})`).join(' / ')\n  throw new CodeError(`Invalid key length ${key.length} bytes. Must be ${modes}`, 'ERR_INVALID_KEY_LENGTH')\n}\n"]},"metadata":{},"sourceType":"module"}