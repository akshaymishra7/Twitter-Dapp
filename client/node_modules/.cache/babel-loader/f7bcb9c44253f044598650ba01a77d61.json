{"ast":null,"code":"import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport { createGet } from '../get.js';\nimport { createPut } from '../put.js';\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../../types').Preload} config.preload\n */\n\nexport function createRmLink(_ref) {\n  let {\n    repo,\n    preload\n  } = _ref;\n  const get = createGet({\n    repo,\n    preload\n  });\n  const put = createPut({\n    repo,\n    preload\n  });\n  /**\n   * @type {import('ipfs-core-types/src/object/patch').API<{}>[\"rmLink\"]}\n   */\n\n  async function rmLink(cid, link) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const node = await get(cid, options);\n    const name = (typeof link === 'string' ? link : link.Name) || '';\n    node.Links = node.Links.filter(l => l.Name !== name);\n    return put(node, options);\n  }\n\n  return withTimeoutOption(rmLink);\n}","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/node_modules/ipfs-core/src/components/object/patch/rm-link.js"],"names":["withTimeoutOption","createGet","createPut","createRmLink","repo","preload","get","put","rmLink","cid","link","options","node","name","Name","Links","filter","l"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,qCAAlC;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,SAASC,SAAT,QAA0B,WAA1B;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,YAAT,OAA0C;AAAA,MAAnB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAmB;AAC/C,QAAMC,GAAG,GAAGL,SAAS,CAAC;AAAEG,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,CAArB;AACA,QAAME,GAAG,GAAGL,SAAS,CAAC;AAAEE,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,CAArB;AAEA;AACF;AACA;;AACE,iBAAeG,MAAf,CAAuBC,GAAvB,EAA4BC,IAA5B,EAAgD;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AAC9C,UAAMC,IAAI,GAAG,MAAMN,GAAG,CAACG,GAAD,EAAME,OAAN,CAAtB;AACA,UAAME,IAAI,GAAG,CAAC,OAAOH,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkCA,IAAI,CAACI,IAAxC,KAAiD,EAA9D;AAEAF,IAAAA,IAAI,CAACG,KAAL,GAAaH,IAAI,CAACG,KAAL,CAAWC,MAAX,CAAkBC,CAAC,IAAIA,CAAC,CAACH,IAAF,KAAWD,IAAlC,CAAb;AAEA,WAAON,GAAG,CAACK,IAAD,EAAOD,OAAP,CAAV;AACD;;AAED,SAAOX,iBAAiB,CAACQ,MAAD,CAAxB;AACD","sourcesContent":["import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { createGet } from '../get.js'\nimport { createPut } from '../put.js'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../../types').Preload} config.preload\n */\nexport function createRmLink ({ repo, preload }) {\n  const get = createGet({ repo, preload })\n  const put = createPut({ repo, preload })\n\n  /**\n   * @type {import('ipfs-core-types/src/object/patch').API<{}>[\"rmLink\"]}\n   */\n  async function rmLink (cid, link, options = {}) {\n    const node = await get(cid, options)\n    const name = (typeof link === 'string' ? link : link.Name) || ''\n\n    node.Links = node.Links.filter(l => l.Name !== name)\n\n    return put(node, options)\n  }\n\n  return withTimeoutOption(rmLink)\n}\n"]},"metadata":{},"sourceType":"module"}