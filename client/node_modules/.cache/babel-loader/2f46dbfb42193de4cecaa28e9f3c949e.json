{"ast":null,"code":"import { allocUnsafe } from './alloc.js';\nimport { asUint8Array } from './util/as-uint8array.js';\n/**\n * Returns the xor distance between two arrays\n */\n\nexport function xor(a, b) {\n  if (a.length !== b.length) {\n    throw new Error('Inputs should have the same length');\n  }\n\n  const result = allocUnsafe(a.length);\n\n  for (let i = 0; i < a.length; i++) {\n    result[i] = a[i] ^ b[i];\n  }\n\n  return asUint8Array(result);\n}","map":{"version":3,"mappings":"AAAA,SAASA,WAAT,QAA4B,YAA5B;AACA,SAASC,YAAT,QAA6B,yBAA7B;AAEA;;;;AAGA,OAAM,SAAUC,GAAV,CAAeC,CAAf,EAA8BC,CAA9B,EAA2C;AAC/C,MAAID,CAAC,CAACE,MAAF,KAAaD,CAAC,CAACC,MAAnB,EAA2B;AACzB,UAAM,IAAIC,KAAJ,CAAU,oCAAV,CAAN;AACD;;AAED,QAAMC,MAAM,GAAGP,WAAW,CAACG,CAAC,CAACE,MAAH,CAA1B;;AAEA,OAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,CAAC,CAACE,MAAtB,EAA8BG,CAAC,EAA/B,EAAmC;AACjCD,UAAM,CAACC,CAAD,CAAN,GAAYL,CAAC,CAACK,CAAD,CAAD,GAAOJ,CAAC,CAACI,CAAD,CAApB;AACD;;AAED,SAAOP,YAAY,CAACM,MAAD,CAAnB;AACD","names":["allocUnsafe","asUint8Array","xor","a","b","length","Error","result","i"],"sources":["C:\\Users\\Akshay Mishra\\OneDrive\\Desktop\\twitter-clone-dapp\\node_modules\\uint8arrays\\src\\xor.ts"],"sourcesContent":["import { allocUnsafe } from './alloc.js'\nimport { asUint8Array } from './util/as-uint8array.js'\n\n/**\n * Returns the xor distance between two arrays\n */\nexport function xor (a: Uint8Array, b: Uint8Array): Uint8Array {\n  if (a.length !== b.length) {\n    throw new Error('Inputs should have the same length')\n  }\n\n  const result = allocUnsafe(a.length)\n\n  for (let i = 0; i < a.length; i++) {\n    result[i] = a[i] ^ b[i]\n  }\n\n  return asUint8Array(result)\n}\n"]},"metadata":{},"sourceType":"module"}