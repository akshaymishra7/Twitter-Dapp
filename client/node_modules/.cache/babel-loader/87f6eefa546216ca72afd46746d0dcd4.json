{"ast":null,"code":"'use strict';\n\nconst {\n  Buffer\n} = require('buffer') || {\n  Buffer: {\n    isBuffer: () => false\n  }\n};\n\nconst {\n  textEncoder,\n  textDecoder\n} = require('./text-endec')();\n\nconst {\n  BufferFormat,\n  ViewFormat,\n  UTF8Format\n} = require('./formats');\n/** @type {<T>(v: T) => v} */\n\n\nconst identity = v => v;\n/**\n * @type {typeof import('./encodings').utf8}\n */\n\n\nexports.utf8 = new UTF8Format({\n  encode: function (data) {\n    // On node 16.9.1 buffer.toString() is 5x faster than TextDecoder\n    return Buffer.isBuffer(data) ? data.toString('utf8') : ArrayBuffer.isView(data) ? textDecoder.decode(data) : String(data);\n  },\n  decode: identity,\n  name: 'utf8',\n\n  createViewTranscoder() {\n    return new ViewFormat({\n      encode: function (data) {\n        return ArrayBuffer.isView(data) ? data : textEncoder.encode(data);\n      },\n      decode: function (data) {\n        return textDecoder.decode(data);\n      },\n      name: `${this.name}+view`\n    });\n  },\n\n  createBufferTranscoder() {\n    return new BufferFormat({\n      encode: function (data) {\n        return Buffer.isBuffer(data) ? data : ArrayBuffer.isView(data) ? Buffer.from(data.buffer, data.byteOffset, data.byteLength) : Buffer.from(String(data), 'utf8');\n      },\n      decode: function (data) {\n        return data.toString('utf8');\n      },\n      name: `${this.name}+buffer`\n    });\n  }\n\n});\n/**\n * @type {typeof import('./encodings').json}\n */\n\nexports.json = new UTF8Format({\n  encode: JSON.stringify,\n  decode: JSON.parse,\n  name: 'json'\n});\n/**\n * @type {typeof import('./encodings').buffer}\n */\n\nexports.buffer = new BufferFormat({\n  encode: function (data) {\n    return Buffer.isBuffer(data) ? data : ArrayBuffer.isView(data) ? Buffer.from(data.buffer, data.byteOffset, data.byteLength) : Buffer.from(String(data), 'utf8');\n  },\n  decode: identity,\n  name: 'buffer',\n\n  createViewTranscoder() {\n    return new ViewFormat({\n      encode: function (data) {\n        return ArrayBuffer.isView(data) ? data : Buffer.from(String(data), 'utf8');\n      },\n      decode: function (data) {\n        return Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n      },\n      name: `${this.name}+view`\n    });\n  }\n\n});\n/**\n * @type {typeof import('./encodings').view}\n */\n\nexports.view = new ViewFormat({\n  encode: function (data) {\n    return ArrayBuffer.isView(data) ? data : textEncoder.encode(data);\n  },\n  decode: identity,\n  name: 'view',\n\n  createBufferTranscoder() {\n    return new BufferFormat({\n      encode: function (data) {\n        return Buffer.isBuffer(data) ? data : ArrayBuffer.isView(data) ? Buffer.from(data.buffer, data.byteOffset, data.byteLength) : Buffer.from(String(data), 'utf8');\n      },\n      decode: identity,\n      name: `${this.name}+buffer`\n    });\n  }\n\n});\n/**\n * @type {typeof import('./encodings').hex}\n */\n\nexports.hex = new BufferFormat({\n  encode: function (data) {\n    return Buffer.isBuffer(data) ? data : Buffer.from(String(data), 'hex');\n  },\n  decode: function (buffer) {\n    return buffer.toString('hex');\n  },\n  name: 'hex'\n});\n/**\n * @type {typeof import('./encodings').base64}\n */\n\nexports.base64 = new BufferFormat({\n  encode: function (data) {\n    return Buffer.isBuffer(data) ? data : Buffer.from(String(data), 'base64');\n  },\n  decode: function (buffer) {\n    return buffer.toString('base64');\n  },\n  name: 'base64'\n});","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/node_modules/level-transcoder/lib/encodings.js"],"names":["Buffer","require","isBuffer","textEncoder","textDecoder","BufferFormat","ViewFormat","UTF8Format","identity","v","exports","utf8","encode","data","toString","ArrayBuffer","isView","decode","String","name","createViewTranscoder","createBufferTranscoder","from","buffer","byteOffset","byteLength","json","JSON","stringify","parse","view","hex","base64"],"mappings":"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","sourcesContent":["'use strict'\n\nconst { Buffer } = require('buffer') || { Buffer: { isBuffer: () => false } }\nconst { textEncoder, textDecoder } = require('./text-endec')()\nconst { BufferFormat, ViewFormat, UTF8Format } = require('./formats')\n\n/** @type {<T>(v: T) => v} */\nconst identity = (v) => v\n\n/**\n * @type {typeof import('./encodings').utf8}\n */\nexports.utf8 = new UTF8Format({\n  encode: function (data) {\n    // On node 16.9.1 buffer.toString() is 5x faster than TextDecoder\n    return Buffer.isBuffer(data)\n      ? data.toString('utf8')\n      : ArrayBuffer.isView(data)\n        ? textDecoder.decode(data)\n        : String(data)\n  },\n  decode: identity,\n  name: 'utf8',\n  createViewTranscoder () {\n    return new ViewFormat({\n      encode: function (data) {\n        return ArrayBuffer.isView(data) ? data : textEncoder.encode(data)\n      },\n      decode: function (data) {\n        return textDecoder.decode(data)\n      },\n      name: `${this.name}+view`\n    })\n  },\n  createBufferTranscoder () {\n    return new BufferFormat({\n      encode: function (data) {\n        return Buffer.isBuffer(data)\n          ? data\n          : ArrayBuffer.isView(data)\n            ? Buffer.from(data.buffer, data.byteOffset, data.byteLength)\n            : Buffer.from(String(data), 'utf8')\n      },\n      decode: function (data) {\n        return data.toString('utf8')\n      },\n      name: `${this.name}+buffer`\n    })\n  }\n})\n\n/**\n * @type {typeof import('./encodings').json}\n */\nexports.json = new UTF8Format({\n  encode: JSON.stringify,\n  decode: JSON.parse,\n  name: 'json'\n})\n\n/**\n * @type {typeof import('./encodings').buffer}\n */\nexports.buffer = new BufferFormat({\n  encode: function (data) {\n    return Buffer.isBuffer(data)\n      ? data\n      : ArrayBuffer.isView(data)\n        ? Buffer.from(data.buffer, data.byteOffset, data.byteLength)\n        : Buffer.from(String(data), 'utf8')\n  },\n  decode: identity,\n  name: 'buffer',\n  createViewTranscoder () {\n    return new ViewFormat({\n      encode: function (data) {\n        return ArrayBuffer.isView(data) ? data : Buffer.from(String(data), 'utf8')\n      },\n      decode: function (data) {\n        return Buffer.from(data.buffer, data.byteOffset, data.byteLength)\n      },\n      name: `${this.name}+view`\n    })\n  }\n})\n\n/**\n * @type {typeof import('./encodings').view}\n */\nexports.view = new ViewFormat({\n  encode: function (data) {\n    return ArrayBuffer.isView(data) ? data : textEncoder.encode(data)\n  },\n  decode: identity,\n  name: 'view',\n  createBufferTranscoder () {\n    return new BufferFormat({\n      encode: function (data) {\n        return Buffer.isBuffer(data)\n          ? data\n          : ArrayBuffer.isView(data)\n            ? Buffer.from(data.buffer, data.byteOffset, data.byteLength)\n            : Buffer.from(String(data), 'utf8')\n      },\n      decode: identity,\n      name: `${this.name}+buffer`\n    })\n  }\n})\n\n/**\n * @type {typeof import('./encodings').hex}\n */\nexports.hex = new BufferFormat({\n  encode: function (data) {\n    return Buffer.isBuffer(data) ? data : Buffer.from(String(data), 'hex')\n  },\n  decode: function (buffer) {\n    return buffer.toString('hex')\n  },\n  name: 'hex'\n})\n\n/**\n * @type {typeof import('./encodings').base64}\n */\nexports.base64 = new BufferFormat({\n  encode: function (data) {\n    return Buffer.isBuffer(data) ? data : Buffer.from(String(data), 'base64')\n  },\n  decode: function (buffer) {\n    return buffer.toString('base64')\n  },\n  name: 'base64'\n})\n"]},"metadata":{},"sourceType":"script"}