{"ast":null,"code":"import detectElectron from 'is-electron';\nexport const isEnvWithDom = typeof window === 'object' && typeof document === 'object' && document.nodeType === 9;\nexport const isElectron = detectElectron();\n/**\n * Detects browser main thread  **NOT** web worker or service worker\n */\n\nexport const isBrowser = isEnvWithDom && !isElectron;\nexport const isElectronMain = isElectron && !isEnvWithDom;\nexport const isElectronRenderer = isElectron && isEnvWithDom;\nexport const isNode = typeof globalThis.process !== 'undefined' && typeof globalThis.process.release !== 'undefined' && globalThis.process.release.name === 'node' && !isElectron; // @ts-ignore\n// eslint-disable-next-line no-undef\n\nexport const isWebWorker = typeof importScripts === 'function' && typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope; // defeat bundlers replacing process.env.NODE_ENV with \"development\" or whatever\n\nexport const isTest = typeof globalThis.process !== 'undefined' && typeof globalThis.process.env !== 'undefined' && globalThis.process.env['NODE' + (() => '_')() + 'ENV'] === 'test';\nexport const isReactNative = typeof navigator !== 'undefined' && navigator.product === 'ReactNative';","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/node_modules/wherearewe/src/index.js"],"names":["detectElectron","isEnvWithDom","window","document","nodeType","isElectron","isBrowser","isElectronMain","isElectronRenderer","isNode","globalThis","process","release","name","isWebWorker","importScripts","self","WorkerGlobalScope","isTest","env","isReactNative","navigator","product"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,aAA3B;AAEA,OAAO,MAAMC,YAAY,GAAG,OAAOC,MAAP,KAAkB,QAAlB,IAA8B,OAAOC,QAAP,KAAoB,QAAlD,IAA8DA,QAAQ,CAACC,QAAT,KAAsB,CAAzG;AACP,OAAO,MAAMC,UAAU,GAAGL,cAAc,EAAjC;AAEP;AACA;AACA;;AACA,OAAO,MAAMM,SAAS,GAAGL,YAAY,IAAI,CAACI,UAAnC;AACP,OAAO,MAAME,cAAc,GAAGF,UAAU,IAAI,CAACJ,YAAtC;AACP,OAAO,MAAMO,kBAAkB,GAAGH,UAAU,IAAIJ,YAAzC;AACP,OAAO,MAAMQ,MAAM,GAAG,OAAOC,UAAU,CAACC,OAAlB,KAA8B,WAA9B,IAA6C,OAAOD,UAAU,CAACC,OAAX,CAAmBC,OAA1B,KAAsC,WAAnF,IAAkGF,UAAU,CAACC,OAAX,CAAmBC,OAAnB,CAA2BC,IAA3B,KAAoC,MAAtI,IAAgJ,CAACR,UAAhK,C,CACP;AACA;;AACA,OAAO,MAAMS,WAAW,GAAG,OAAOC,aAAP,KAAyB,UAAzB,IAAuC,OAAOC,IAAP,KAAgB,WAAvD,IAAsE,OAAOC,iBAAP,KAA6B,WAAnG,IAAkHD,IAAI,YAAYC,iBAAtJ,C,CAEP;;AACA,OAAO,MAAMC,MAAM,GAAG,OAAOR,UAAU,CAACC,OAAlB,KAA8B,WAA9B,IAA6C,OAAOD,UAAU,CAACC,OAAX,CAAmBQ,GAA1B,KAAkC,WAA/E,IAA8FT,UAAU,CAACC,OAAX,CAAmBQ,GAAnB,CAAuB,SAAS,CAAC,MAAM,GAAP,GAAT,GAAyB,KAAhD,MAA2D,MAAxK;AACP,OAAO,MAAMC,aAAa,GAAG,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAAS,CAACC,OAAV,KAAsB,aAAhF","sourcesContent":["import detectElectron from 'is-electron'\n\nexport const isEnvWithDom = typeof window === 'object' && typeof document === 'object' && document.nodeType === 9\nexport const isElectron = detectElectron()\n\n/**\n * Detects browser main thread  **NOT** web worker or service worker\n */\nexport const isBrowser = isEnvWithDom && !isElectron\nexport const isElectronMain = isElectron && !isEnvWithDom\nexport const isElectronRenderer = isElectron && isEnvWithDom\nexport const isNode = typeof globalThis.process !== 'undefined' && typeof globalThis.process.release !== 'undefined' && globalThis.process.release.name === 'node' && !isElectron\n// @ts-ignore\n// eslint-disable-next-line no-undef\nexport const isWebWorker = typeof importScripts === 'function' && typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope\n\n// defeat bundlers replacing process.env.NODE_ENV with \"development\" or whatever\nexport const isTest = typeof globalThis.process !== 'undefined' && typeof globalThis.process.env !== 'undefined' && globalThis.process.env['NODE' + (() => '_')() + 'ENV'] === 'test'\nexport const isReactNative = typeof navigator !== 'undefined' && navigator.product === 'ReactNative'\n"]},"metadata":{},"sourceType":"module"}