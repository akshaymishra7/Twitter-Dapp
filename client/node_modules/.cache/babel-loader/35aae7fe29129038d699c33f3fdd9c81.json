{"ast":null,"code":"import { createStat } from './stat.js';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport mergeOpts from 'merge-options';\nconst mergeOptions = mergeOpts.bind({\n  ignoreUndefined: true\n});\n/**\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {object} DefaultOptions\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\n\nconst defaultOptions = {};\n/**\n * @param {MfsContext} context\n */\n\nexport function createFlush(context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API<{}>[\"flush\"]}\n   */\n  async function mfsFlush(path) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    /** @type {DefaultOptions} */\n    options = mergeOptions(defaultOptions, options);\n    const {\n      cid\n    } = await createStat(context)(path, options);\n    return cid;\n  }\n\n  return withTimeoutOption(mfsFlush);\n}","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/node_modules/ipfs-core/src/components/files/flush.js"],"names":["createStat","withTimeoutOption","mergeOpts","mergeOptions","bind","ignoreUndefined","defaultOptions","createFlush","context","mfsFlush","path","options","cid"],"mappings":"AAAA,SAASA,UAAT,QAA2B,WAA3B;AACA,SAASC,iBAAT,QAAkC,qCAAlC;AACA,OAAOC,SAAP,MAAsB,eAAtB;AAEA,MAAMC,YAAY,GAAGD,SAAS,CAACE,IAAV,CAAe;AAAEC,EAAAA,eAAe,EAAE;AAAnB,CAAf,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AACA,MAAMC,cAAc,GAAG,EAAvB;AAEA;AACA;AACA;;AACA,OAAO,SAASC,WAAT,CAAsBC,OAAtB,EAA+B;AACpC;AACF;AACA;AACE,iBAAeC,QAAf,CAAyBC,IAAzB,EAA6C;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AAC3C;AACAA,IAAAA,OAAO,GAAGR,YAAY,CAACG,cAAD,EAAiBK,OAAjB,CAAtB;AAEA,UAAM;AAAEC,MAAAA;AAAF,QAAU,MAAMZ,UAAU,CAACQ,OAAD,CAAV,CAAoBE,IAApB,EAA0BC,OAA1B,CAAtB;AAEA,WAAOC,GAAP;AACD;;AAED,SAAOX,iBAAiB,CAACQ,QAAD,CAAxB;AACD","sourcesContent":["import { createStat } from './stat.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport mergeOpts from 'merge-options'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\n\n/**\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {object} DefaultOptions\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\nconst defaultOptions = {}\n\n/**\n * @param {MfsContext} context\n */\nexport function createFlush (context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API<{}>[\"flush\"]}\n   */\n  async function mfsFlush (path, options = {}) {\n    /** @type {DefaultOptions} */\n    options = mergeOptions(defaultOptions, options)\n\n    const { cid } = await createStat(context)(path, options)\n\n    return cid\n  }\n\n  return withTimeoutOption(mfsFlush)\n}\n"]},"metadata":{},"sourceType":"module"}