{"ast":null,"code":"import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\n/**\n * @param {object} config\n * @param {import('../../types').Preload} config.preload\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\n\nexport function createGet(_ref) {\n  let {\n    preload,\n    repo\n  } = _ref;\n\n  /**\n   * @type {import('ipfs-core-types/src/block').API<{}>[\"get\"]}\n   */\n  async function get(cid) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    // eslint-disable-line require-await\n    if (options.preload !== false) {\n      preload(cid);\n    }\n\n    return repo.blocks.get(cid, options);\n  }\n\n  return withTimeoutOption(get);\n}","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/node_modules/ipfs-core/src/components/block/get.js"],"names":["withTimeoutOption","createGet","preload","repo","get","cid","options","blocks"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,qCAAlC;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,SAAT,OAAuC;AAAA,MAAnB;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAmB;;AAC5C;AACF;AACA;AACE,iBAAeC,GAAf,CAAoBC,GAApB,EAAuC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AAAE;AACvC,QAAIA,OAAO,CAACJ,OAAR,KAAoB,KAAxB,EAA+B;AAC7BA,MAAAA,OAAO,CAACG,GAAD,CAAP;AACD;;AAED,WAAOF,IAAI,CAACI,MAAL,CAAYH,GAAZ,CAAgBC,GAAhB,EAAqBC,OAArB,CAAP;AACD;;AAED,SAAON,iBAAiB,CAACI,GAAD,CAAxB;AACD","sourcesContent":["import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('../../types').Preload} config.preload\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createGet ({ preload, repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/block').API<{}>[\"get\"]}\n   */\n  async function get (cid, options = {}) { // eslint-disable-line require-await\n    if (options.preload !== false) {\n      preload(cid)\n    }\n\n    return repo.blocks.get(cid, options)\n  }\n\n  return withTimeoutOption(get)\n}\n"]},"metadata":{},"sourceType":"module"}