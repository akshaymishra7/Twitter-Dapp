{"ast":null,"code":"import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { createGet } from '../get.js';\nimport { createPut } from '../put.js';\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../../types').Preload} config.preload\n */\n\nexport function createAppendData(_ref) {\n  let {\n    repo,\n    preload\n  } = _ref;\n  const get = createGet({\n    repo,\n    preload\n  });\n  const put = createPut({\n    repo,\n    preload\n  });\n  /**\n   * @type {import('ipfs-core-types/src/object/patch').API<{}>[\"appendData\"]}\n   */\n\n  async function appendData(cid, data) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const node = await get(cid, options);\n    const newData = uint8ArrayConcat([node.Data || [], data]);\n    return put({ ...node,\n      Data: newData\n    }, options);\n  }\n\n  return withTimeoutOption(appendData);\n}","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/node_modules/ipfs-core/src/components/object/patch/append-data.js"],"names":["withTimeoutOption","concat","uint8ArrayConcat","createGet","createPut","createAppendData","repo","preload","get","put","appendData","cid","data","options","node","newData","Data"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,qCAAlC;AACA,SAASC,MAAM,IAAIC,gBAAnB,QAA2C,oBAA3C;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,SAASC,SAAT,QAA0B,WAA1B;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,gBAAT,OAA8C;AAAA,MAAnB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAmB;AACnD,QAAMC,GAAG,GAAGL,SAAS,CAAC;AAAEG,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,CAArB;AACA,QAAME,GAAG,GAAGL,SAAS,CAAC;AAAEE,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,CAArB;AAEA;AACF;AACA;;AACE,iBAAeG,UAAf,CAA2BC,GAA3B,EAAgCC,IAAhC,EAAoD;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AAClD,UAAMC,IAAI,GAAG,MAAMN,GAAG,CAACG,GAAD,EAAME,OAAN,CAAtB;AACA,UAAME,OAAO,GAAGb,gBAAgB,CAAC,CAACY,IAAI,CAACE,IAAL,IAAa,EAAd,EAAkBJ,IAAlB,CAAD,CAAhC;AAEA,WAAOH,GAAG,CAAC,EACT,GAAGK,IADM;AAETE,MAAAA,IAAI,EAAED;AAFG,KAAD,EAGPF,OAHO,CAAV;AAID;;AAED,SAAOb,iBAAiB,CAACU,UAAD,CAAxB;AACD","sourcesContent":["import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat'\nimport { createGet } from '../get.js'\nimport { createPut } from '../put.js'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../../types').Preload} config.preload\n */\nexport function createAppendData ({ repo, preload }) {\n  const get = createGet({ repo, preload })\n  const put = createPut({ repo, preload })\n\n  /**\n   * @type {import('ipfs-core-types/src/object/patch').API<{}>[\"appendData\"]}\n   */\n  async function appendData (cid, data, options = {}) {\n    const node = await get(cid, options)\n    const newData = uint8ArrayConcat([node.Data || [], data])\n\n    return put({\n      ...node,\n      Data: newData\n    }, options)\n  }\n\n  return withTimeoutOption(appendData)\n}\n"]},"metadata":{},"sourceType":"module"}