{"ast":null,"code":"import { Key } from 'interface-datastore/key';\nimport { base32 } from 'multiformats/bases/base32';\nimport { CID } from 'multiformats/cid';\nexport const PIN_DS_KEY = new Key('/local/pins');\nexport const DEFAULT_FANOUT = 256;\nexport const MAX_ITEMS = 8192;\nexport const EMPTY_KEY = CID.parse('QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n');\nexport const PinTypes = {\n  direct: 'direct',\n  recursive: 'recursive'\n};\n/**\n * @param {import('multiformats').CID} cid\n */\n\nexport function cidToKey(cid) {\n  return new Key(`/${base32.encode(cid.multihash.bytes).toUpperCase().substring(1)}`);\n}","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/node_modules/ipfs-repo-migrations/src/migrations/migration-9/utils.js"],"names":["Key","base32","CID","PIN_DS_KEY","DEFAULT_FANOUT","MAX_ITEMS","EMPTY_KEY","parse","PinTypes","direct","recursive","cidToKey","cid","encode","multihash","bytes","toUpperCase","substring"],"mappings":"AACA,SAASA,GAAT,QAAoB,yBAApB;AACA,SAASC,MAAT,QAAuB,2BAAvB;AACA,SAASC,GAAT,QAAoB,kBAApB;AAEA,OAAO,MAAMC,UAAU,GAAG,IAAIH,GAAJ,CAAQ,aAAR,CAAnB;AACP,OAAO,MAAMI,cAAc,GAAG,GAAvB;AACP,OAAO,MAAMC,SAAS,GAAG,IAAlB;AACP,OAAO,MAAMC,SAAS,GAAGJ,GAAG,CAACK,KAAJ,CAAU,gDAAV,CAAlB;AAEP,OAAO,MAAMC,QAAQ,GAAG;AACtBC,EAAAA,MAAM,EAAE,QADc;AAEtBC,EAAAA,SAAS,EAAE;AAFW,CAAjB;AAKP;AACA;AACA;;AACA,OAAO,SAASC,QAAT,CAAmBC,GAAnB,EAAwB;AAC7B,SAAO,IAAIZ,GAAJ,CAAS,IAAGC,MAAM,CAACY,MAAP,CAAcD,GAAG,CAACE,SAAJ,CAAcC,KAA5B,EAAmCC,WAAnC,GAAiDC,SAAjD,CAA2D,CAA3D,CAA8D,EAA1E,CAAP;AACD","sourcesContent":["\nimport { Key } from 'interface-datastore/key'\nimport { base32 } from 'multiformats/bases/base32'\nimport { CID } from 'multiformats/cid'\n\nexport const PIN_DS_KEY = new Key('/local/pins')\nexport const DEFAULT_FANOUT = 256\nexport const MAX_ITEMS = 8192\nexport const EMPTY_KEY = CID.parse('QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n')\n\nexport const PinTypes = {\n  direct: 'direct',\n  recursive: 'recursive'\n}\n\n/**\n * @param {import('multiformats').CID} cid\n */\nexport function cidToKey (cid) {\n  return new Key(`/${base32.encode(cid.multihash.bytes).toUpperCase().substring(1)}`)\n}\n"]},"metadata":{},"sourceType":"module"}