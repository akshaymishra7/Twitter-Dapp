{"ast":null,"code":"import { createData } from './data.js';\nimport { createGet } from './get.js';\nimport { createLinks } from './links.js';\nimport { createNew } from './new.js';\nimport { createPut } from './put.js';\nimport { createStat } from './stat.js';\nimport { ObjectPatchAPI } from './patch/index.js';\n/**\n * @typedef {import('../../types').Preload} Preload\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\nexport class ObjectAPI {\n  /**\n   * @param {object} config\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n   * @param {Preload} config.preload\n   */\n  constructor(_ref) {\n    let {\n      repo,\n      codecs,\n      preload\n    } = _ref;\n    this.data = createData({\n      repo,\n      preload\n    });\n    this.get = createGet({\n      repo,\n      preload\n    });\n    this.links = createLinks({\n      repo,\n      codecs\n    });\n    this.new = createNew({\n      repo,\n      preload\n    });\n    this.put = createPut({\n      repo,\n      preload\n    });\n    this.stat = createStat({\n      repo,\n      preload\n    });\n    this.patch = new ObjectPatchAPI({\n      repo,\n      preload\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/node_modules/ipfs-core/src/components/object/index.js"],"names":["createData","createGet","createLinks","createNew","createPut","createStat","ObjectPatchAPI","ObjectAPI","constructor","repo","codecs","preload","data","get","links","new","put","stat","patch"],"mappings":"AAAA,SAASA,UAAT,QAA2B,WAA3B;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,SAAN,CAAgB;AACrB;AACF;AACA;AACA;AACA;AACA;AACEC,EAAAA,WAAW,OAA6B;AAAA,QAA3B;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,MAAR;AAAgBC,MAAAA;AAAhB,KAA2B;AACtC,SAAKC,IAAL,GAAYZ,UAAU,CAAC;AAAES,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAAD,CAAtB;AACA,SAAKE,GAAL,GAAWZ,SAAS,CAAC;AAAEQ,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAAD,CAApB;AACA,SAAKG,KAAL,GAAaZ,WAAW,CAAC;AAAEO,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAD,CAAxB;AACA,SAAKK,GAAL,GAAWZ,SAAS,CAAC;AAAEM,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAAD,CAApB;AACA,SAAKK,GAAL,GAAWZ,SAAS,CAAC;AAAEK,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAAD,CAApB;AACA,SAAKM,IAAL,GAAYZ,UAAU,CAAC;AAAEI,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAAD,CAAtB;AACA,SAAKO,KAAL,GAAa,IAAIZ,cAAJ,CAAmB;AAAEG,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAAnB,CAAb;AACD;;AAfoB","sourcesContent":["import { createData } from './data.js'\nimport { createGet } from './get.js'\nimport { createLinks } from './links.js'\nimport { createNew } from './new.js'\nimport { createPut } from './put.js'\nimport { createStat } from './stat.js'\nimport { ObjectPatchAPI } from './patch/index.js'\n\n/**\n * @typedef {import('../../types').Preload} Preload\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\nexport class ObjectAPI {\n  /**\n   * @param {object} config\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n   * @param {Preload} config.preload\n   */\n  constructor ({ repo, codecs, preload }) {\n    this.data = createData({ repo, preload })\n    this.get = createGet({ repo, preload })\n    this.links = createLinks({ repo, codecs })\n    this.new = createNew({ repo, preload })\n    this.put = createPut({ repo, preload })\n    this.stat = createStat({ repo, preload })\n    this.patch = new ObjectPatchAPI({ repo, preload })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}