{"ast":null,"code":"const word = '[a-fA-F\\\\d:]';\n\nconst boundry = options => options && options.includeBoundaries ? `(?:(?<=\\\\s|^)(?=${word})|(?<=${word})(?=\\\\s|$))` : '';\n\nconst v4 = '(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}';\nconst v6segment = '[a-fA-F\\\\d]{1,4}';\nconst v6 = `\n(?:\n(?:${v6segment}:){7}(?:${v6segment}|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:${v6segment}:){6}(?:${v4}|:${v6segment}|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:${v6segment}:){5}(?::${v4}|(?::${v6segment}){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:${v6segment}:){4}(?:(?::${v6segment}){0,1}:${v4}|(?::${v6segment}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:${v6segment}:){3}(?:(?::${v6segment}){0,2}:${v4}|(?::${v6segment}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:${v6segment}:){2}(?:(?::${v6segment}){0,3}:${v4}|(?::${v6segment}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:${v6segment}:){1}(?:(?::${v6segment}){0,4}:${v4}|(?::${v6segment}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::(?:(?::${v6segment}){0,5}:${v4}|(?::${v6segment}){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1\n`.replace(/\\s*\\/\\/.*$/gm, '').replace(/\\n/g, '').trim(); // Pre-compile only the exact regexes because adding a global flag make regexes stateful\n\nconst v46Exact = new RegExp(`(?:^${v4}$)|(?:^${v6}$)`);\nconst v4exact = new RegExp(`^${v4}$`);\nconst v6exact = new RegExp(`^${v6}$`);\n\nconst ipRegex = options => options && options.exact ? v46Exact : new RegExp(`(?:${boundry(options)}${v4}${boundry(options)})|(?:${boundry(options)}${v6}${boundry(options)})`, 'g');\n\nipRegex.v4 = options => options && options.exact ? v4exact : new RegExp(`${boundry(options)}${v4}${boundry(options)}`, 'g');\n\nipRegex.v6 = options => options && options.exact ? v6exact : new RegExp(`${boundry(options)}${v6}${boundry(options)}`, 'g');\n\nexport default ipRegex;","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/node_modules/ip-regex/index.js"],"names":["word","boundry","options","includeBoundaries","v4","v6segment","v6","replace","trim","v46Exact","RegExp","v4exact","v6exact","ipRegex","exact"],"mappings":"AAAA,MAAMA,IAAI,GAAG,cAAb;;AAEA,MAAMC,OAAO,GAAGC,OAAO,IAAIA,OAAO,IAAIA,OAAO,CAACC,iBAAnB,GACvB,mBAAkBH,IAAK,SAAQA,IAAK,aADb,GAExB,EAFH;;AAIA,MAAMI,EAAE,GAAG,gGAAX;AAEA,MAAMC,SAAS,GAAG,kBAAlB;AAEA,MAAMC,EAAE,GAAI;AACZ;AACA,KAAKD,SAAU,WAAUA,SAAU;AACnC,KAAKA,SAAU,WAAUD,EAAG,KAAIC,SAAU;AAC1C,KAAKA,SAAU,YAAWD,EAAG,QAAOC,SAAU;AAC9C,KAAKA,SAAU,eAAcA,SAAU,UAASD,EAAG,QAAOC,SAAU;AACpE,KAAKA,SAAU,eAAcA,SAAU,UAASD,EAAG,QAAOC,SAAU;AACpE,KAAKA,SAAU,eAAcA,SAAU,UAASD,EAAG,QAAOC,SAAU;AACpE,KAAKA,SAAU,eAAcA,SAAU,UAASD,EAAG,QAAOC,SAAU;AACpE,aAAaA,SAAU,UAASD,EAAG,QAAOC,SAAU;AACpD;AACA,CAXW,CAWTE,OAXS,CAWD,cAXC,EAWe,EAXf,EAWmBA,OAXnB,CAW2B,KAX3B,EAWkC,EAXlC,EAWsCC,IAXtC,EAAX,C,CAaA;;AACA,MAAMC,QAAQ,GAAG,IAAIC,MAAJ,CAAY,OAAMN,EAAG,UAASE,EAAG,IAAjC,CAAjB;AACA,MAAMK,OAAO,GAAG,IAAID,MAAJ,CAAY,IAAGN,EAAG,GAAlB,CAAhB;AACA,MAAMQ,OAAO,GAAG,IAAIF,MAAJ,CAAY,IAAGJ,EAAG,GAAlB,CAAhB;;AAEA,MAAMO,OAAO,GAAGX,OAAO,IAAIA,OAAO,IAAIA,OAAO,CAACY,KAAnB,GACxBL,QADwB,GAExB,IAAIC,MAAJ,CAAY,MAAKT,OAAO,CAACC,OAAD,CAAU,GAAEE,EAAG,GAAEH,OAAO,CAACC,OAAD,CAAU,QAAOD,OAAO,CAACC,OAAD,CAAU,GAAEI,EAAG,GAAEL,OAAO,CAACC,OAAD,CAAU,GAA1G,EAA8G,GAA9G,CAFH;;AAIAW,OAAO,CAACT,EAAR,GAAaF,OAAO,IAAIA,OAAO,IAAIA,OAAO,CAACY,KAAnB,GAA2BH,OAA3B,GAAqC,IAAID,MAAJ,CAAY,GAAET,OAAO,CAACC,OAAD,CAAU,GAAEE,EAAG,GAAEH,OAAO,CAACC,OAAD,CAAU,EAAvD,EAA0D,GAA1D,CAA7D;;AACAW,OAAO,CAACP,EAAR,GAAaJ,OAAO,IAAIA,OAAO,IAAIA,OAAO,CAACY,KAAnB,GAA2BF,OAA3B,GAAqC,IAAIF,MAAJ,CAAY,GAAET,OAAO,CAACC,OAAD,CAAU,GAAEI,EAAG,GAAEL,OAAO,CAACC,OAAD,CAAU,EAAvD,EAA0D,GAA1D,CAA7D;;AAEA,eAAeW,OAAf","sourcesContent":["const word = '[a-fA-F\\\\d:]';\n\nconst boundry = options => options && options.includeBoundaries\n\t? `(?:(?<=\\\\s|^)(?=${word})|(?<=${word})(?=\\\\s|$))`\n\t: '';\n\nconst v4 = '(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}';\n\nconst v6segment = '[a-fA-F\\\\d]{1,4}';\n\nconst v6 = `\n(?:\n(?:${v6segment}:){7}(?:${v6segment}|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:${v6segment}:){6}(?:${v4}|:${v6segment}|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:${v6segment}:){5}(?::${v4}|(?::${v6segment}){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:${v6segment}:){4}(?:(?::${v6segment}){0,1}:${v4}|(?::${v6segment}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:${v6segment}:){3}(?:(?::${v6segment}){0,2}:${v4}|(?::${v6segment}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:${v6segment}:){2}(?:(?::${v6segment}){0,3}:${v4}|(?::${v6segment}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:${v6segment}:){1}(?:(?::${v6segment}){0,4}:${v4}|(?::${v6segment}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::(?:(?::${v6segment}){0,5}:${v4}|(?::${v6segment}){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1\n`.replace(/\\s*\\/\\/.*$/gm, '').replace(/\\n/g, '').trim();\n\n// Pre-compile only the exact regexes because adding a global flag make regexes stateful\nconst v46Exact = new RegExp(`(?:^${v4}$)|(?:^${v6}$)`);\nconst v4exact = new RegExp(`^${v4}$`);\nconst v6exact = new RegExp(`^${v6}$`);\n\nconst ipRegex = options => options && options.exact\n\t? v46Exact\n\t: new RegExp(`(?:${boundry(options)}${v4}${boundry(options)})|(?:${boundry(options)}${v6}${boundry(options)})`, 'g');\n\nipRegex.v4 = options => options && options.exact ? v4exact : new RegExp(`${boundry(options)}${v4}${boundry(options)}`, 'g');\nipRegex.v6 = options => options && options.exact ? v6exact : new RegExp(`${boundry(options)}${v6}${boundry(options)}`, 'g');\n\nexport default ipRegex;\n"]},"metadata":{},"sourceType":"module"}