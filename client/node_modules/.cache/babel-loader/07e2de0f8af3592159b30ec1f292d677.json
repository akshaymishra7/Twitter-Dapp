{"ast":null,"code":"const RateLimiterRes = require('./RateLimiterRes');\n\nmodule.exports = class RLWrapperBlackAndWhite {\n  constructor() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.limiter = opts.limiter;\n    this.blackList = opts.blackList;\n    this.whiteList = opts.whiteList;\n    this.isBlackListed = opts.isBlackListed;\n    this.isWhiteListed = opts.isWhiteListed;\n    this.runActionAnyway = opts.runActionAnyway;\n  }\n\n  get limiter() {\n    return this._limiter;\n  }\n\n  set limiter(value) {\n    if (typeof value === 'undefined') {\n      throw new Error('limiter is not set');\n    }\n\n    this._limiter = value;\n  }\n\n  get runActionAnyway() {\n    return this._runActionAnyway;\n  }\n\n  set runActionAnyway(value) {\n    this._runActionAnyway = typeof value === 'undefined' ? false : value;\n  }\n\n  get blackList() {\n    return this._blackList;\n  }\n\n  set blackList(value) {\n    this._blackList = Array.isArray(value) ? value : [];\n  }\n\n  get isBlackListed() {\n    return this._isBlackListed;\n  }\n\n  set isBlackListed(func) {\n    if (typeof func === 'undefined') {\n      func = () => false;\n    }\n\n    if (typeof func !== 'function') {\n      throw new Error('isBlackListed must be function');\n    }\n\n    this._isBlackListed = func;\n  }\n\n  get whiteList() {\n    return this._whiteList;\n  }\n\n  set whiteList(value) {\n    this._whiteList = Array.isArray(value) ? value : [];\n  }\n\n  get isWhiteListed() {\n    return this._isWhiteListed;\n  }\n\n  set isWhiteListed(func) {\n    if (typeof func === 'undefined') {\n      func = () => false;\n    }\n\n    if (typeof func !== 'function') {\n      throw new Error('isWhiteListed must be function');\n    }\n\n    this._isWhiteListed = func;\n  }\n\n  isBlackListedSomewhere(key) {\n    return this.blackList.indexOf(key) >= 0 || this.isBlackListed(key);\n  }\n\n  isWhiteListedSomewhere(key) {\n    return this.whiteList.indexOf(key) >= 0 || this.isWhiteListed(key);\n  }\n\n  getBlackRes() {\n    return new RateLimiterRes(0, Number.MAX_SAFE_INTEGER, 0, false);\n  }\n\n  getWhiteRes() {\n    return new RateLimiterRes(Number.MAX_SAFE_INTEGER, 0, 0, false);\n  }\n\n  rejectBlack() {\n    return Promise.reject(this.getBlackRes());\n  }\n\n  resolveBlack() {\n    return Promise.resolve(this.getBlackRes());\n  }\n\n  resolveWhite() {\n    return Promise.resolve(this.getWhiteRes());\n  }\n\n  consume(key) {\n    let pointsToConsume = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let res;\n\n    if (this.isWhiteListedSomewhere(key)) {\n      res = this.resolveWhite();\n    } else if (this.isBlackListedSomewhere(key)) {\n      res = this.rejectBlack();\n    }\n\n    if (typeof res === 'undefined') {\n      return this.limiter.consume(key, pointsToConsume);\n    }\n\n    if (this.runActionAnyway) {\n      this.limiter.consume(key, pointsToConsume).catch(() => {});\n    }\n\n    return res;\n  }\n\n  block(key, secDuration) {\n    let res;\n\n    if (this.isWhiteListedSomewhere(key)) {\n      res = this.resolveWhite();\n    } else if (this.isBlackListedSomewhere(key)) {\n      res = this.resolveBlack();\n    }\n\n    if (typeof res === 'undefined') {\n      return this.limiter.block(key, secDuration);\n    }\n\n    if (this.runActionAnyway) {\n      this.limiter.block(key, secDuration).catch(() => {});\n    }\n\n    return res;\n  }\n\n  penalty(key, points) {\n    let res;\n\n    if (this.isWhiteListedSomewhere(key)) {\n      res = this.resolveWhite();\n    } else if (this.isBlackListedSomewhere(key)) {\n      res = this.resolveBlack();\n    }\n\n    if (typeof res === 'undefined') {\n      return this.limiter.penalty(key, points);\n    }\n\n    if (this.runActionAnyway) {\n      this.limiter.penalty(key, points).catch(() => {});\n    }\n\n    return res;\n  }\n\n  reward(key, points) {\n    let res;\n\n    if (this.isWhiteListedSomewhere(key)) {\n      res = this.resolveWhite();\n    } else if (this.isBlackListedSomewhere(key)) {\n      res = this.resolveBlack();\n    }\n\n    if (typeof res === 'undefined') {\n      return this.limiter.reward(key, points);\n    }\n\n    if (this.runActionAnyway) {\n      this.limiter.reward(key, points).catch(() => {});\n    }\n\n    return res;\n  }\n\n  get(key) {\n    let res;\n\n    if (this.isWhiteListedSomewhere(key)) {\n      res = this.resolveWhite();\n    } else if (this.isBlackListedSomewhere(key)) {\n      res = this.resolveBlack();\n    }\n\n    if (typeof res === 'undefined' || this.runActionAnyway) {\n      return this.limiter.get(key);\n    }\n\n    return res;\n  }\n\n  delete(key) {\n    return this.limiter.delete(key);\n  }\n\n};","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/node_modules/rate-limiter-flexible/lib/RLWrapperBlackAndWhite.js"],"names":["RateLimiterRes","require","module","exports","RLWrapperBlackAndWhite","constructor","opts","limiter","blackList","whiteList","isBlackListed","isWhiteListed","runActionAnyway","_limiter","value","Error","_runActionAnyway","_blackList","Array","isArray","_isBlackListed","func","_whiteList","_isWhiteListed","isBlackListedSomewhere","key","indexOf","isWhiteListedSomewhere","getBlackRes","Number","MAX_SAFE_INTEGER","getWhiteRes","rejectBlack","Promise","reject","resolveBlack","resolve","resolveWhite","consume","pointsToConsume","res","catch","block","secDuration","penalty","points","reward","get","delete"],"mappings":"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","sourcesContent":["const RateLimiterRes = require('./RateLimiterRes');\n\nmodule.exports = class RLWrapperBlackAndWhite {\n  constructor(opts = {}) {\n    this.limiter = opts.limiter;\n    this.blackList = opts.blackList;\n    this.whiteList = opts.whiteList;\n    this.isBlackListed = opts.isBlackListed;\n    this.isWhiteListed = opts.isWhiteListed;\n    this.runActionAnyway = opts.runActionAnyway;\n  }\n\n  get limiter() {\n    return this._limiter;\n  }\n\n  set limiter(value) {\n    if (typeof value === 'undefined') {\n      throw new Error('limiter is not set');\n    }\n\n    this._limiter = value;\n  }\n\n  get runActionAnyway() {\n    return this._runActionAnyway;\n  }\n\n  set runActionAnyway(value) {\n    this._runActionAnyway = typeof value === 'undefined' ? false : value;\n  }\n\n  get blackList() {\n    return this._blackList;\n  }\n\n  set blackList(value) {\n    this._blackList = Array.isArray(value) ? value : [];\n  }\n\n  get isBlackListed() {\n    return this._isBlackListed;\n  }\n\n  set isBlackListed(func) {\n    if (typeof func === 'undefined') {\n      func = () => false;\n    }\n    if (typeof func !== 'function') {\n      throw new Error('isBlackListed must be function');\n    }\n    this._isBlackListed = func;\n  }\n\n  get whiteList() {\n    return this._whiteList;\n  }\n\n  set whiteList(value) {\n    this._whiteList = Array.isArray(value) ? value : [];\n  }\n\n  get isWhiteListed() {\n    return this._isWhiteListed;\n  }\n\n  set isWhiteListed(func) {\n    if (typeof func === 'undefined') {\n      func = () => false;\n    }\n    if (typeof func !== 'function') {\n      throw new Error('isWhiteListed must be function');\n    }\n    this._isWhiteListed = func;\n  }\n\n  isBlackListedSomewhere(key) {\n    return this.blackList.indexOf(key) >= 0 || this.isBlackListed(key);\n  }\n\n  isWhiteListedSomewhere(key) {\n    return this.whiteList.indexOf(key) >= 0 || this.isWhiteListed(key);\n  }\n\n  getBlackRes() {\n    return new RateLimiterRes(0, Number.MAX_SAFE_INTEGER, 0, false);\n  }\n\n  getWhiteRes() {\n    return new RateLimiterRes(Number.MAX_SAFE_INTEGER, 0, 0, false);\n  }\n\n  rejectBlack() {\n    return Promise.reject(this.getBlackRes());\n  }\n\n  resolveBlack() {\n    return Promise.resolve(this.getBlackRes());\n  }\n\n  resolveWhite() {\n    return Promise.resolve(this.getWhiteRes());\n  }\n\n  consume(key, pointsToConsume = 1) {\n    let res;\n    if (this.isWhiteListedSomewhere(key)) {\n      res = this.resolveWhite();\n    } else if (this.isBlackListedSomewhere(key)) {\n      res = this.rejectBlack();\n    }\n\n    if (typeof res === 'undefined') {\n      return this.limiter.consume(key, pointsToConsume);\n    }\n\n    if (this.runActionAnyway) {\n      this.limiter.consume(key, pointsToConsume).catch(() => {});\n    }\n    return res;\n  }\n\n  block(key, secDuration) {\n    let res;\n    if (this.isWhiteListedSomewhere(key)) {\n      res = this.resolveWhite();\n    } else if (this.isBlackListedSomewhere(key)) {\n      res = this.resolveBlack();\n    }\n\n    if (typeof res === 'undefined') {\n      return this.limiter.block(key, secDuration);\n    }\n\n    if (this.runActionAnyway) {\n      this.limiter.block(key, secDuration).catch(() => {});\n    }\n    return res;\n  }\n\n  penalty(key, points) {\n    let res;\n    if (this.isWhiteListedSomewhere(key)) {\n      res = this.resolveWhite();\n    } else if (this.isBlackListedSomewhere(key)) {\n      res = this.resolveBlack();\n    }\n\n    if (typeof res === 'undefined') {\n      return this.limiter.penalty(key, points);\n    }\n\n    if (this.runActionAnyway) {\n      this.limiter.penalty(key, points).catch(() => {});\n    }\n    return res;\n  }\n\n  reward(key, points) {\n    let res;\n    if (this.isWhiteListedSomewhere(key)) {\n      res = this.resolveWhite();\n    } else if (this.isBlackListedSomewhere(key)) {\n      res = this.resolveBlack();\n    }\n\n    if (typeof res === 'undefined') {\n      return this.limiter.reward(key, points);\n    }\n\n    if (this.runActionAnyway) {\n      this.limiter.reward(key, points).catch(() => {});\n    }\n    return res;\n  }\n\n  get(key) {\n    let res;\n    if (this.isWhiteListedSomewhere(key)) {\n      res = this.resolveWhite();\n    } else if (this.isBlackListedSomewhere(key)) {\n      res = this.resolveBlack();\n    }\n\n    if (typeof res === 'undefined' || this.runActionAnyway) {\n      return this.limiter.get(key);\n    }\n\n    return res;\n  }\n\n  delete(key) {\n    return this.limiter.delete(key);\n  }\n};\n"]},"metadata":{},"sourceType":"script"}