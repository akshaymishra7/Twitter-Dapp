{"ast":null,"code":"export function registerMetrics(metrics) {\n  return {\n    xxHandshakeSuccesses: metrics.registerCounter('libp2p_noise_xxhandshake_successes_total', {\n      help: 'Total count of noise xxHandshakes successes_'\n    }),\n    xxHandshakeErrors: metrics.registerCounter('libp2p_noise_xxhandshake_error_total', {\n      help: 'Total count of noise xxHandshakes errors'\n    }),\n    encryptedPackets: metrics.registerCounter('libp2p_noise_encrypted_packets_total', {\n      help: 'Total count of noise encrypted packets successfully'\n    }),\n    decryptedPackets: metrics.registerCounter('libp2p_noise_decrypted_packets_total', {\n      help: 'Total count of noise decrypted packets'\n    }),\n    decryptErrors: metrics.registerCounter('libp2p_noise_decrypt_errors_total', {\n      help: 'Total count of noise decrypt errors'\n    })\n  };\n}","map":{"version":3,"mappings":"AAIA,OAAM,SAAUA,eAAV,CAA2BC,OAA3B,EAA2C;AAC/C,SAAO;AACLC,wBAAoB,EAAED,OAAO,CAACE,eAAR,CACpB,0CADoB,EACwB;AAC1CC,UAAI,EAAE;AADoC,KADxB,CADjB;AAMLC,qBAAiB,EAAEJ,OAAO,CAACE,eAAR,CACjB,sCADiB,EACuB;AACtCC,UAAI,EAAE;AADgC,KADvB,CANd;AAWLE,oBAAgB,EAAEL,OAAO,CAACE,eAAR,CAChB,sCADgB,EACwB;AACtCC,UAAI,EAAE;AADgC,KADxB,CAXb;AAgBLG,oBAAgB,EAAEN,OAAO,CAACE,eAAR,CAChB,sCADgB,EACwB;AACtCC,UAAI,EAAE;AADgC,KADxB,CAhBb;AAqBLI,iBAAa,EAAEP,OAAO,CAACE,eAAR,CACb,mCADa,EACwB;AACnCC,UAAI,EAAE;AAD6B,KADxB;AArBV,GAAP;AA0BD","names":["registerMetrics","metrics","xxHandshakeSuccesses","registerCounter","help","xxHandshakeErrors","encryptedPackets","decryptedPackets","decryptErrors"],"sources":["C:\\Users\\Akshay Mishra\\OneDrive\\Desktop\\twitter-clone-dapp\\node_modules\\@chainsafe\\libp2p-noise\\src\\metrics.ts"],"sourcesContent":["import type { Counter, Metrics } from '@libp2p/interface-metrics'\n\nexport type MetricsRegistry = Record<string, Counter>\n\nexport function registerMetrics (metrics: Metrics): MetricsRegistry {\n  return {\n    xxHandshakeSuccesses: metrics.registerCounter(\n      'libp2p_noise_xxhandshake_successes_total', {\n        help: 'Total count of noise xxHandshakes successes_'\n      }),\n\n    xxHandshakeErrors: metrics.registerCounter(\n      'libp2p_noise_xxhandshake_error_total', {\n        help: 'Total count of noise xxHandshakes errors'\n      }),\n\n    encryptedPackets: metrics.registerCounter(\n      'libp2p_noise_encrypted_packets_total', {\n        help: 'Total count of noise encrypted packets successfully'\n      }),\n\n    decryptedPackets: metrics.registerCounter(\n      'libp2p_noise_decrypted_packets_total', {\n        help: 'Total count of noise decrypted packets'\n      }),\n\n    decryptErrors: metrics.registerCounter(\n      'libp2p_noise_decrypt_errors_total', {\n        help: 'Total count of noise decrypt errors'\n      })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}