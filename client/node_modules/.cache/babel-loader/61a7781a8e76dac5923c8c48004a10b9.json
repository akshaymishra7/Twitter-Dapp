{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akshay Mishra\\\\OneDrive\\\\Desktop\\\\twitter-clone-dapp\\\\client\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Sidebar from \"./Sidebar\";\nimport Feed from \"./Feed\";\nimport Widgets from \"./Widgets\";\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentAccount, setCurrentAccount] = useState('');\n  const [correctNetwork, setCorrectNetwork] = useState(false); // Calls Metamask to connect wallet on clicking Connect Wallet button\n\n  const connectWallet = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (!ethereum) {\n        console.log('Metamask not detected');\n        return;\n      }\n\n      let chainId = await ethereum.request({\n        method: 'eth_chainId'\n      });\n      console.log('Connected to chain:' + chainId);\n      const ChainId = '0x5';\n\n      if (chainId !== ChainId) {\n        alert('You are not connected to the Goerli Testnet!');\n        return;\n      }\n\n      const accounts = await ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      console.log('Found account', accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (error) {\n      console.log('Error connecting to metamask', error);\n    }\n  }; // Checks if wallet is connected to the correct network\n\n\n  const checkCorrectNetwork = async () => {\n    const {\n      ethereum\n    } = window;\n    let chainId = await ethereum.request({\n      method: 'eth_chainId'\n    });\n    console.log('Connected to chain:' + chainId);\n    const ChainId = '0x5';\n\n    if (chainId !== ChainId) {\n      setCorrectNetwork(false);\n    } else {\n      setCorrectNetwork(true);\n    }\n  }; // Similar to componentDidMount and componentDidUpdate:\n\n\n  useEffect(() => {\n    connectWallet();\n    checkCorrectNetwork();\n  });\n  return (\n    /*#__PURE__*/\n    // BEM\n    _jsxDEV(\"div\", {\n      children: currentAccount === '' ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"text-2xl font-bold py-3 px-12 bg-[#f1c232] rounded-lg mb-10 hover:scale-105 transition duration-500 ease-in-out\",\n        onClick: connectWallet,\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this) : correctNetwork ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Feed, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Widgets, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col justify-center items-center mb-20 font-bold text-2xl gap-y-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"----------------------------------------\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Please connect to the Goerli Testnet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"and reload the page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"----------------------------------------\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(App, \"oF3DoRW3QI+FZ5r18c6r7Z+SBRA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/client/src/App.jsx"],"names":["React","Sidebar","Feed","Widgets","useState","useEffect","App","currentAccount","setCurrentAccount","correctNetwork","setCorrectNetwork","connectWallet","ethereum","window","console","log","chainId","request","method","ChainId","alert","accounts","error","checkCorrectNetwork"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Feed from \"./Feed\";\r\nimport Widgets from \"./Widgets\";\r\nimport \"./App.css\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nfunction App() {\r\n\r\n  const [currentAccount, setCurrentAccount] = useState('');\r\n  const [correctNetwork, setCorrectNetwork] = useState(false);\r\n\r\n  // Calls Metamask to connect wallet on clicking Connect Wallet button\r\n  const connectWallet = async () => {\r\n    try {\r\n      const { ethereum } = window\r\n\r\n      if (!ethereum) {\r\n        console.log('Metamask not detected')\r\n        return\r\n      }\r\n      let chainId = await ethereum.request({ method: 'eth_chainId'})\r\n      console.log('Connected to chain:' + chainId)\r\n\r\n      const ChainId = '0x5'\r\n\r\n      if (chainId !== ChainId) {\r\n        alert('You are not connected to the Goerli Testnet!')\r\n        return\r\n      }\r\n\r\n      const accounts = await ethereum.request({ method: 'eth_requestAccounts' })\r\n\r\n      console.log('Found account', accounts[0])\r\n      setCurrentAccount(accounts[0])\r\n    } catch (error) {\r\n      console.log('Error connecting to metamask', error)\r\n    }\r\n  }\r\n\r\n  // Checks if wallet is connected to the correct network\r\n  const checkCorrectNetwork = async () => {\r\n    const { ethereum } = window\r\n    let chainId = await ethereum.request({ method: 'eth_chainId' })\r\n    console.log('Connected to chain:' + chainId)\r\n\r\n    const ChainId = '0x5'\r\n\r\n    if (chainId !== ChainId) {\r\n      setCorrectNetwork(false)\r\n    } else {\r\n      setCorrectNetwork(true)\r\n    }\r\n  }\r\n\r\n  // Similar to componentDidMount and componentDidUpdate:\r\n  useEffect(() => {\r\n    connectWallet();\r\n    checkCorrectNetwork();\r\n  });\r\n\r\n  return (\r\n    // BEM\r\n    <div>\r\n    {currentAccount === '' ? (\r\n      <button\r\n      className='text-2xl font-bold py-3 px-12 bg-[#f1c232] rounded-lg mb-10 hover:scale-105 transition duration-500 ease-in-out'\r\n      onClick={connectWallet}\r\n      >\r\n      Connect Wallet\r\n      </button>\r\n      ) : correctNetwork ? (\r\n        <div className=\"app\">\r\n          <Sidebar />\r\n          <Feed />\r\n          <Widgets />\r\n        </div>\r\n      ) : (\r\n      <div className='flex flex-col justify-center items-center mb-20 font-bold text-2xl gap-y-3'>\r\n      <div>----------------------------------------</div>\r\n      <div>Please connect to the Goerli Testnet</div>\r\n      <div>and reload the page</div>\r\n      <div>----------------------------------------</div>\r\n      </div>\r\n    )}\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}