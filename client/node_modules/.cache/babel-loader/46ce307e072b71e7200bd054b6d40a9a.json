{"ast":null,"code":"import { createGet } from './get.js';\nimport { createPut } from './put.js';\nimport { createRm } from './rm.js';\nimport { createStat } from './stat.js';\n/**\n * @typedef {import('../../types').Preload} Preload\n */\n\nexport class BlockAPI {\n  /**\n   * @param {object} config\n   * @param {import('ipfs-core-utils/src/multihashes').Multihashes} config.hashers\n   * @param {import('ipfs-core-utils/src/multicodecs').Multicodecs} config.codecs\n   * @param {Preload} config.preload\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   */\n  constructor(_ref) {\n    let {\n      codecs,\n      hashers,\n      preload,\n      repo\n    } = _ref;\n    this.get = createGet({\n      preload,\n      repo\n    });\n    this.put = createPut({\n      codecs,\n      hashers,\n      preload,\n      repo\n    });\n    this.rm = createRm({\n      repo\n    });\n    this.stat = createStat({\n      preload,\n      repo\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/node_modules/ipfs-core/src/components/block/index.js"],"names":["createGet","createPut","createRm","createStat","BlockAPI","constructor","codecs","hashers","preload","repo","get","put","rm","stat"],"mappings":"AAAA,SAASA,SAAT,QAA0B,UAA1B;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SAASC,UAAT,QAA2B,WAA3B;AAEA;AACA;AACA;;AAEA,OAAO,MAAMC,QAAN,CAAe;AACpB;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,WAAW,OAAsC;AAAA,QAApC;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,OAAV;AAAmBC,MAAAA,OAAnB;AAA4BC,MAAAA;AAA5B,KAAoC;AAC/C,SAAKC,GAAL,GAAWV,SAAS,CAAC;AAAEQ,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAD,CAApB;AACA,SAAKE,GAAL,GAAWV,SAAS,CAAC;AAAEK,MAAAA,MAAF;AAAUC,MAAAA,OAAV;AAAmBC,MAAAA,OAAnB;AAA4BC,MAAAA;AAA5B,KAAD,CAApB;AACA,SAAKG,EAAL,GAAUV,QAAQ,CAAC;AAAEO,MAAAA;AAAF,KAAD,CAAlB;AACA,SAAKI,IAAL,GAAYV,UAAU,CAAC;AAAEK,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAD,CAAtB;AACD;;AAbmB","sourcesContent":["import { createGet } from './get.js'\nimport { createPut } from './put.js'\nimport { createRm } from './rm.js'\nimport { createStat } from './stat.js'\n\n/**\n * @typedef {import('../../types').Preload} Preload\n */\n\nexport class BlockAPI {\n  /**\n   * @param {object} config\n   * @param {import('ipfs-core-utils/src/multihashes').Multihashes} config.hashers\n   * @param {import('ipfs-core-utils/src/multicodecs').Multicodecs} config.codecs\n   * @param {Preload} config.preload\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   */\n  constructor ({ codecs, hashers, preload, repo }) {\n    this.get = createGet({ preload, repo })\n    this.put = createPut({ codecs, hashers, preload, repo })\n    this.rm = createRm({ repo })\n    this.stat = createStat({ preload, repo })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}