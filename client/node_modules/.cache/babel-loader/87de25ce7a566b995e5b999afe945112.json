{"ast":null,"code":"import { WebRTCStar } from './transport.js';\nexport function webRTCStar() {\n  let init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const transport = new WebRTCStar(init);\n  return {\n    transport: components => {\n      transport.peerId = components.peerId;\n      return transport;\n    },\n    discovery: transport.discovery\n  };\n}","map":{"version":3,"mappings":"AAEA,SAASA,UAAT,QAAiE,gBAAjE;AAOA,OAAM,SAAUC,UAAV,GAA+C;AAAA,MAAzBC,IAAyB,uEAAF,EAAE;AACnD,QAAMC,SAAS,GAAG,IAAIH,UAAJ,CAAeE,IAAf,CAAlB;AAEA,SAAO;AACLC,aAAS,EAAGC,UAAD,IAAqC;AAC9CD,eAAS,CAACE,MAAV,GAAmBD,UAAU,CAACC,MAA9B;AACA,aAAOF,SAAP;AACD,KAJI;AAKLG,aAAS,EAAEH,SAAS,CAACG;AALhB,GAAP;AAOD","names":["WebRTCStar","webRTCStar","init","transport","components","peerId","discovery"],"sources":["C:\\Users\\Akshay Mishra\\OneDrive\\Desktop\\twitter-clone-dapp\\node_modules\\@libp2p\\webrtc-star\\src\\index.ts"],"sourcesContent":["import type { PeerDiscovery } from '@libp2p/interface-peer-discovery'\nimport type { Transport } from '@libp2p/interface-transport'\nimport { WebRTCStar, WebRTCStarComponents, WebRTCStarInit } from './transport.js'\n\nexport interface WebRTCStarTuple {\n  transport: (components: WebRTCStarComponents) => Transport\n  discovery: (components?: WebRTCStarComponents) => PeerDiscovery\n}\n\nexport function webRTCStar (init: WebRTCStarInit = {}): WebRTCStarTuple {\n  const transport = new WebRTCStar(init)\n\n  return {\n    transport: (components: WebRTCStarComponents) => {\n      transport.peerId = components.peerId\n      return transport\n    },\n    discovery: transport.discovery\n  }\n}\n"]},"metadata":{},"sourceType":"module"}