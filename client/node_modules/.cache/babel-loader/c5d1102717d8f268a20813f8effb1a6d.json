{"ast":null,"code":"import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\n\nexport function createUnwant(_ref) {\n  let {\n    network\n  } = _ref;\n\n  /**\n   * @type {import('ipfs-core-types/src/bitswap').API<{}>[\"unwant\"]}\n   */\n  async function unwant(cids) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const {\n      bitswap\n    } = await network.use(options);\n\n    if (!Array.isArray(cids)) {\n      cids = [cids];\n    }\n\n    return bitswap.unwant(cids);\n  }\n\n  return withTimeoutOption(unwant);\n}","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/node_modules/ipfs-core/src/components/bitswap/unwant.js"],"names":["withTimeoutOption","createUnwant","network","unwant","cids","options","bitswap","use","Array","isArray"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,qCAAlC;AAEA;AACA;AACA;AACA;;AACA,OAAO,SAASC,YAAT,OAAoC;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;;AACzC;AACF;AACA;AACE,iBAAeC,MAAf,CAAuBC,IAAvB,EAA2C;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AACzC,UAAM;AAAEC,MAAAA;AAAF,QAAc,MAAMJ,OAAO,CAACK,GAAR,CAAYF,OAAZ,CAA1B;;AAEA,QAAI,CAACG,KAAK,CAACC,OAAN,CAAcL,IAAd,CAAL,EAA0B;AACxBA,MAAAA,IAAI,GAAG,CAACA,IAAD,CAAP;AACD;;AAED,WAAOE,OAAO,CAACH,MAAR,CAAeC,IAAf,CAAP;AACD;;AAED,SAAOJ,iBAAiB,CAACG,MAAD,CAAxB;AACD","sourcesContent":["import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createUnwant ({ network }) {\n  /**\n   * @type {import('ipfs-core-types/src/bitswap').API<{}>[\"unwant\"]}\n   */\n  async function unwant (cids, options = {}) {\n    const { bitswap } = await network.use(options)\n\n    if (!Array.isArray(cids)) {\n      cids = [cids]\n    }\n\n    return bitswap.unwant(cids)\n  }\n\n  return withTimeoutOption(unwant)\n}\n"]},"metadata":{},"sourceType":"module"}