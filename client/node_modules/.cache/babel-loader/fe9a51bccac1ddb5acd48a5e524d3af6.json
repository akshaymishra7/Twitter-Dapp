{"ast":null,"code":"import { MESSAGE_TYPE_LOOKUP } from '../message/index.js';\nexport function sendingQueryEvent(fields) {\n  return { ...fields,\n    name: 'SENDING_QUERY',\n    type: 0,\n    messageName: fields.type,\n    messageType: MESSAGE_TYPE_LOOKUP.indexOf(fields.type.toString())\n  };\n}\nexport function peerResponseEvent(fields) {\n  return { ...fields,\n    name: 'PEER_RESPONSE',\n    type: 1,\n    messageName: fields.messageType,\n    closer: fields.closer != null ? fields.closer : [],\n    providers: fields.providers != null ? fields.providers : []\n  };\n}\nexport function finalPeerEvent(fields) {\n  return { ...fields,\n    name: 'FINAL_PEER',\n    type: 2\n  };\n}\nexport function queryErrorEvent(fields) {\n  return { ...fields,\n    name: 'QUERY_ERROR',\n    type: 3\n  };\n}\nexport function providerEvent(fields) {\n  return { ...fields,\n    name: 'PROVIDER',\n    type: 4\n  };\n}\nexport function valueEvent(fields) {\n  return { ...fields,\n    name: 'VALUE',\n    type: 5\n  };\n}\nexport function addingPeerEvent(fields) {\n  return { ...fields,\n    name: 'ADDING_PEER',\n    type: 6\n  };\n}\nexport function dialingPeerEvent(fields) {\n  return { ...fields,\n    name: 'DIALING_PEER',\n    type: 7\n  };\n}","map":{"version":3,"mappings":"AAAA,SAASA,mBAAT,QAAoC,qBAApC;AAYA,OAAM,SAAUC,iBAAV,CAA6BC,MAA7B,EAAqD;AACzD,SAAO,EACL,GAAGA,MADE;AAELC,QAAI,EAAE,eAFD;AAGLC,QAAI,EAAE,CAHD;AAILC,eAAW,EAAEH,MAAM,CAACE,IAJf;AAKLE,eAAW,EAAEN,mBAAmB,CAACO,OAApB,CAA4BL,MAAM,CAACE,IAAP,CAAYI,QAAZ,EAA5B;AALR,GAAP;AAOD;AAUD,OAAM,SAAUC,iBAAV,CAA6BP,MAA7B,EAA2D;AAC/D,SAAO,EACL,GAAGA,MADE;AAELC,QAAI,EAAE,eAFD;AAGLC,QAAI,EAAE,CAHD;AAILC,eAAW,EAAEH,MAAM,CAACI,WAJf;AAKLI,UAAM,EAAGR,MAAM,CAACQ,MAAP,IAAiB,IAAlB,GAA0BR,MAAM,CAACQ,MAAjC,GAA0C,EAL7C;AAMLC,aAAS,EAAGT,MAAM,CAACS,SAAP,IAAoB,IAArB,GAA6BT,MAAM,CAACS,SAApC,GAAgD;AANtD,GAAP;AAQD;AAOD,OAAM,SAAUC,cAAV,CAA0BV,MAA1B,EAAsD;AAC1D,SAAO,EACL,GAAGA,MADE;AAELC,QAAI,EAAE,YAFD;AAGLC,QAAI,EAAE;AAHD,GAAP;AAKD;AAOD,OAAM,SAAUS,eAAV,CAA2BX,MAA3B,EAAmD;AACvD,SAAO,EACL,GAAGA,MADE;AAELC,QAAI,EAAE,aAFD;AAGLC,QAAI,EAAE;AAHD,GAAP;AAKD;AAOD,OAAM,SAAUU,aAAV,CAAyBZ,MAAzB,EAAoD;AACxD,SAAO,EACL,GAAGA,MADE;AAELC,QAAI,EAAE,UAFD;AAGLC,QAAI,EAAE;AAHD,GAAP;AAKD;AAOD,OAAM,SAAUW,UAAV,CAAsBb,MAAtB,EAA8C;AAClD,SAAO,EACL,GAAGA,MADE;AAELC,QAAI,EAAE,OAFD;AAGLC,QAAI,EAAE;AAHD,GAAP;AAKD;AAMD,OAAM,SAAUY,eAAV,CAA2Bd,MAA3B,EAAkD;AACtD,SAAO,EACL,GAAGA,MADE;AAELC,QAAI,EAAE,aAFD;AAGLC,QAAI,EAAE;AAHD,GAAP;AAKD;AAMD,OAAM,SAAUa,gBAAV,CAA4Bf,MAA5B,EAA0D;AAC9D,SAAO,EACL,GAAGA,MADE;AAELC,QAAI,EAAE,cAFD;AAGLC,QAAI,EAAE;AAHD,GAAP;AAKD","names":["MESSAGE_TYPE_LOOKUP","sendingQueryEvent","fields","name","type","messageName","messageType","indexOf","toString","peerResponseEvent","closer","providers","finalPeerEvent","queryErrorEvent","providerEvent","valueEvent","addingPeerEvent","dialingPeerEvent"],"sources":["C:\\Users\\Akshay Mishra\\OneDrive\\Desktop\\twitter-clone-dapp\\node_modules\\@libp2p\\kad-dht\\src\\query\\events.ts"],"sourcesContent":["import { MESSAGE_TYPE_LOOKUP } from '../message/index.js'\nimport type { Message } from '../message/dht.js'\nimport type { SendingQueryEvent, PeerResponseEvent, DialingPeerEvent, AddingPeerEvent, ValueEvent, ProviderEvent, QueryErrorEvent, FinalPeerEvent } from '@libp2p/interface-dht'\nimport type { PeerInfo } from '@libp2p/interface-peer-info'\nimport type { PeerId } from '@libp2p/interface-peer-id'\nimport type { Libp2pRecord } from '@libp2p/record'\n\nexport interface QueryEventFields {\n  to: PeerId\n  type: Message.MessageType\n}\n\nexport function sendingQueryEvent (fields: QueryEventFields): SendingQueryEvent {\n  return {\n    ...fields,\n    name: 'SENDING_QUERY',\n    type: 0,\n    messageName: fields.type,\n    messageType: MESSAGE_TYPE_LOOKUP.indexOf(fields.type.toString())\n  }\n}\n\nexport interface PeerResponseEventField {\n  from: PeerId\n  messageType: Message.MessageType\n  closer?: PeerInfo[]\n  providers?: PeerInfo[]\n  record?: Libp2pRecord\n}\n\nexport function peerResponseEvent (fields: PeerResponseEventField): PeerResponseEvent {\n  return {\n    ...fields,\n    name: 'PEER_RESPONSE',\n    type: 1,\n    messageName: fields.messageType,\n    closer: (fields.closer != null) ? fields.closer : [],\n    providers: (fields.providers != null) ? fields.providers : []\n  }\n}\n\nexport interface FinalPeerEventFields {\n  from: PeerId\n  peer: PeerInfo\n}\n\nexport function finalPeerEvent (fields: FinalPeerEventFields): FinalPeerEvent {\n  return {\n    ...fields,\n    name: 'FINAL_PEER',\n    type: 2\n  }\n}\n\nexport interface ErrorEventFields {\n  from: PeerId\n  error: Error\n}\n\nexport function queryErrorEvent (fields: ErrorEventFields): QueryErrorEvent {\n  return {\n    ...fields,\n    name: 'QUERY_ERROR',\n    type: 3\n  }\n}\n\nexport interface ProviderEventFields {\n  from: PeerId\n  providers: PeerInfo[]\n}\n\nexport function providerEvent (fields: ProviderEventFields): ProviderEvent {\n  return {\n    ...fields,\n    name: 'PROVIDER',\n    type: 4\n  }\n}\n\nexport interface ValueEventFields {\n  from: PeerId\n  value: Uint8Array\n}\n\nexport function valueEvent (fields: ValueEventFields): ValueEvent {\n  return {\n    ...fields,\n    name: 'VALUE',\n    type: 5\n  }\n}\n\nexport interface PeerEventFields {\n  peer: PeerId\n}\n\nexport function addingPeerEvent (fields: PeerEventFields): AddingPeerEvent {\n  return {\n    ...fields,\n    name: 'ADDING_PEER',\n    type: 6\n  }\n}\n\nexport interface DialingPeerEventFields {\n  peer: PeerId\n}\n\nexport function dialingPeerEvent (fields: DialingPeerEventFields): DialingPeerEvent {\n  return {\n    ...fields,\n    name: 'DIALING_PEER',\n    type: 7\n  }\n}\n"]},"metadata":{},"sourceType":"module"}