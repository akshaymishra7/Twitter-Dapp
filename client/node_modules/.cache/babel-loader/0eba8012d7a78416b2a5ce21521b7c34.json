{"ast":null,"code":"import last from 'it-last';\n/**\n * @param {object} config\n * @param {import('ipfs-core-types/src/pin').API<{}>[\"rmAll\"]} config.rmAll\n */\n\nexport function createRm(_ref) {\n  let {\n    rmAll\n  } = _ref;\n\n  /**\n   * @type {import('ipfs-core-types/src/pin').API<{}>[\"rm\"]}\n   */\n  async function rm(path) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    // @ts-expect-error return value of last can be undefined\n    const cid = await last(rmAll([{\n      path,\n      ...options\n    }], options));\n\n    if (!cid) {\n      throw new Error('CID expected');\n    }\n\n    return cid;\n  }\n\n  return rm;\n}","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/node_modules/ipfs-core/src/components/pin/rm.js"],"names":["last","createRm","rmAll","rm","path","options","cid","Error"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AAEA;AACA;AACA;AACA;;AACA,OAAO,SAASC,QAAT,OAA8B;AAAA,MAAX;AAAEC,IAAAA;AAAF,GAAW;;AACnC;AACF;AACA;AACE,iBAAeC,EAAf,CAAmBC,IAAnB,EAAuC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AACrC;AACA,UAAMC,GAAG,GAAG,MAAMN,IAAI,CAACE,KAAK,CAAC,CAAC;AAAEE,MAAAA,IAAF;AAAQ,SAAGC;AAAX,KAAD,CAAD,EAAyBA,OAAzB,CAAN,CAAtB;;AAEA,QAAI,CAACC,GAAL,EAAU;AACR,YAAM,IAAIC,KAAJ,CAAU,cAAV,CAAN;AACD;;AAED,WAAOD,GAAP;AACD;;AAED,SAAOH,EAAP;AACD","sourcesContent":["import last from 'it-last'\n\n/**\n * @param {object} config\n * @param {import('ipfs-core-types/src/pin').API<{}>[\"rmAll\"]} config.rmAll\n */\nexport function createRm ({ rmAll }) {\n  /**\n   * @type {import('ipfs-core-types/src/pin').API<{}>[\"rm\"]}\n   */\n  async function rm (path, options = {}) {\n    // @ts-expect-error return value of last can be undefined\n    const cid = await last(rmAll([{ path, ...options }], options))\n\n    if (!cid) {\n      throw new Error('CID expected')\n    }\n\n    return cid\n  }\n\n  return rm\n}\n"]},"metadata":{},"sourceType":"module"}