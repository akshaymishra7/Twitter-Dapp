{"ast":null,"code":"\"use strict\"; // Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Package poly1305 implements Poly1305 one-time message authentication algorithm.\n */\n\nvar constant_time_1 = require(\"@stablelib/constant-time\");\n\nvar wipe_1 = require(\"@stablelib/wipe\");\n\nexports.DIGEST_LENGTH = 16; // Port of Andrew Moon's Poly1305-donna-16. Public domain.\n// https://github.com/floodyberry/poly1305-donna\n\n/**\n * Poly1305 computes 16-byte authenticator of message using\n * a one-time 32-byte key.\n *\n * Important: key should be used for only one message,\n * it should never repeat.\n */\n\nvar Poly1305 =\n/** @class */\nfunction () {\n  function Poly1305(key) {\n    this.digestLength = exports.DIGEST_LENGTH;\n    this._buffer = new Uint8Array(16);\n    this._r = new Uint16Array(10);\n    this._h = new Uint16Array(10);\n    this._pad = new Uint16Array(8);\n    this._leftover = 0;\n    this._fin = 0;\n    this._finished = false;\n    var t0 = key[0] | key[1] << 8;\n    this._r[0] = t0 & 0x1fff;\n    var t1 = key[2] | key[3] << 8;\n    this._r[1] = (t0 >>> 13 | t1 << 3) & 0x1fff;\n    var t2 = key[4] | key[5] << 8;\n    this._r[2] = (t1 >>> 10 | t2 << 6) & 0x1f03;\n    var t3 = key[6] | key[7] << 8;\n    this._r[3] = (t2 >>> 7 | t3 << 9) & 0x1fff;\n    var t4 = key[8] | key[9] << 8;\n    this._r[4] = (t3 >>> 4 | t4 << 12) & 0x00ff;\n    this._r[5] = t4 >>> 1 & 0x1ffe;\n    var t5 = key[10] | key[11] << 8;\n    this._r[6] = (t4 >>> 14 | t5 << 2) & 0x1fff;\n    var t6 = key[12] | key[13] << 8;\n    this._r[7] = (t5 >>> 11 | t6 << 5) & 0x1f81;\n    var t7 = key[14] | key[15] << 8;\n    this._r[8] = (t6 >>> 8 | t7 << 8) & 0x1fff;\n    this._r[9] = t7 >>> 5 & 0x007f;\n    this._pad[0] = key[16] | key[17] << 8;\n    this._pad[1] = key[18] | key[19] << 8;\n    this._pad[2] = key[20] | key[21] << 8;\n    this._pad[3] = key[22] | key[23] << 8;\n    this._pad[4] = key[24] | key[25] << 8;\n    this._pad[5] = key[26] | key[27] << 8;\n    this._pad[6] = key[28] | key[29] << 8;\n    this._pad[7] = key[30] | key[31] << 8;\n  }\n\n  Poly1305.prototype._blocks = function (m, mpos, bytes) {\n    var hibit = this._fin ? 0 : 1 << 11;\n    var h0 = this._h[0],\n        h1 = this._h[1],\n        h2 = this._h[2],\n        h3 = this._h[3],\n        h4 = this._h[4],\n        h5 = this._h[5],\n        h6 = this._h[6],\n        h7 = this._h[7],\n        h8 = this._h[8],\n        h9 = this._h[9];\n    var r0 = this._r[0],\n        r1 = this._r[1],\n        r2 = this._r[2],\n        r3 = this._r[3],\n        r4 = this._r[4],\n        r5 = this._r[5],\n        r6 = this._r[6],\n        r7 = this._r[7],\n        r8 = this._r[8],\n        r9 = this._r[9];\n\n    while (bytes >= 16) {\n      var t0 = m[mpos + 0] | m[mpos + 1] << 8;\n      h0 += t0 & 0x1fff;\n      var t1 = m[mpos + 2] | m[mpos + 3] << 8;\n      h1 += (t0 >>> 13 | t1 << 3) & 0x1fff;\n      var t2 = m[mpos + 4] | m[mpos + 5] << 8;\n      h2 += (t1 >>> 10 | t2 << 6) & 0x1fff;\n      var t3 = m[mpos + 6] | m[mpos + 7] << 8;\n      h3 += (t2 >>> 7 | t3 << 9) & 0x1fff;\n      var t4 = m[mpos + 8] | m[mpos + 9] << 8;\n      h4 += (t3 >>> 4 | t4 << 12) & 0x1fff;\n      h5 += t4 >>> 1 & 0x1fff;\n      var t5 = m[mpos + 10] | m[mpos + 11] << 8;\n      h6 += (t4 >>> 14 | t5 << 2) & 0x1fff;\n      var t6 = m[mpos + 12] | m[mpos + 13] << 8;\n      h7 += (t5 >>> 11 | t6 << 5) & 0x1fff;\n      var t7 = m[mpos + 14] | m[mpos + 15] << 8;\n      h8 += (t6 >>> 8 | t7 << 8) & 0x1fff;\n      h9 += t7 >>> 5 | hibit;\n      var c = 0;\n      var d0 = c;\n      d0 += h0 * r0;\n      d0 += h1 * (5 * r9);\n      d0 += h2 * (5 * r8);\n      d0 += h3 * (5 * r7);\n      d0 += h4 * (5 * r6);\n      c = d0 >>> 13;\n      d0 &= 0x1fff;\n      d0 += h5 * (5 * r5);\n      d0 += h6 * (5 * r4);\n      d0 += h7 * (5 * r3);\n      d0 += h8 * (5 * r2);\n      d0 += h9 * (5 * r1);\n      c += d0 >>> 13;\n      d0 &= 0x1fff;\n      var d1 = c;\n      d1 += h0 * r1;\n      d1 += h1 * r0;\n      d1 += h2 * (5 * r9);\n      d1 += h3 * (5 * r8);\n      d1 += h4 * (5 * r7);\n      c = d1 >>> 13;\n      d1 &= 0x1fff;\n      d1 += h5 * (5 * r6);\n      d1 += h6 * (5 * r5);\n      d1 += h7 * (5 * r4);\n      d1 += h8 * (5 * r3);\n      d1 += h9 * (5 * r2);\n      c += d1 >>> 13;\n      d1 &= 0x1fff;\n      var d2 = c;\n      d2 += h0 * r2;\n      d2 += h1 * r1;\n      d2 += h2 * r0;\n      d2 += h3 * (5 * r9);\n      d2 += h4 * (5 * r8);\n      c = d2 >>> 13;\n      d2 &= 0x1fff;\n      d2 += h5 * (5 * r7);\n      d2 += h6 * (5 * r6);\n      d2 += h7 * (5 * r5);\n      d2 += h8 * (5 * r4);\n      d2 += h9 * (5 * r3);\n      c += d2 >>> 13;\n      d2 &= 0x1fff;\n      var d3 = c;\n      d3 += h0 * r3;\n      d3 += h1 * r2;\n      d3 += h2 * r1;\n      d3 += h3 * r0;\n      d3 += h4 * (5 * r9);\n      c = d3 >>> 13;\n      d3 &= 0x1fff;\n      d3 += h5 * (5 * r8);\n      d3 += h6 * (5 * r7);\n      d3 += h7 * (5 * r6);\n      d3 += h8 * (5 * r5);\n      d3 += h9 * (5 * r4);\n      c += d3 >>> 13;\n      d3 &= 0x1fff;\n      var d4 = c;\n      d4 += h0 * r4;\n      d4 += h1 * r3;\n      d4 += h2 * r2;\n      d4 += h3 * r1;\n      d4 += h4 * r0;\n      c = d4 >>> 13;\n      d4 &= 0x1fff;\n      d4 += h5 * (5 * r9);\n      d4 += h6 * (5 * r8);\n      d4 += h7 * (5 * r7);\n      d4 += h8 * (5 * r6);\n      d4 += h9 * (5 * r5);\n      c += d4 >>> 13;\n      d4 &= 0x1fff;\n      var d5 = c;\n      d5 += h0 * r5;\n      d5 += h1 * r4;\n      d5 += h2 * r3;\n      d5 += h3 * r2;\n      d5 += h4 * r1;\n      c = d5 >>> 13;\n      d5 &= 0x1fff;\n      d5 += h5 * r0;\n      d5 += h6 * (5 * r9);\n      d5 += h7 * (5 * r8);\n      d5 += h8 * (5 * r7);\n      d5 += h9 * (5 * r6);\n      c += d5 >>> 13;\n      d5 &= 0x1fff;\n      var d6 = c;\n      d6 += h0 * r6;\n      d6 += h1 * r5;\n      d6 += h2 * r4;\n      d6 += h3 * r3;\n      d6 += h4 * r2;\n      c = d6 >>> 13;\n      d6 &= 0x1fff;\n      d6 += h5 * r1;\n      d6 += h6 * r0;\n      d6 += h7 * (5 * r9);\n      d6 += h8 * (5 * r8);\n      d6 += h9 * (5 * r7);\n      c += d6 >>> 13;\n      d6 &= 0x1fff;\n      var d7 = c;\n      d7 += h0 * r7;\n      d7 += h1 * r6;\n      d7 += h2 * r5;\n      d7 += h3 * r4;\n      d7 += h4 * r3;\n      c = d7 >>> 13;\n      d7 &= 0x1fff;\n      d7 += h5 * r2;\n      d7 += h6 * r1;\n      d7 += h7 * r0;\n      d7 += h8 * (5 * r9);\n      d7 += h9 * (5 * r8);\n      c += d7 >>> 13;\n      d7 &= 0x1fff;\n      var d8 = c;\n      d8 += h0 * r8;\n      d8 += h1 * r7;\n      d8 += h2 * r6;\n      d8 += h3 * r5;\n      d8 += h4 * r4;\n      c = d8 >>> 13;\n      d8 &= 0x1fff;\n      d8 += h5 * r3;\n      d8 += h6 * r2;\n      d8 += h7 * r1;\n      d8 += h8 * r0;\n      d8 += h9 * (5 * r9);\n      c += d8 >>> 13;\n      d8 &= 0x1fff;\n      var d9 = c;\n      d9 += h0 * r9;\n      d9 += h1 * r8;\n      d9 += h2 * r7;\n      d9 += h3 * r6;\n      d9 += h4 * r5;\n      c = d9 >>> 13;\n      d9 &= 0x1fff;\n      d9 += h5 * r4;\n      d9 += h6 * r3;\n      d9 += h7 * r2;\n      d9 += h8 * r1;\n      d9 += h9 * r0;\n      c += d9 >>> 13;\n      d9 &= 0x1fff;\n      c = (c << 2) + c | 0;\n      c = c + d0 | 0;\n      d0 = c & 0x1fff;\n      c = c >>> 13;\n      d1 += c;\n      h0 = d0;\n      h1 = d1;\n      h2 = d2;\n      h3 = d3;\n      h4 = d4;\n      h5 = d5;\n      h6 = d6;\n      h7 = d7;\n      h8 = d8;\n      h9 = d9;\n      mpos += 16;\n      bytes -= 16;\n    }\n\n    this._h[0] = h0;\n    this._h[1] = h1;\n    this._h[2] = h2;\n    this._h[3] = h3;\n    this._h[4] = h4;\n    this._h[5] = h5;\n    this._h[6] = h6;\n    this._h[7] = h7;\n    this._h[8] = h8;\n    this._h[9] = h9;\n  };\n\n  Poly1305.prototype.finish = function (mac, macpos) {\n    if (macpos === void 0) {\n      macpos = 0;\n    }\n\n    var g = new Uint16Array(10);\n    var c;\n    var mask;\n    var f;\n    var i;\n\n    if (this._leftover) {\n      i = this._leftover;\n      this._buffer[i++] = 1;\n\n      for (; i < 16; i++) {\n        this._buffer[i] = 0;\n      }\n\n      this._fin = 1;\n\n      this._blocks(this._buffer, 0, 16);\n    }\n\n    c = this._h[1] >>> 13;\n    this._h[1] &= 0x1fff;\n\n    for (i = 2; i < 10; i++) {\n      this._h[i] += c;\n      c = this._h[i] >>> 13;\n      this._h[i] &= 0x1fff;\n    }\n\n    this._h[0] += c * 5;\n    c = this._h[0] >>> 13;\n    this._h[0] &= 0x1fff;\n    this._h[1] += c;\n    c = this._h[1] >>> 13;\n    this._h[1] &= 0x1fff;\n    this._h[2] += c;\n    g[0] = this._h[0] + 5;\n    c = g[0] >>> 13;\n    g[0] &= 0x1fff;\n\n    for (i = 1; i < 10; i++) {\n      g[i] = this._h[i] + c;\n      c = g[i] >>> 13;\n      g[i] &= 0x1fff;\n    }\n\n    g[9] -= 1 << 13;\n    mask = (c ^ 1) - 1;\n\n    for (i = 0; i < 10; i++) {\n      g[i] &= mask;\n    }\n\n    mask = ~mask;\n\n    for (i = 0; i < 10; i++) {\n      this._h[i] = this._h[i] & mask | g[i];\n    }\n\n    this._h[0] = (this._h[0] | this._h[1] << 13) & 0xffff;\n    this._h[1] = (this._h[1] >>> 3 | this._h[2] << 10) & 0xffff;\n    this._h[2] = (this._h[2] >>> 6 | this._h[3] << 7) & 0xffff;\n    this._h[3] = (this._h[3] >>> 9 | this._h[4] << 4) & 0xffff;\n    this._h[4] = (this._h[4] >>> 12 | this._h[5] << 1 | this._h[6] << 14) & 0xffff;\n    this._h[5] = (this._h[6] >>> 2 | this._h[7] << 11) & 0xffff;\n    this._h[6] = (this._h[7] >>> 5 | this._h[8] << 8) & 0xffff;\n    this._h[7] = (this._h[8] >>> 8 | this._h[9] << 5) & 0xffff;\n    f = this._h[0] + this._pad[0];\n    this._h[0] = f & 0xffff;\n\n    for (i = 1; i < 8; i++) {\n      f = (this._h[i] + this._pad[i] | 0) + (f >>> 16) | 0;\n      this._h[i] = f & 0xffff;\n    }\n\n    mac[macpos + 0] = this._h[0] >>> 0;\n    mac[macpos + 1] = this._h[0] >>> 8;\n    mac[macpos + 2] = this._h[1] >>> 0;\n    mac[macpos + 3] = this._h[1] >>> 8;\n    mac[macpos + 4] = this._h[2] >>> 0;\n    mac[macpos + 5] = this._h[2] >>> 8;\n    mac[macpos + 6] = this._h[3] >>> 0;\n    mac[macpos + 7] = this._h[3] >>> 8;\n    mac[macpos + 8] = this._h[4] >>> 0;\n    mac[macpos + 9] = this._h[4] >>> 8;\n    mac[macpos + 10] = this._h[5] >>> 0;\n    mac[macpos + 11] = this._h[5] >>> 8;\n    mac[macpos + 12] = this._h[6] >>> 0;\n    mac[macpos + 13] = this._h[6] >>> 8;\n    mac[macpos + 14] = this._h[7] >>> 0;\n    mac[macpos + 15] = this._h[7] >>> 8;\n    this._finished = true;\n    return this;\n  };\n\n  Poly1305.prototype.update = function (m) {\n    var mpos = 0;\n    var bytes = m.length;\n    var want;\n\n    if (this._leftover) {\n      want = 16 - this._leftover;\n\n      if (want > bytes) {\n        want = bytes;\n      }\n\n      for (var i = 0; i < want; i++) {\n        this._buffer[this._leftover + i] = m[mpos + i];\n      }\n\n      bytes -= want;\n      mpos += want;\n      this._leftover += want;\n\n      if (this._leftover < 16) {\n        return this;\n      }\n\n      this._blocks(this._buffer, 0, 16);\n\n      this._leftover = 0;\n    }\n\n    if (bytes >= 16) {\n      want = bytes - bytes % 16;\n\n      this._blocks(m, mpos, want);\n\n      mpos += want;\n      bytes -= want;\n    }\n\n    if (bytes) {\n      for (var i = 0; i < bytes; i++) {\n        this._buffer[this._leftover + i] = m[mpos + i];\n      }\n\n      this._leftover += bytes;\n    }\n\n    return this;\n  };\n\n  Poly1305.prototype.digest = function () {\n    // TODO(dchest): it behaves differently than other hashes/HMAC,\n    // because it throws when finished — others just return saved result.\n    if (this._finished) {\n      throw new Error(\"Poly1305 was finished\");\n    }\n\n    var mac = new Uint8Array(16);\n    this.finish(mac);\n    return mac;\n  };\n\n  Poly1305.prototype.clean = function () {\n    wipe_1.wipe(this._buffer);\n    wipe_1.wipe(this._r);\n    wipe_1.wipe(this._h);\n    wipe_1.wipe(this._pad);\n    this._leftover = 0;\n    this._fin = 0;\n    this._finished = true; // mark as finished even if not\n\n    return this;\n  };\n\n  return Poly1305;\n}();\n\nexports.Poly1305 = Poly1305;\n/**\n * Returns 16-byte authenticator of data using a one-time 32-byte key.\n *\n * Important: key should be used for only one message, it should never repeat.\n */\n\nfunction oneTimeAuth(key, data) {\n  var h = new Poly1305(key);\n  h.update(data);\n  var digest = h.digest();\n  h.clean();\n  return digest;\n}\n\nexports.oneTimeAuth = oneTimeAuth;\n/**\n * Returns true if two authenticators are 16-byte long and equal.\n * Uses contant-time comparison to avoid leaking timing information.\n */\n\nfunction equal(a, b) {\n  if (a.length !== exports.DIGEST_LENGTH || b.length !== exports.DIGEST_LENGTH) {\n    return false;\n  }\n\n  return constant_time_1.equal(a, b);\n}\n\nexports.equal = equal;","map":{"version":3,"mappings":"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","names":["exports","key","Uint8Array","Uint16Array","t0","_r","t1","t2","t3","t4","t5","t6","t7","_pad","Poly1305","m","mpos","bytes","hibit","_fin","h0","_h","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","c","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","mac","macpos","g","mask","f","i","_leftover","_buffer","_blocks","_finished","length","want","Error","finish","wipe_1","oneTimeAuth","data","h","update","digest","clean","equal","a","b","constant_time_1"],"sources":["C:\\Users\\Akshay Mishra\\OneDrive\\Desktop\\twitter-clone-dapp\\node_modules\\@stablelib\\poly1305\\poly1305.ts"],"sourcesContent":["// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\n\n/**\n * Package poly1305 implements Poly1305 one-time message authentication algorithm.\n */\n\nimport { equal as constantTimeEqual } from \"@stablelib/constant-time\";\nimport { wipe } from \"@stablelib/wipe\";\n\nexport const DIGEST_LENGTH = 16;\n\n// Port of Andrew Moon's Poly1305-donna-16. Public domain.\n// https://github.com/floodyberry/poly1305-donna\n\n/**\n * Poly1305 computes 16-byte authenticator of message using\n * a one-time 32-byte key.\n *\n * Important: key should be used for only one message,\n * it should never repeat.\n */\nexport class Poly1305 {\n    readonly digestLength = DIGEST_LENGTH;\n\n    private _buffer = new Uint8Array(16);\n    private _r = new Uint16Array(10);\n    private _h = new Uint16Array(10);\n    private _pad = new Uint16Array(8);\n    private _leftover = 0;\n    private _fin = 0;\n    private _finished = false;\n\n    constructor(key: Uint8Array) {\n        let t0 = key[0] | key[1] << 8; this._r[0] = (t0) & 0x1fff;\n        let t1 = key[2] | key[3] << 8; this._r[1] = ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n        let t2 = key[4] | key[5] << 8; this._r[2] = ((t1 >>> 10) | (t2 << 6)) & 0x1f03;\n        let t3 = key[6] | key[7] << 8; this._r[3] = ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n        let t4 = key[8] | key[9] << 8; this._r[4] = ((t3 >>> 4) | (t4 << 12)) & 0x00ff;\n        this._r[5] = ((t4 >>> 1)) & 0x1ffe;\n        let t5 = key[10] | key[11] << 8; this._r[6] = ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n        let t6 = key[12] | key[13] << 8; this._r[7] = ((t5 >>> 11) | (t6 << 5)) & 0x1f81;\n        let t7 = key[14] | key[15] << 8; this._r[8] = ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n        this._r[9] = ((t7 >>> 5)) & 0x007f;\n\n        this._pad[0] = key[16] | key[17] << 8;\n        this._pad[1] = key[18] | key[19] << 8;\n        this._pad[2] = key[20] | key[21] << 8;\n        this._pad[3] = key[22] | key[23] << 8;\n        this._pad[4] = key[24] | key[25] << 8;\n        this._pad[5] = key[26] | key[27] << 8;\n        this._pad[6] = key[28] | key[29] << 8;\n        this._pad[7] = key[30] | key[31] << 8;\n    }\n\n    private _blocks(m: Uint8Array, mpos: number, bytes: number) {\n        let hibit = this._fin ? 0 : 1 << 11;\n\n        let h0 = this._h[0],\n            h1 = this._h[1],\n            h2 = this._h[2],\n            h3 = this._h[3],\n            h4 = this._h[4],\n            h5 = this._h[5],\n            h6 = this._h[6],\n            h7 = this._h[7],\n            h8 = this._h[8],\n            h9 = this._h[9];\n\n        let r0 = this._r[0],\n            r1 = this._r[1],\n            r2 = this._r[2],\n            r3 = this._r[3],\n            r4 = this._r[4],\n            r5 = this._r[5],\n            r6 = this._r[6],\n            r7 = this._r[7],\n            r8 = this._r[8],\n            r9 = this._r[9];\n\n        while (bytes >= 16) {\n            let t0 = m[mpos + 0] | m[mpos + 1] << 8; h0 += (t0) & 0x1fff;\n            let t1 = m[mpos + 2] | m[mpos + 3] << 8; h1 += ((t0 >>> 13) | (t1 << 3)) & 0x1fff;\n            let t2 = m[mpos + 4] | m[mpos + 5] << 8; h2 += ((t1 >>> 10) | (t2 << 6)) & 0x1fff;\n            let t3 = m[mpos + 6] | m[mpos + 7] << 8; h3 += ((t2 >>> 7) | (t3 << 9)) & 0x1fff;\n            let t4 = m[mpos + 8] | m[mpos + 9] << 8; h4 += ((t3 >>> 4) | (t4 << 12)) & 0x1fff;\n            h5 += ((t4 >>> 1)) & 0x1fff;\n            let t5 = m[mpos + 10] | m[mpos + 11] << 8; h6 += ((t4 >>> 14) | (t5 << 2)) & 0x1fff;\n            let t6 = m[mpos + 12] | m[mpos + 13] << 8; h7 += ((t5 >>> 11) | (t6 << 5)) & 0x1fff;\n            let t7 = m[mpos + 14] | m[mpos + 15] << 8; h8 += ((t6 >>> 8) | (t7 << 8)) & 0x1fff;\n            h9 += ((t7 >>> 5)) | hibit;\n\n            let c = 0;\n\n            let d0 = c;\n            d0 += h0 * r0;\n            d0 += h1 * (5 * r9);\n            d0 += h2 * (5 * r8);\n            d0 += h3 * (5 * r7);\n            d0 += h4 * (5 * r6);\n            c = (d0 >>> 13); d0 &= 0x1fff;\n            d0 += h5 * (5 * r5);\n            d0 += h6 * (5 * r4);\n            d0 += h7 * (5 * r3);\n            d0 += h8 * (5 * r2);\n            d0 += h9 * (5 * r1);\n            c += (d0 >>> 13); d0 &= 0x1fff;\n\n            let d1 = c;\n            d1 += h0 * r1;\n            d1 += h1 * r0;\n            d1 += h2 * (5 * r9);\n            d1 += h3 * (5 * r8);\n            d1 += h4 * (5 * r7);\n            c = (d1 >>> 13); d1 &= 0x1fff;\n            d1 += h5 * (5 * r6);\n            d1 += h6 * (5 * r5);\n            d1 += h7 * (5 * r4);\n            d1 += h8 * (5 * r3);\n            d1 += h9 * (5 * r2);\n            c += (d1 >>> 13); d1 &= 0x1fff;\n\n            let d2 = c;\n            d2 += h0 * r2;\n            d2 += h1 * r1;\n            d2 += h2 * r0;\n            d2 += h3 * (5 * r9);\n            d2 += h4 * (5 * r8);\n            c = (d2 >>> 13); d2 &= 0x1fff;\n            d2 += h5 * (5 * r7);\n            d2 += h6 * (5 * r6);\n            d2 += h7 * (5 * r5);\n            d2 += h8 * (5 * r4);\n            d2 += h9 * (5 * r3);\n            c += (d2 >>> 13); d2 &= 0x1fff;\n\n            let d3 = c;\n            d3 += h0 * r3;\n            d3 += h1 * r2;\n            d3 += h2 * r1;\n            d3 += h3 * r0;\n            d3 += h4 * (5 * r9);\n            c = (d3 >>> 13); d3 &= 0x1fff;\n            d3 += h5 * (5 * r8);\n            d3 += h6 * (5 * r7);\n            d3 += h7 * (5 * r6);\n            d3 += h8 * (5 * r5);\n            d3 += h9 * (5 * r4);\n            c += (d3 >>> 13); d3 &= 0x1fff;\n\n            let d4 = c;\n            d4 += h0 * r4;\n            d4 += h1 * r3;\n            d4 += h2 * r2;\n            d4 += h3 * r1;\n            d4 += h4 * r0;\n            c = (d4 >>> 13); d4 &= 0x1fff;\n            d4 += h5 * (5 * r9);\n            d4 += h6 * (5 * r8);\n            d4 += h7 * (5 * r7);\n            d4 += h8 * (5 * r6);\n            d4 += h9 * (5 * r5);\n            c += (d4 >>> 13); d4 &= 0x1fff;\n\n            let d5 = c;\n            d5 += h0 * r5;\n            d5 += h1 * r4;\n            d5 += h2 * r3;\n            d5 += h3 * r2;\n            d5 += h4 * r1;\n            c = (d5 >>> 13); d5 &= 0x1fff;\n            d5 += h5 * r0;\n            d5 += h6 * (5 * r9);\n            d5 += h7 * (5 * r8);\n            d5 += h8 * (5 * r7);\n            d5 += h9 * (5 * r6);\n            c += (d5 >>> 13); d5 &= 0x1fff;\n\n            let d6 = c;\n            d6 += h0 * r6;\n            d6 += h1 * r5;\n            d6 += h2 * r4;\n            d6 += h3 * r3;\n            d6 += h4 * r2;\n            c = (d6 >>> 13); d6 &= 0x1fff;\n            d6 += h5 * r1;\n            d6 += h6 * r0;\n            d6 += h7 * (5 * r9);\n            d6 += h8 * (5 * r8);\n            d6 += h9 * (5 * r7);\n            c += (d6 >>> 13); d6 &= 0x1fff;\n\n            let d7 = c;\n            d7 += h0 * r7;\n            d7 += h1 * r6;\n            d7 += h2 * r5;\n            d7 += h3 * r4;\n            d7 += h4 * r3;\n            c = (d7 >>> 13); d7 &= 0x1fff;\n            d7 += h5 * r2;\n            d7 += h6 * r1;\n            d7 += h7 * r0;\n            d7 += h8 * (5 * r9);\n            d7 += h9 * (5 * r8);\n            c += (d7 >>> 13); d7 &= 0x1fff;\n\n            let d8 = c;\n            d8 += h0 * r8;\n            d8 += h1 * r7;\n            d8 += h2 * r6;\n            d8 += h3 * r5;\n            d8 += h4 * r4;\n            c = (d8 >>> 13); d8 &= 0x1fff;\n            d8 += h5 * r3;\n            d8 += h6 * r2;\n            d8 += h7 * r1;\n            d8 += h8 * r0;\n            d8 += h9 * (5 * r9);\n            c += (d8 >>> 13); d8 &= 0x1fff;\n\n            let d9 = c;\n            d9 += h0 * r9;\n            d9 += h1 * r8;\n            d9 += h2 * r7;\n            d9 += h3 * r6;\n            d9 += h4 * r5;\n            c = (d9 >>> 13); d9 &= 0x1fff;\n            d9 += h5 * r4;\n            d9 += h6 * r3;\n            d9 += h7 * r2;\n            d9 += h8 * r1;\n            d9 += h9 * r0;\n            c += (d9 >>> 13); d9 &= 0x1fff;\n\n            c = (((c << 2) + c)) | 0;\n            c = (c + d0) | 0;\n            d0 = c & 0x1fff;\n            c = (c >>> 13);\n            d1 += c;\n\n            h0 = d0;\n            h1 = d1;\n            h2 = d2;\n            h3 = d3;\n            h4 = d4;\n            h5 = d5;\n            h6 = d6;\n            h7 = d7;\n            h8 = d8;\n            h9 = d9;\n\n            mpos += 16;\n            bytes -= 16;\n        }\n        this._h[0] = h0;\n        this._h[1] = h1;\n        this._h[2] = h2;\n        this._h[3] = h3;\n        this._h[4] = h4;\n        this._h[5] = h5;\n        this._h[6] = h6;\n        this._h[7] = h7;\n        this._h[8] = h8;\n        this._h[9] = h9;\n    }\n\n    finish(mac: Uint8Array, macpos = 0): this {\n        const g = new Uint16Array(10);\n        let c: number;\n        let mask: number;\n        let f: number;\n        let i: number;\n\n        if (this._leftover) {\n            i = this._leftover;\n            this._buffer[i++] = 1;\n            for (; i < 16; i++) {\n                this._buffer[i] = 0;\n            }\n            this._fin = 1;\n            this._blocks(this._buffer, 0, 16);\n        }\n\n        c = this._h[1] >>> 13;\n        this._h[1] &= 0x1fff;\n        for (i = 2; i < 10; i++) {\n            this._h[i] += c;\n            c = this._h[i] >>> 13;\n            this._h[i] &= 0x1fff;\n        }\n        this._h[0] += (c * 5);\n        c = this._h[0] >>> 13;\n        this._h[0] &= 0x1fff;\n        this._h[1] += c;\n        c = this._h[1] >>> 13;\n        this._h[1] &= 0x1fff;\n        this._h[2] += c;\n\n        g[0] = this._h[0] + 5;\n        c = g[0] >>> 13;\n        g[0] &= 0x1fff;\n        for (i = 1; i < 10; i++) {\n            g[i] = this._h[i] + c;\n            c = g[i] >>> 13;\n            g[i] &= 0x1fff;\n        }\n        g[9] -= (1 << 13);\n\n        mask = (c ^ 1) - 1;\n        for (i = 0; i < 10; i++) {\n            g[i] &= mask;\n        }\n        mask = ~mask;\n        for (i = 0; i < 10; i++) {\n            this._h[i] = (this._h[i] & mask) | g[i];\n        }\n\n        this._h[0] = ((this._h[0]) | (this._h[1] << 13)) & 0xffff;\n        this._h[1] = ((this._h[1] >>> 3) | (this._h[2] << 10)) & 0xffff;\n        this._h[2] = ((this._h[2] >>> 6) | (this._h[3] << 7)) & 0xffff;\n        this._h[3] = ((this._h[3] >>> 9) | (this._h[4] << 4)) & 0xffff;\n        this._h[4] = ((this._h[4] >>> 12) | (this._h[5] << 1) | (this._h[6] << 14)) & 0xffff;\n        this._h[5] = ((this._h[6] >>> 2) | (this._h[7] << 11)) & 0xffff;\n        this._h[6] = ((this._h[7] >>> 5) | (this._h[8] << 8)) & 0xffff;\n        this._h[7] = ((this._h[8] >>> 8) | (this._h[9] << 5)) & 0xffff;\n\n        f = this._h[0] + this._pad[0];\n        this._h[0] = f & 0xffff;\n        for (i = 1; i < 8; i++) {\n            f = (((this._h[i] + this._pad[i]) | 0) + (f >>> 16)) | 0;\n            this._h[i] = f & 0xffff;\n        }\n\n        mac[macpos + 0] = this._h[0] >>> 0;\n        mac[macpos + 1] = this._h[0] >>> 8;\n        mac[macpos + 2] = this._h[1] >>> 0;\n        mac[macpos + 3] = this._h[1] >>> 8;\n        mac[macpos + 4] = this._h[2] >>> 0;\n        mac[macpos + 5] = this._h[2] >>> 8;\n        mac[macpos + 6] = this._h[3] >>> 0;\n        mac[macpos + 7] = this._h[3] >>> 8;\n        mac[macpos + 8] = this._h[4] >>> 0;\n        mac[macpos + 9] = this._h[4] >>> 8;\n        mac[macpos + 10] = this._h[5] >>> 0;\n        mac[macpos + 11] = this._h[5] >>> 8;\n        mac[macpos + 12] = this._h[6] >>> 0;\n        mac[macpos + 13] = this._h[6] >>> 8;\n        mac[macpos + 14] = this._h[7] >>> 0;\n        mac[macpos + 15] = this._h[7] >>> 8;\n\n        this._finished = true;\n        return this;\n    }\n\n    update(m: Uint8Array): this {\n        let mpos = 0;\n        let bytes = m.length;\n        let want: number;\n\n        if (this._leftover) {\n            want = (16 - this._leftover);\n            if (want > bytes) {\n                want = bytes;\n            }\n            for (let i = 0; i < want; i++) {\n                this._buffer[this._leftover + i] = m[mpos + i];\n            }\n            bytes -= want;\n            mpos += want;\n            this._leftover += want;\n            if (this._leftover < 16) {\n                return this;\n            }\n            this._blocks(this._buffer, 0, 16);\n            this._leftover = 0;\n        }\n\n        if (bytes >= 16) {\n            want = bytes - (bytes % 16);\n            this._blocks(m, mpos, want);\n            mpos += want;\n            bytes -= want;\n        }\n\n        if (bytes) {\n            for (let i = 0; i < bytes; i++) {\n                this._buffer[this._leftover + i] = m[mpos + i];\n            }\n            this._leftover += bytes;\n        }\n\n        return this;\n    }\n\n    digest(): Uint8Array {\n        // TODO(dchest): it behaves differently than other hashes/HMAC,\n        // because it throws when finished — others just return saved result.\n        if (this._finished) {\n            throw new Error(\"Poly1305 was finished\");\n        }\n        let mac = new Uint8Array(16);\n        this.finish(mac);\n        return mac;\n    }\n\n    clean(): this {\n        wipe(this._buffer);\n        wipe(this._r);\n        wipe(this._h);\n        wipe(this._pad);\n        this._leftover = 0;\n        this._fin = 0;\n        this._finished = true; // mark as finished even if not\n        return this;\n    }\n}\n\n/**\n * Returns 16-byte authenticator of data using a one-time 32-byte key.\n *\n * Important: key should be used for only one message, it should never repeat.\n */\nexport function oneTimeAuth(key: Uint8Array, data: Uint8Array): Uint8Array {\n    const h = new Poly1305(key);\n    h.update(data);\n    const digest = h.digest();\n    h.clean();\n    return digest;\n}\n\n/**\n * Returns true if two authenticators are 16-byte long and equal.\n * Uses contant-time comparison to avoid leaking timing information.\n */\nexport function equal(a: Uint8Array, b: Uint8Array): boolean {\n    if (a.length !== DIGEST_LENGTH || b.length !== DIGEST_LENGTH) {\n        return false;\n    }\n    return constantTimeEqual(a, b);\n}\n"]},"metadata":{},"sourceType":"script"}