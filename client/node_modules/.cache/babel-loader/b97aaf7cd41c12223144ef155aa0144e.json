{"ast":null,"code":"import { getPubsubRouting } from './utils.js';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\n/**\n * @param {object} config\n * @param {import('../../ipns').IPNSAPI} config.ipns\n * @param {import('../../../types').Options} config.options\n */\n\nexport function createState(_ref) {\n  let {\n    ipns,\n    options\n  } = _ref;\n  const experimental = options.EXPERIMENTAL;\n  /**\n   * @type {import('ipfs-core-types/src/name/pubsub').API<{}>[\"state\"]}\n   */\n\n  async function state() {\n    let _options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    // eslint-disable-line require-await\n    try {\n      return {\n        enabled: Boolean(getPubsubRouting(ipns, experimental))\n      };\n    } catch (\n    /** @type {any} */\n    err) {\n      return {\n        enabled: false\n      };\n    }\n  }\n\n  return withTimeoutOption(state);\n}","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/node_modules/ipfs-core/src/components/name/pubsub/state.js"],"names":["getPubsubRouting","withTimeoutOption","createState","ipns","options","experimental","EXPERIMENTAL","state","_options","enabled","Boolean","err"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,YAAjC;AACA,SAASC,iBAAT,QAAkC,qCAAlC;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,WAAT,OAAyC;AAAA,MAAnB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAmB;AAC9C,QAAMC,YAAY,GAAGD,OAAO,CAACE,YAA7B;AAEA;AACF;AACA;;AACE,iBAAeC,KAAf,GAAqC;AAAA,QAAfC,QAAe,uEAAJ,EAAI;;AAAE;AACrC,QAAI;AACF,aAAO;AAAEC,QAAAA,OAAO,EAAEC,OAAO,CAACV,gBAAgB,CAACG,IAAD,EAAOE,YAAP,CAAjB;AAAlB,OAAP;AACD,KAFD,CAEE;AAAO;AAAmBM,IAAAA,GAA1B,EAA+B;AAC/B,aAAO;AAAEF,QAAAA,OAAO,EAAE;AAAX,OAAP;AACD;AACF;;AAED,SAAOR,iBAAiB,CAACM,KAAD,CAAxB;AACD","sourcesContent":["import { getPubsubRouting } from './utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('../../ipns').IPNSAPI} config.ipns\n * @param {import('../../../types').Options} config.options\n */\nexport function createState ({ ipns, options }) {\n  const experimental = options.EXPERIMENTAL\n\n  /**\n   * @type {import('ipfs-core-types/src/name/pubsub').API<{}>[\"state\"]}\n   */\n  async function state (_options = {}) { // eslint-disable-line require-await\n    try {\n      return { enabled: Boolean(getPubsubRouting(ipns, experimental)) }\n    } catch (/** @type {any} */ err) {\n      return { enabled: false }\n    }\n  }\n\n  return withTimeoutOption(state)\n}\n"]},"metadata":{},"sourceType":"module"}