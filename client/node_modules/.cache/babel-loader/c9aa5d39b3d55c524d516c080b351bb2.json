{"ast":null,"code":"// ported from https://www.npmjs.com/package/fast-fifo\nclass FixedFIFO {\n  constructor(hwm) {\n    if (!(hwm > 0) || (hwm - 1 & hwm) !== 0) {\n      throw new Error('Max size for a FixedFIFO should be a power of two');\n    }\n\n    this.buffer = new Array(hwm);\n    this.mask = hwm - 1;\n    this.top = 0;\n    this.btm = 0;\n    this.next = null;\n  }\n\n  push(data) {\n    if (this.buffer[this.top] !== undefined) {\n      return false;\n    }\n\n    this.buffer[this.top] = data;\n    this.top = this.top + 1 & this.mask;\n    return true;\n  }\n\n  shift() {\n    const last = this.buffer[this.btm];\n\n    if (last === undefined) {\n      return undefined;\n    }\n\n    this.buffer[this.btm] = undefined;\n    this.btm = this.btm + 1 & this.mask;\n    return last;\n  }\n\n  isEmpty() {\n    return this.buffer[this.btm] === undefined;\n  }\n\n}\n\nexport class FIFO {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.hwm = options.splitLimit ?? 16;\n    this.head = new FixedFIFO(this.hwm);\n    this.tail = this.head;\n    this.size = 0;\n  }\n\n  calculateSize(obj) {\n    if (obj?.byteLength != null) {\n      return obj.byteLength;\n    }\n\n    return 1;\n  }\n\n  push(val) {\n    if (val?.value != null) {\n      this.size += this.calculateSize(val.value);\n    }\n\n    if (!this.head.push(val)) {\n      const prev = this.head;\n      this.head = prev.next = new FixedFIFO(2 * this.head.buffer.length);\n      this.head.push(val);\n    }\n  }\n\n  shift() {\n    let val = this.tail.shift();\n\n    if (val === undefined && this.tail.next != null) {\n      const next = this.tail.next;\n      this.tail.next = null;\n      this.tail = next;\n      val = this.tail.shift();\n    }\n\n    if (val?.value != null) {\n      this.size -= this.calculateSize(val.value);\n    }\n\n    return val;\n  }\n\n  isEmpty() {\n    return this.head.isEmpty();\n  }\n\n}","map":{"version":3,"mappings":"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","names":["FixedFIFO","constructor","hwm","Error","buffer","Array","mask","top","btm","next","push","data","undefined","shift","last","isEmpty","FIFO","options","splitLimit","head","tail","size","calculateSize","obj","byteLength","val","value","prev","length"],"sources":["C:\\Users\\Akshay Mishra\\OneDrive\\Desktop\\twitter-clone-dapp\\node_modules\\it-pushable\\src\\fifo.ts"],"sourcesContent":["// ported from https://www.npmjs.com/package/fast-fifo\n\nexport interface Next<T> {\n  done?: boolean\n  error?: Error\n  value?: T\n}\n\nclass FixedFIFO<T> {\n  public buffer: Array<Next<T> | undefined>\n  private readonly mask: number\n  private top: number\n  private btm: number\n  public next: FixedFIFO<T> | null\n\n  constructor (hwm: number) {\n    if (!(hwm > 0) || ((hwm - 1) & hwm) !== 0) {\n      throw new Error('Max size for a FixedFIFO should be a power of two')\n    }\n\n    this.buffer = new Array(hwm)\n    this.mask = hwm - 1\n    this.top = 0\n    this.btm = 0\n    this.next = null\n  }\n\n  push (data: Next<T>): boolean {\n    if (this.buffer[this.top] !== undefined) {\n      return false\n    }\n\n    this.buffer[this.top] = data\n    this.top = (this.top + 1) & this.mask\n\n    return true\n  }\n\n  shift (): Next<T> | undefined {\n    const last = this.buffer[this.btm]\n\n    if (last === undefined) {\n      return undefined\n    }\n\n    this.buffer[this.btm] = undefined\n    this.btm = (this.btm + 1) & this.mask\n    return last\n  }\n\n  isEmpty (): boolean {\n    return this.buffer[this.btm] === undefined\n  }\n}\n\nexport interface FIFOOptions {\n  /**\n   * When the queue reaches this size, it will be split into head/tail parts\n   */\n  splitLimit?: number\n}\n\nexport class FIFO<T> {\n  public size: number\n  private readonly hwm: number\n  private head: FixedFIFO<T>\n  private tail: FixedFIFO<T>\n\n  constructor (options: FIFOOptions = {}) {\n    this.hwm = options.splitLimit ?? 16\n    this.head = new FixedFIFO<T>(this.hwm)\n    this.tail = this.head\n    this.size = 0\n  }\n\n  calculateSize (obj: any): number {\n    if (obj?.byteLength != null) {\n      return obj.byteLength\n    }\n\n    return 1\n  }\n\n  push (val: Next<T>): void {\n    if (val?.value != null) {\n      this.size += this.calculateSize(val.value)\n    }\n\n    if (!this.head.push(val)) {\n      const prev = this.head\n      this.head = prev.next = new FixedFIFO<T>(2 * this.head.buffer.length)\n      this.head.push(val)\n    }\n  }\n\n  shift (): Next<T> | undefined {\n    let val = this.tail.shift()\n\n    if (val === undefined && (this.tail.next != null)) {\n      const next = this.tail.next\n      this.tail.next = null\n      this.tail = next\n      val = this.tail.shift()\n    }\n\n    if (val?.value != null) {\n      this.size -= this.calculateSize(val.value)\n    }\n\n    return val\n  }\n\n  isEmpty (): boolean {\n    return this.head.isEmpty()\n  }\n}\n"]},"metadata":{},"sourceType":"module"}