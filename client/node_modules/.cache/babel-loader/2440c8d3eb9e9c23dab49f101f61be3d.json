{"ast":null,"code":"import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport { createGet } from '../get.js';\nimport { createPut } from '../put.js';\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../../types').Preload} config.preload\n */\n\nexport function createSetData(_ref) {\n  let {\n    repo,\n    preload\n  } = _ref;\n  const get = createGet({\n    repo,\n    preload\n  });\n  const put = createPut({\n    repo,\n    preload\n  });\n  /**\n   * @type {import('ipfs-core-types/src/object/patch').API<{}>[\"setData\"]}\n   */\n\n  async function setData(cid, data) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const node = await get(cid, options);\n    return put({ ...node,\n      Data: data\n    }, options);\n  }\n\n  return withTimeoutOption(setData);\n}","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/node_modules/ipfs-core/src/components/object/patch/set-data.js"],"names":["withTimeoutOption","createGet","createPut","createSetData","repo","preload","get","put","setData","cid","data","options","node","Data"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,qCAAlC;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,SAASC,SAAT,QAA0B,WAA1B;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,aAAT,OAA2C;AAAA,MAAnB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAmB;AAChD,QAAMC,GAAG,GAAGL,SAAS,CAAC;AAAEG,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,CAArB;AACA,QAAME,GAAG,GAAGL,SAAS,CAAC;AAAEE,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,CAArB;AAEA;AACF;AACA;;AACE,iBAAeG,OAAf,CAAwBC,GAAxB,EAA6BC,IAA7B,EAAiD;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AAC/C,UAAMC,IAAI,GAAG,MAAMN,GAAG,CAACG,GAAD,EAAME,OAAN,CAAtB;AAEA,WAAOJ,GAAG,CAAC,EACT,GAAGK,IADM;AAETC,MAAAA,IAAI,EAAEH;AAFG,KAAD,EAGPC,OAHO,CAAV;AAID;;AAED,SAAOX,iBAAiB,CAACQ,OAAD,CAAxB;AACD","sourcesContent":["import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { createGet } from '../get.js'\nimport { createPut } from '../put.js'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../../types').Preload} config.preload\n */\nexport function createSetData ({ repo, preload }) {\n  const get = createGet({ repo, preload })\n  const put = createPut({ repo, preload })\n\n  /**\n   * @type {import('ipfs-core-types/src/object/patch').API<{}>[\"setData\"]}\n   */\n  async function setData (cid, data, options = {}) {\n    const node = await get(cid, options)\n\n    return put({\n      ...node,\n      Data: data\n    }, options)\n  }\n\n  return withTimeoutOption(setData)\n}\n"]},"metadata":{},"sourceType":"module"}