{"ast":null,"code":"import { Key } from 'interface-datastore';\nimport sortKeys from 'sort-keys';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nconst specKey = new Key('datastore_spec');\n/**\n *\n * @param {import('interface-datastore').Datastore} store\n */\n\nexport function spec(store) {\n  return {\n    /**\n     * Check if a datastore spec file exists.\n     *\n     */\n    exists() {\n      return store.has(specKey);\n    },\n\n    /**\n     * Get the current datastore spec.\n     *\n     * @returns {Promise<Uint8Array>}\n     */\n    async get() {\n      const buf = await store.get(specKey);\n      return JSON.parse(uint8ArrayToString(buf));\n    },\n\n    /**\n     * Set the datastore spec of the repo, writing it to the underlying store.\n     * TODO unclear on what the type should be or if it's required\n     *\n     * @param {any} spec\n     * @returns {Promise<void>}\n     */\n    async set(spec) {\n      return store.put(specKey, uint8ArrayFromString(JSON.stringify(sortKeys(spec, {\n        deep: true\n      }))));\n    }\n\n  };\n}","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/node_modules/ipfs-repo/src/spec.js"],"names":["Key","sortKeys","toString","uint8ArrayToString","fromString","uint8ArrayFromString","specKey","spec","store","exists","has","get","buf","JSON","parse","set","put","stringify","deep"],"mappings":"AACA,SAASA,GAAT,QAAoB,qBAApB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAQ,IAAIC,kBAArB,QAA+C,uBAA/C;AACA,SAASC,UAAU,IAAIC,oBAAvB,QAAmD,yBAAnD;AAEA,MAAMC,OAAO,GAAG,IAAIN,GAAJ,CAAQ,gBAAR,CAAhB;AAEA;AACA;AACA;AACA;;AACA,OAAO,SAASO,IAAT,CAAeC,KAAf,EAAsB;AAC3B,SAAO;AACL;AACJ;AACA;AACA;AACIC,IAAAA,MAAM,GAAI;AACR,aAAOD,KAAK,CAACE,GAAN,CAAUJ,OAAV,CAAP;AACD,KAPI;;AAQL;AACJ;AACA;AACA;AACA;AACI,UAAMK,GAAN,GAAa;AACX,YAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACG,GAAN,CAAUL,OAAV,CAAlB;AACA,aAAOO,IAAI,CAACC,KAAL,CAAWX,kBAAkB,CAACS,GAAD,CAA7B,CAAP;AACD,KAhBI;;AAiBL;AACJ;AACA;AACA;AACA;AACA;AACA;AACI,UAAMG,GAAN,CAAWR,IAAX,EAAiB;AACf,aAAOC,KAAK,CAACQ,GAAN,CAAUV,OAAV,EAAmBD,oBAAoB,CAACQ,IAAI,CAACI,SAAL,CAAehB,QAAQ,CAACM,IAAD,EAAO;AAAEW,QAAAA,IAAI,EAAE;AAAR,OAAP,CAAvB,CAAD,CAAvC,CAAP;AACD;;AA1BI,GAAP;AA4BD","sourcesContent":["\nimport { Key } from 'interface-datastore'\nimport sortKeys from 'sort-keys'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\n\nconst specKey = new Key('datastore_spec')\n\n/**\n *\n * @param {import('interface-datastore').Datastore} store\n */\nexport function spec (store) {\n  return {\n    /**\n     * Check if a datastore spec file exists.\n     *\n     */\n    exists () {\n      return store.has(specKey)\n    },\n    /**\n     * Get the current datastore spec.\n     *\n     * @returns {Promise<Uint8Array>}\n     */\n    async get () {\n      const buf = await store.get(specKey)\n      return JSON.parse(uint8ArrayToString(buf))\n    },\n    /**\n     * Set the datastore spec of the repo, writing it to the underlying store.\n     * TODO unclear on what the type should be or if it's required\n     *\n     * @param {any} spec\n     * @returns {Promise<void>}\n     */\n    async set (spec) {\n      return store.put(specKey, uint8ArrayFromString(JSON.stringify(sortKeys(spec, { deep: true }))))\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}