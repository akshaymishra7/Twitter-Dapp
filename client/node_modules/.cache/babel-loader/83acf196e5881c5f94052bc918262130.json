{"ast":null,"code":"import { murmur3128 } from '@multiformats/murmur3';\nexport const hamtHashCode = murmur3128.code;\nexport const hamtBucketBits = 8;\n/**\n * @param {Uint8Array} buf\n */\n\nexport async function hamtHashFn(buf) {\n  return (await murmur3128.encode(buf) // Murmur3 outputs 128 bit but, accidentally, IPFS Go's\n  // implementation only uses the first 64, so we must do the same\n  // for parity..\n  ).subarray(0, 8) // Invert buffer because that's how Go impl does it\n  .reverse();\n}","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/node_modules/ipfs-core/src/components/files/utils/hamt-constants.js"],"names":["murmur3128","hamtHashCode","code","hamtBucketBits","hamtHashFn","buf","encode","subarray","reverse"],"mappings":"AAAA,SAASA,UAAT,QAA2B,uBAA3B;AAEA,OAAO,MAAMC,YAAY,GAAGD,UAAU,CAACE,IAAhC;AACP,OAAO,MAAMC,cAAc,GAAG,CAAvB;AAEP;AACA;AACA;;AACA,OAAO,eAAeC,UAAf,CAA2BC,GAA3B,EAAgC;AACrC,SAAO,CAAC,MAAML,UAAU,CAACM,MAAX,CAAkBD,GAAlB,CAAP,CACL;AACA;AACA;AAHK,IAIJE,QAJI,CAIK,CAJL,EAIQ,CAJR,EAKL;AALK,GAMJC,OANI,EAAP;AAOD","sourcesContent":["import { murmur3128 } from '@multiformats/murmur3'\n\nexport const hamtHashCode = murmur3128.code\nexport const hamtBucketBits = 8\n\n/**\n * @param {Uint8Array} buf\n */\nexport async function hamtHashFn (buf) {\n  return (await murmur3128.encode(buf))\n    // Murmur3 outputs 128 bit but, accidentally, IPFS Go's\n    // implementation only uses the first 64, so we must do the same\n    // for parity..\n    .subarray(0, 8)\n    // Invert buffer because that's how Go impl does it\n    .reverse()\n}\n"]},"metadata":{},"sourceType":"module"}