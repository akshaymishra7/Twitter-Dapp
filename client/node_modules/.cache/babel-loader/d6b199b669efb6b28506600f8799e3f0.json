{"ast":null,"code":"import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\n\nexport function createStat(_ref) {\n  let {\n    repo\n  } = _ref;\n\n  /**\n   * @type {import('ipfs-core-types/src/repo').API<{}>[\"stat\"]}\n   */\n  async function stat() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const stats = await repo.stat();\n    return {\n      numObjects: BigInt(stats.numObjects.toString()),\n      repoSize: BigInt(stats.repoSize.toString()),\n      repoPath: stats.repoPath,\n      version: `${stats.version}`,\n      storageMax: BigInt(stats.storageMax.toString())\n    };\n  }\n\n  return withTimeoutOption(stat);\n}","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/node_modules/ipfs-core/src/components/repo/stat.js"],"names":["withTimeoutOption","createStat","repo","stat","options","stats","numObjects","BigInt","toString","repoSize","repoPath","version","storageMax"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,qCAAlC;AAEA;AACA;AACA;AACA;;AACA,OAAO,SAASC,UAAT,OAA+B;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;;AACpC;AACF;AACA;AACE,iBAAeC,IAAf,GAAmC;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AACjC,UAAMC,KAAK,GAAG,MAAMH,IAAI,CAACC,IAAL,EAApB;AAEA,WAAO;AACLG,MAAAA,UAAU,EAAEC,MAAM,CAACF,KAAK,CAACC,UAAN,CAAiBE,QAAjB,EAAD,CADb;AAELC,MAAAA,QAAQ,EAAEF,MAAM,CAACF,KAAK,CAACI,QAAN,CAAeD,QAAf,EAAD,CAFX;AAGLE,MAAAA,QAAQ,EAAEL,KAAK,CAACK,QAHX;AAILC,MAAAA,OAAO,EAAG,GAAEN,KAAK,CAACM,OAAQ,EAJrB;AAKLC,MAAAA,UAAU,EAAEL,MAAM,CAACF,KAAK,CAACO,UAAN,CAAiBJ,QAAjB,EAAD;AALb,KAAP;AAOD;;AAED,SAAOR,iBAAiB,CAACG,IAAD,CAAxB;AACD","sourcesContent":["import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createStat ({ repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/repo').API<{}>[\"stat\"]}\n   */\n  async function stat (options = {}) {\n    const stats = await repo.stat()\n\n    return {\n      numObjects: BigInt(stats.numObjects.toString()),\n      repoSize: BigInt(stats.repoSize.toString()),\n      repoPath: stats.repoPath,\n      version: `${stats.version}`,\n      storageMax: BigInt(stats.storageMax.toString())\n    }\n  }\n\n  return withTimeoutOption(stat)\n}\n"]},"metadata":{},"sourceType":"module"}