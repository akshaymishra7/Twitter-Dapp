{"ast":null,"code":"import { base64 } from 'multiformats/bases/base64';\nimport * as ciphers from '../ciphers/aes-gcm.js';\n/**\n * Exports the given PrivateKey as a base64 encoded string.\n * The PrivateKey is encrypted via a password derived PBKDF2 key\n * leveraging the aes-gcm cipher algorithm.\n */\n\nexport async function exporter(privateKey, password) {\n  const cipher = ciphers.create();\n  const encryptedKey = await cipher.encrypt(privateKey, password);\n  return base64.encode(encryptedKey);\n}","map":{"version":3,"mappings":"AAAA,SAASA,MAAT,QAAuB,2BAAvB;AACA,OAAO,KAAKC,OAAZ,MAAyB,uBAAzB;AAGA;;;;;;AAKA,OAAO,eAAeC,QAAf,CAAyBC,UAAzB,EAAiDC,QAAjD,EAAiE;AACtE,QAAMC,MAAM,GAAGJ,OAAO,CAACK,MAAR,EAAf;AACA,QAAMC,YAAY,GAAG,MAAMF,MAAM,CAACG,OAAP,CAAeL,UAAf,EAA2BC,QAA3B,CAA3B;AACA,SAAOJ,MAAM,CAACS,MAAP,CAAcF,YAAd,CAAP;AACD","names":["base64","ciphers","exporter","privateKey","password","cipher","create","encryptedKey","encrypt","encode"],"sources":["C:\\Users\\Akshay Mishra\\OneDrive\\Desktop\\twitter-clone-dapp\\node_modules\\@libp2p\\crypto\\src\\keys\\exporter.ts"],"sourcesContent":["import { base64 } from 'multiformats/bases/base64'\nimport * as ciphers from '../ciphers/aes-gcm.js'\nimport type { Multibase } from 'multiformats'\n\n/**\n * Exports the given PrivateKey as a base64 encoded string.\n * The PrivateKey is encrypted via a password derived PBKDF2 key\n * leveraging the aes-gcm cipher algorithm.\n */\nexport async function exporter (privateKey: Uint8Array, password: string): Promise<Multibase<'m'>> {\n  const cipher = ciphers.create()\n  const encryptedKey = await cipher.encrypt(privateKey, password)\n  return base64.encode(encryptedKey)\n}\n"]},"metadata":{},"sourceType":"module"}