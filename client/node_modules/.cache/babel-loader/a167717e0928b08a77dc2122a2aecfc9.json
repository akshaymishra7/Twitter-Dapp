{"ast":null,"code":"import { Wantlist } from '../wantlist/index.js';\n/**\n * @typedef {import('multiformats').CID} CID\n */\n\nexport class Ledger {\n  /**\n   * @param {import('@libp2p/interface-peer-id').PeerId} peerId\n   */\n  constructor(peerId) {\n    this.partner = peerId;\n    this.wantlist = new Wantlist();\n    this.exchangeCount = 0;\n    this.sentToPeer = new Map();\n    this.accounting = {\n      bytesSent: 0,\n      bytesRecv: 0\n    };\n  }\n  /**\n   * @param {number} n\n   */\n\n\n  sentBytes(n) {\n    this.exchangeCount++;\n    this.lastExchange = new Date().getTime();\n    this.accounting.bytesSent += n;\n  }\n  /**\n   * @param {number} n\n   */\n\n\n  receivedBytes(n) {\n    this.exchangeCount++;\n    this.lastExchange = new Date().getTime();\n    this.accounting.bytesRecv += n;\n  }\n  /**\n   *\n   * @param {CID} cid\n   * @param {number} priority\n   * @param {import('../message/message').Message.Wantlist.WantType} wantType\n   * @returns {void}\n   */\n\n\n  wants(cid, priority, wantType) {\n    this.wantlist.add(cid, priority, wantType);\n  }\n  /**\n   * @param {CID} cid\n   * @returns {void}\n   */\n\n\n  cancelWant(cid) {\n    this.wantlist.remove(cid);\n  }\n  /**\n   * @param {CID} cid\n   */\n\n\n  wantlistContains(cid) {\n    return this.wantlist.get(cid);\n  }\n  /**\n   * @returns {number}\n   */\n\n\n  debtRatio() {\n    return this.accounting.bytesSent / (this.accounting.bytesRecv + 1); // +1 is to prevent division by zero\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Akshay Mishra/OneDrive/Desktop/twitter-clone-dapp/node_modules/ipfs-bitswap/src/decision-engine/ledger.js"],"names":["Wantlist","Ledger","constructor","peerId","partner","wantlist","exchangeCount","sentToPeer","Map","accounting","bytesSent","bytesRecv","sentBytes","n","lastExchange","Date","getTime","receivedBytes","wants","cid","priority","wantType","add","cancelWant","remove","wantlistContains","get","debtRatio"],"mappings":"AAAA,SAASA,QAAT,QAAyB,sBAAzB;AAEA;AACA;AACA;;AAEA,OAAO,MAAMC,MAAN,CAAa;AAClB;AACF;AACA;AACEC,EAAAA,WAAW,CAAEC,MAAF,EAAU;AACnB,SAAKC,OAAL,GAAeD,MAAf;AACA,SAAKE,QAAL,GAAgB,IAAIL,QAAJ,EAAhB;AAEA,SAAKM,aAAL,GAAqB,CAArB;AACA,SAAKC,UAAL,GAAkB,IAAIC,GAAJ,EAAlB;AAEA,SAAKC,UAAL,GAAkB;AAChBC,MAAAA,SAAS,EAAE,CADK;AAEhBC,MAAAA,SAAS,EAAE;AAFK,KAAlB;AAID;AAED;AACF;AACA;;;AACEC,EAAAA,SAAS,CAAEC,CAAF,EAAK;AACZ,SAAKP,aAAL;AACA,SAAKQ,YAAL,GAAqB,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EAApB;AACA,SAAKP,UAAL,CAAgBC,SAAhB,IAA6BG,CAA7B;AACD;AAED;AACF;AACA;;;AACEI,EAAAA,aAAa,CAAEJ,CAAF,EAAK;AAChB,SAAKP,aAAL;AACA,SAAKQ,YAAL,GAAqB,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EAApB;AACA,SAAKP,UAAL,CAAgBE,SAAhB,IAA6BE,CAA7B;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;;AACEK,EAAAA,KAAK,CAAEC,GAAF,EAAOC,QAAP,EAAiBC,QAAjB,EAA2B;AAC9B,SAAKhB,QAAL,CAAciB,GAAd,CAAkBH,GAAlB,EAAuBC,QAAvB,EAAiCC,QAAjC;AACD;AAED;AACF;AACA;AACA;;;AAEEE,EAAAA,UAAU,CAAEJ,GAAF,EAAO;AACf,SAAKd,QAAL,CAAcmB,MAAd,CAAqBL,GAArB;AACD;AAED;AACF;AACA;;;AACEM,EAAAA,gBAAgB,CAAEN,GAAF,EAAO;AACrB,WAAO,KAAKd,QAAL,CAAcqB,GAAd,CAAkBP,GAAlB,CAAP;AACD;AAED;AACF;AACA;;;AACEQ,EAAAA,SAAS,GAAI;AACX,WAAQ,KAAKlB,UAAL,CAAgBC,SAAhB,IAA6B,KAAKD,UAAL,CAAgBE,SAAhB,GAA4B,CAAzD,CAAR,CADW,CAC0D;AACtE;;AAnEiB","sourcesContent":["import { Wantlist } from '../wantlist/index.js'\n\n/**\n * @typedef {import('multiformats').CID} CID\n */\n\nexport class Ledger {\n  /**\n   * @param {import('@libp2p/interface-peer-id').PeerId} peerId\n   */\n  constructor (peerId) {\n    this.partner = peerId\n    this.wantlist = new Wantlist()\n\n    this.exchangeCount = 0\n    this.sentToPeer = new Map()\n\n    this.accounting = {\n      bytesSent: 0,\n      bytesRecv: 0\n    }\n  }\n\n  /**\n   * @param {number} n\n   */\n  sentBytes (n) {\n    this.exchangeCount++\n    this.lastExchange = (new Date()).getTime()\n    this.accounting.bytesSent += n\n  }\n\n  /**\n   * @param {number} n\n   */\n  receivedBytes (n) {\n    this.exchangeCount++\n    this.lastExchange = (new Date()).getTime()\n    this.accounting.bytesRecv += n\n  }\n\n  /**\n   *\n   * @param {CID} cid\n   * @param {number} priority\n   * @param {import('../message/message').Message.Wantlist.WantType} wantType\n   * @returns {void}\n   */\n  wants (cid, priority, wantType) {\n    this.wantlist.add(cid, priority, wantType)\n  }\n\n  /**\n   * @param {CID} cid\n   * @returns {void}\n   */\n\n  cancelWant (cid) {\n    this.wantlist.remove(cid)\n  }\n\n  /**\n   * @param {CID} cid\n   */\n  wantlistContains (cid) {\n    return this.wantlist.get(cid)\n  }\n\n  /**\n   * @returns {number}\n   */\n  debtRatio () {\n    return (this.accounting.bytesSent / (this.accounting.bytesRecv + 1)) // +1 is to prevent division by zero\n  }\n}\n"]},"metadata":{},"sourceType":"module"}