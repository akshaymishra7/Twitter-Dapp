{"ast":null,"code":"import { convertToString } from '@multiformats/multiaddr/convert'; // Protocols https://github.com/multiformats/multiaddr/blob/master/protocols.csv\n// code  size  name\n// 4     32    ip4\n// 41    128   ip6\n\nvar Protocol;\n\n(function (Protocol) {\n  Protocol[Protocol[\"ip4\"] = 4] = \"ip4\";\n  Protocol[Protocol[\"ip6\"] = 41] = \"ip6\";\n})(Protocol || (Protocol = {}));\n\nexport function multiaddrToIPStr(multiaddr) {\n  for (const tuple of multiaddr.tuples()) {\n    switch (tuple[0]) {\n      case Protocol.ip4:\n      case Protocol.ip6:\n        return convertToString(tuple[0], tuple[1]);\n    }\n  }\n\n  return null;\n}","map":{"version":3,"mappings":"AACA,SAASA,eAAT,QAAgC,iCAAhC,C,CAEA;AACA;AACA;AACA;;AACA,IAAKC,QAAL;;AAAA,WAAKA,QAAL,EAAa;AACXA;AACAA;AACD,CAHD,EAAKA,QAAQ,KAARA,QAAQ,MAAb;;AAKA,OAAM,SAAUC,gBAAV,CAA2BC,SAA3B,EAA+C;AACnD,OAAK,MAAMC,KAAX,IAAoBD,SAAS,CAACE,MAAV,EAApB,EAAwC;AACtC,YAAQD,KAAK,CAAC,CAAD,CAAb;AACE,WAAKH,QAAQ,CAACK,GAAd;AACA,WAAKL,QAAQ,CAACM,GAAd;AACE,eAAOP,eAAe,CAACI,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,CAAtB;AAHJ;AAKD;;AAED,SAAO,IAAP;AACD","names":["convertToString","Protocol","multiaddrToIPStr","multiaddr","tuple","tuples","ip4","ip6"],"sources":["C:\\Users\\Akshay Mishra\\OneDrive\\Desktop\\twitter-clone-dapp\\node_modules\\@chainsafe\\libp2p-gossipsub\\src\\utils\\multiaddr.ts"],"sourcesContent":["import { Multiaddr } from '@multiformats/multiaddr'\nimport { convertToString } from '@multiformats/multiaddr/convert'\n\n// Protocols https://github.com/multiformats/multiaddr/blob/master/protocols.csv\n// code  size  name\n// 4     32    ip4\n// 41    128   ip6\nenum Protocol {\n  ip4 = 4,\n  ip6 = 41\n}\n\nexport function multiaddrToIPStr(multiaddr: Multiaddr): string | null {\n  for (const tuple of multiaddr.tuples()) {\n    switch (tuple[0]) {\n      case Protocol.ip4:\n      case Protocol.ip6:\n        return convertToString(tuple[0], tuple[1]!)\n    }\n  }\n\n  return null\n}\n"]},"metadata":{},"sourceType":"module"}